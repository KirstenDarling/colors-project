import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { setConstantValue } from "typescript";
import Modal from "../components/Modal/Modal";
import { Swiper, SwiperSlide } from "swiper/react";
import swiperStyles from "../styles/Swiper.module.css";

// Import Swiper styles
import "swiper/css";
import "swiper/css/scrollbar";

import { Scrollbar } from "swiper";

import activities from "../data/activities.json";

export default function Bored() {
  const [isOpen, setIsOpen] = useState(false);
  const [activityName, setActivityName] = useState("Insert Activity Name Here");
  const [costPerPerson, setCostPerPerson] = useState(0);
  const [stayingIn, setStayingIn] = useState(true);
  const [datesAvailable, setDatesAvailable] = useState("year round");
  const [weekendGetaway, setWeekendGetaway] = useState(true);
  const [neighborhood, setNeighborhood] = useState("any");
  const [isFoodOption, setIsFoodOption] = useState(true);
  const [hasDrinks, sethasDrinks] = useState(true);
  const [haveBeen, setHaveBeen] = useState(false);
  const [description, setDescription] = useState("");
  const [imageUrl, setImageUrl] = useState("/images/missing-image.jpg");
  const [imageHeight, setImageHeight] = useState(408);
  const [imageWidth, setImageWidth] = useState(670);

  function close() {
    setIsOpen(false);
  }

  function pickActivity() {
    console.log(activities);
    var winner = activities[Math.floor(Math.random() * activities.length)];
    console.log(winner);
    console.log(winner.activity);
    setIsOpen(true);
    setActivityName(winner.activity);
    setCostPerPerson(winner.costPerPerson);
    setStayingIn(winner.stayingIn);
    setDatesAvailable(winner.datesAvailable);
    setWeekendGetaway(winner.weekendGetaway);
    setNeighborhood(winner.neighborhood);
    setIsFoodOption(winner.isFoodOption);
    sethasDrinks(winner.hasDrinks);
    setHaveBeen(winner.haveBeen);
    setDescription(winner.description);
    setImageUrl(winner.imageUrl);
    setImageHeight(winner.imageHeight);
    setImageWidth(winner.imageWidth);
  }

  function pickFood() {
    var foodsOnly = activities.filter((obj) => {
      return obj.isFoodOption === true;
    });
    var foodWinner = foodsOnly[Math.floor(Math.random() * foodsOnly.length)];
    alert(foodWinner.activity);
  }

  function pickCheapStuff() {
    var cheapOnly = activities.filter((obj) => {
      return obj.costPerPerson === 0;
    });
    var cheapWinner = cheapOnly[Math.floor(Math.random() * cheapOnly.length)];
    alert(cheapWinner.activity);
  }

  function pickSomethingNew() {
    var newOnly = activities.filter((obj) => {
      return obj.haveBeen === false;
    });
    var newWinner = newOnly[Math.floor(Math.random() * newOnly.length)];
    alert(newWinner.activity);
  }

  function pickAStayingHomeActivity() {
    var stayingInOnly = activities.filter((obj) => {
      return obj.stayingIn === true;
    });
    var stayingInWinner =
      stayingInOnly[Math.floor(Math.random() * stayingInOnly.length)];
    alert(stayingInWinner.activity);
  }

  function pickAGoingOutActivity() {
    var goingOutOnly = activities.filter((obj) => {
      return obj.stayingIn === false;
    });
    var goingOutWinner =
      goingOutOnly[Math.floor(Math.random() * goingOutOnly.length)];
    alert(goingOutWinner.activity);
  }

  return (
    <div>
      <Head>
        <title>Activity Picker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* {activities.map((activity) => (
        <h1 key={activity.activity}>{activity.activity}</h1>
      ))} */}
      <div
        className="container"
        style={{
          width: "100%",
          height: "100vh",
          display: "flex",
          flexDirection: "column",
          justifyContent: "center",
          alignItems: "center",
        }}
      >
        <Swiper
          scrollbar={{
            hide: true,
          }}
          modules={[Scrollbar]}
          className={swiperStyles.mySwiper}
        >
          <SwiperSlide className={swiperStyles.slide}>
            <button
              className=""
              onClick={pickActivity}
              style={{ width: "20%" }}
            >
              Choose an activity
            </button>
          </SwiperSlide>
          <SwiperSlide className={swiperStyles.slide}>
            <button
              style={{ width: "20%", marginTop: "5%" }}
              onClick={pickFood}
            >
              Choose some food
            </button>
          </SwiperSlide>
          <SwiperSlide className={swiperStyles.slide}>
            {" "}
            <button
              style={{ width: "20%", marginTop: "5%" }}
              onClick={pickCheapStuff}
            >
              Choose a cheap activity
            </button>
          </SwiperSlide>
          <SwiperSlide className={swiperStyles.slide}>
            {" "}
            <button
              style={{ width: "20%", marginTop: "5%" }}
              onClick={pickSomethingNew}
            >
              Try something new
            </button>
          </SwiperSlide>
          <SwiperSlide className={swiperStyles.slide}>
            {" "}
            <button
              style={{ width: "20%", marginTop: "5%" }}
              onClick={pickAStayingHomeActivity}
            >
              Let&apos;s stay in
            </button>
          </SwiperSlide>
          <SwiperSlide className={swiperStyles.slide}>
            {" "}
            <button
              style={{ width: "20%", marginTop: "5%" }}
              onClick={pickAGoingOutActivity}
            >
              Let&apos;s go out
            </button>
          </SwiperSlide>
        </Swiper>
        <Modal
          isOpen={isOpen}
          close={close}
          activityName={activityName}
          costPerPerson={costPerPerson}
          stayingIn={stayingIn}
          datesAvailable={datesAvailable}
          weekendGetaway={weekendGetaway}
          neighborhood={neighborhood}
          isFoodOption={isFoodOption}
          hasDrinks={hasDrinks}
          haveBeen={haveBeen}
          description={description}
          imageUrl={imageUrl}
          imageHeight={imageHeight}
          imageWidth={imageWidth}
        />
      </div>
    </div>
  );
}
