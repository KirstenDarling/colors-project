{"version":3,"file":"Arrow.js","names":["Arrow","React","PureComponent","componentDidMount","props","from","to","api","map","zIndex","onClick","color","arrowRef","lineSymbol","path","SymbolPath","FORWARD_OPEN_ARROW","line","Polyline","icons","icon","offset","strokeOpacity","strokeColor","text","eventHandlers","click","event","addListener","current","componentDidUpdate","prevProps","latLngAreEqual","setPath","setMap","componentWillUnmount","remove","render"],"sources":["../../src/map/Arrow.tsx"],"sourcesContent":["import * as React from 'react'\nimport {LatLng} from '../types'\nimport {latLngAreEqual} from './util'\n\ninterface Props {\n  api: typeof window.google.maps\n  map: google.maps.Map\n  from: LatLng\n  to: LatLng\n  color?: {background: string; border: string; text: string}\n  zIndex?: number\n  arrowRef?: React.MutableRefObject<google.maps.Polyline | undefined>\n  onClick?: (event: google.maps.MapMouseEvent) => void\n}\n\nexport class Arrow extends React.PureComponent<Props> {\n  line: google.maps.Polyline | undefined\n\n  eventHandlers: {\n    click?: google.maps.MapsEventListener\n  } = {}\n\n  componentDidMount() {\n    const {from, to, api, map, zIndex, onClick, color, arrowRef} = this.props\n    const lineSymbol = {\n      path: api.SymbolPath.FORWARD_OPEN_ARROW,\n    }\n\n    this.line = new api.Polyline({\n      map,\n      zIndex,\n      path: [from, to],\n      icons: [{icon: lineSymbol, offset: '50%'}],\n      strokeOpacity: 0.55,\n      strokeColor: color ? color.text : 'black',\n    })\n\n    if (onClick) {\n      this.eventHandlers.click = api.event.addListener(this.line, 'click', onClick)\n    }\n\n    if (arrowRef) {\n      arrowRef.current = this.line\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.line) {\n      return\n    }\n\n    const {from, to, map} = this.props\n    if (!latLngAreEqual(prevProps.from, from) || !latLngAreEqual(prevProps.to, to)) {\n      this.line.setPath([from, to])\n    }\n\n    if (prevProps.map !== map) {\n      this.line.setMap(map)\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.line) {\n      this.line.setMap(null)\n    }\n\n    if (this.eventHandlers.click) {\n      this.eventHandlers.click.remove()\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    return null\n  }\n}\n"],"mappings":";;;;;;AAAA;AAEA;AAAqC;AAAA;AAAA;AAa9B,MAAMA,KAAK,SAASC,KAAK,CAACC,aAAa,CAAQ;EAAA;IAAA;IAAA;IAAA,uCAKhD,CAAC,CAAC;EAAA;EAENC,iBAAiB,GAAG;IAClB,kBAA+D,IAAI,CAACC,KAAK;MAAlEC,IAAI,eAAJA,IAAI;MAAEC,EAAE,eAAFA,EAAE;MAAEC,GAAG,eAAHA,GAAG;MAAEC,GAAG,eAAHA,GAAG;MAAEC,MAAM,eAANA,MAAM;MAAEC,OAAO,eAAPA,OAAO;MAAEC,KAAK,eAALA,KAAK;MAAEC,QAAQ,eAARA,QAAQ;IAC3D,IAAMC,UAAU,GAAG;MACjBC,IAAI,EAAEP,GAAG,CAACQ,UAAU,CAACC;IACvB,CAAC;IAED,IAAI,CAACC,IAAI,GAAG,IAAIV,GAAG,CAACW,QAAQ,CAAC;MAC3BV,GAAG;MACHC,MAAM;MACNK,IAAI,EAAE,CAACT,IAAI,EAAEC,EAAE,CAAC;MAChBa,KAAK,EAAE,CAAC;QAACC,IAAI,EAAEP,UAAU;QAAEQ,MAAM,EAAE;MAAK,CAAC,CAAC;MAC1CC,aAAa,EAAE,IAAI;MACnBC,WAAW,EAAEZ,KAAK,GAAGA,KAAK,CAACa,IAAI,GAAG;IACpC,CAAC,CAAC;IAEF,IAAId,OAAO,EAAE;MACX,IAAI,CAACe,aAAa,CAACC,KAAK,GAAGnB,GAAG,CAACoB,KAAK,CAACC,WAAW,CAAC,IAAI,CAACX,IAAI,EAAE,OAAO,EAAEP,OAAO,CAAC;IAC/E;IAEA,IAAIE,QAAQ,EAAE;MACZA,QAAQ,CAACiB,OAAO,GAAG,IAAI,CAACZ,IAAI;IAC9B;EACF;EAEAa,kBAAkB,CAACC,SAAgB,EAAE;IACnC,IAAI,CAAC,IAAI,CAACd,IAAI,EAAE;MACd;IACF;IAEA,mBAAwB,IAAI,CAACb,KAAK;MAA3BC,IAAI,gBAAJA,IAAI;MAAEC,EAAE,gBAAFA,EAAE;MAAEE,GAAG,gBAAHA,GAAG;IACpB,IAAI,CAAC,IAAAwB,oBAAc,EAACD,SAAS,CAAC1B,IAAI,EAAEA,IAAI,CAAC,IAAI,CAAC,IAAA2B,oBAAc,EAACD,SAAS,CAACzB,EAAE,EAAEA,EAAE,CAAC,EAAE;MAC9E,IAAI,CAACW,IAAI,CAACgB,OAAO,CAAC,CAAC5B,IAAI,EAAEC,EAAE,CAAC,CAAC;IAC/B;IAEA,IAAIyB,SAAS,CAACvB,GAAG,KAAKA,GAAG,EAAE;MACzB,IAAI,CAACS,IAAI,CAACiB,MAAM,CAAC1B,GAAG,CAAC;IACvB;EACF;EAEA2B,oBAAoB,GAAG;IACrB,IAAI,IAAI,CAAClB,IAAI,EAAE;MACb,IAAI,CAACA,IAAI,CAACiB,MAAM,CAAC,IAAI,CAAC;IACxB;IAEA,IAAI,IAAI,CAACT,aAAa,CAACC,KAAK,EAAE;MAC5B,IAAI,CAACD,aAAa,CAACC,KAAK,CAACU,MAAM,EAAE;IACnC;EACF;;EAEA;EACAC,MAAM,GAAG;IACP,OAAO,IAAI;EACb;AACF;AAAC"}