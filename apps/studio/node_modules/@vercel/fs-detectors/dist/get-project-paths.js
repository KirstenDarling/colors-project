"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectPaths = void 0;
const detect_framework_1 = require("./detect-framework");
const frameworks_1 = __importDefault(require("@vercel/frameworks"));
const MAX_DEPTH_TRAVERSE = 3;
const getProjectPaths = async ({ fs, path, skipPaths, depth = MAX_DEPTH_TRAVERSE, }) => {
    if (depth === 0)
        return [];
    const allPaths = [];
    const topPath = path ?? './';
    if (path && skipPaths?.includes(path)) {
        return allPaths;
    }
    const framework = await (0, detect_framework_1.detectFramework)({
        fs: fs.chdir(topPath),
        frameworkList: frameworks_1.default,
    });
    if (framework !== null)
        allPaths.push(topPath);
    if (depth > 1) {
        const directoryContents = await fs.readdir(topPath);
        const childDirectories = directoryContents.filter(stat => stat.type === 'dir' && !skipPaths?.includes(stat.path));
        const paths = (await Promise.all(childDirectories.map(({ path }) => {
            return (0, exports.getProjectPaths)({
                fs,
                path,
                depth: depth - 1,
                skipPaths,
            });
        }))).flat();
        return [...paths, ...allPaths];
    }
    return allPaths;
};
exports.getProjectPaths = getProjectPaths;
//# sourceMappingURL=get-project-paths.js.map