import type { Framework } from '@vercel/frameworks';
import { DetectorFilesystem } from './detectors/filesystem';
interface BaseFramework {
    slug: Framework['slug'];
    detectors?: Framework['detectors'];
}
export interface DetectFrameworkOptions {
    fs: DetectorFilesystem;
    frameworkList: readonly BaseFramework[];
}
export interface DetectFrameworkRecordOptions {
    fs: DetectorFilesystem;
    frameworkList: readonly Framework[];
}
export declare function detectFramework({ fs, frameworkList, }: DetectFrameworkOptions): Promise<string | null>;
/**
 * Framework with a `detectedVersion` specifying the version
 * or version range of the relevant package
 */
type VersionedFramework = Framework & {
    detectedVersion?: string;
};
export declare function detectFrameworkRecord({ fs, frameworkList, }: DetectFrameworkRecordOptions): Promise<VersionedFramework | null>;
export declare function detectFrameworkVersion(frameworkRecord: Framework): string | undefined;
export {};
