"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWorkspaces = void 0;
const path_1 = __importDefault(require("path"));
const workspace_managers_1 = require("./workspace-managers");
const detect_framework_1 = require("../detect-framework");
const MAX_DEPTH_TRAVERSE = 3;
const posixPath = path_1.default.posix;
async function getWorkspaces({ fs, depth = MAX_DEPTH_TRAVERSE, cwd = '/', }) {
    if (depth === 0)
        return [];
    const workspaceType = await (0, detect_framework_1.detectFramework)({
        fs,
        frameworkList: workspace_managers_1.workspaceManagers,
    });
    if (workspaceType === null) {
        const directoryContents = await fs.readdir('./');
        const childDirectories = directoryContents.filter(stat => stat.type === 'dir');
        return (await Promise.all(childDirectories.map(childDirectory => getWorkspaces({
            fs: fs.chdir(childDirectory.path),
            depth: depth - 1,
            cwd: posixPath.join(cwd, childDirectory.path),
        })))).flat();
    }
    return [
        {
            type: workspaceType,
            rootPath: cwd,
        },
    ];
}
exports.getWorkspaces = getWorkspaces;
//# sourceMappingURL=get-workspaces.js.map