{
  "version": 3,
  "sources": ["../../../sanity/src/desk/components/Delay.tsx", "../../../sanity/src/desk/components/RenderActionCollectionState.tsx", "../../../sanity/src/desk/components/RenderBadgeCollectionState.tsx", "../../../sanity/src/desk/components/paneRouter/PaneRouterProvider.tsx", "../../../sanity/src/desk/components/pane/helpers/_calcPaneResize.ts", "../../../sanity/src/desk/components/pane/helpers/_getDOMPath.ts", "../../../sanity/src/desk/components/pane/helpers/_sortElements.ts", "../../../sanity/src/desk/components/pane/paneLayoutController.ts", "../../../sanity/src/desk/components/pane/PaneLayout.tsx", "../../../sanity/src/desk/structureResolvers/PaneResolutionError.ts", "../../../sanity/src/desk/structureResolvers/assignId.ts", "../../../sanity/src/desk/structureResolvers/memoBind.ts", "../../../sanity/src/desk/structureResolvers/createPaneResolver.ts", "../../../sanity/src/desk/structureResolvers/resolveIntent.ts", "../../../sanity/src/desk/useDeskTool.ts", "../../../sanity/src/desk/structureResolvers/createResolvedPaneNodeStream.ts", "../../../sanity/src/desk/structureResolvers/useResolvedPanes.ts", "../../../sanity/src/desk/components/deskTool/intentResolver/utils.ts", "../../../sanity/src/desk/components/deskTool/intentResolver/IntentResolver.tsx", "../../../sanity/src/desk/components/deskTool/StructureError.tsx", "../../../sanity/src/desk/panes/unknown/UnknownPaneType.tsx", "../../../sanity/src/desk/panes/loading/getWaitMessages.ts", "../../../sanity/src/desk/panes/loading/LoadingPane.tsx", "../../../sanity/src/desk/panes/DeskToolPane.tsx", "../../../sanity/src/desk/panes/error/ErrorPane.tsx", "../../../sanity/src/desk/panes/document/DocumentOperationResults.tsx", "../../../sanity/src/desk/panes/document/menuItems.ts", "../../../sanity/src/desk/panes/document/usePreviewUrl.ts", "../../../sanity/src/desk/panes/document/getInitialValueTemplateOpts.ts", "../../../sanity/src/desk/panes/document/DocumentPaneProvider.tsx", "../../../sanity/src/desk/panes/document/timeline/constants.ts", "../../../sanity/src/desk/panes/document/timeline/helpers.ts", "../../../sanity/src/desk/panes/document/timeline/userAvatarStack.tsx", "../../../sanity/src/desk/panes/document/timeline/timelineItem.styled.tsx", "../../../sanity/src/desk/panes/document/timeline/timelineItem.tsx", "../../../sanity/src/desk/panes/document/timeline/timeline.styled.tsx", "../../../sanity/src/desk/panes/document/timeline/timeline.tsx", "../../../sanity/src/desk/panes/document/changesPanel/content/TimelineError.tsx", "../../../sanity/src/desk/panes/document/timeline/timelineMenu.tsx", "../../../sanity/src/desk/panes/document/changesPanel/content/LoadingContent.tsx", "../../../sanity/src/desk/panes/document/changesPanel/helpers.ts", "../../../sanity/src/desk/panes/document/changesPanel/ChangesPanel.tsx", "../../../sanity/src/desk/useDeskToolSetting.ts", "../../../sanity/src/desk/panes/document/inspectDialog/constants.ts", "../../../sanity/src/desk/panes/document/inspectDialog/helpers.ts", "../../../sanity/src/desk/panes/document/inspectDialog/InspectDialog.styles.tsx", "../../../sanity/src/desk/panes/document/inspectDialog/Search.tsx", "../../../sanity/src/desk/panes/document/inspectDialog/InspectDialog.tsx", "../../../sanity/src/desk/panes/document/documentPanel/ReferenceChangedBanner.tsx", "../../../sanity/src/desk/panes/document/documentPanel/PermissionCheckBanner.tsx", "../../../sanity/src/desk/panes/document/documentPanel/documentViews/useConditionalToast.ts", "../../../sanity/src/desk/panes/document/documentPanel/documentViews/FormView.tsx", "../../../sanity/src/desk/panes/document/documentPanel/header/DocumentHeaderTabs.tsx", "../../../sanity/src/desk/panes/document/documentPanel/header/ValidationMenu.tsx", "../../../sanity/src/desk/panes/document/documentPanel/header/DocumentHeaderTitle.tsx", "../../../sanity/src/desk/panes/document/documentPanel/header/DocumentPanelHeader.tsx", "../../../sanity/src/desk/panes/document/documentPanel/DocumentPanel.tsx", "../../../sanity/src/desk/panes/document/statusBar/dialogs/constants.ts", "../../../sanity/src/desk/panes/document/statusBar/dialogs/ConfirmDialog.tsx", "../../../sanity/src/desk/panes/document/statusBar/dialogs/ModalDialog.tsx", "../../../sanity/src/desk/panes/document/statusBar/dialogs/PopoverDialog.tsx", "../../../sanity/src/desk/panes/document/statusBar/ActionStateDialog.tsx", "../../../sanity/src/desk/panes/document/statusBar/ActionMenuButton.tsx", "../../../sanity/src/desk/panes/document/statusBar/DocumentStatusBarActions.tsx", "../../../sanity/src/desk/panes/document/statusBar/sparkline/DocumentBadges.tsx", "../../../sanity/src/desk/panes/document/statusBar/sparkline/PublishStatus.tsx", "../../../sanity/src/desk/panes/document/statusBar/sparkline/ReviewChangesButton/AnimatedStatusIcon.tsx", "../../../sanity/src/desk/panes/document/statusBar/sparkline/ReviewChangesButton/ReviewChangesButton.tsx", "../../../sanity/src/desk/panes/document/statusBar/sparkline/DocumentSparkline.tsx", "../../../sanity/src/desk/panes/document/statusBar/DocumentStatusBar.tsx", "../../../sanity/src/desk/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx", "../../../sanity/src/desk/panes/document/DocumentPane.tsx", "../../../sanity/src/desk/components/deskTool/NoDocumentTypesScreen.tsx", "../../../sanity/src/desk/components/deskTool/DeskTool.tsx", "../../../sanity/src/desk/components/deskTool/DeskToolBoundary.tsx"],
  "sourcesContent": ["import React, {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.ReactElement | (() => React.ReactElement)\n  ms?: number\n}): React.ReactElement {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n", "import React from 'react'\nimport {\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: DocumentActionProps\n  children: (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderActionCollectionState = (props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete} = props\n\n  return (\n    <GetHookCollectionState onReset={onActionComplete} hooks={actions} args={actionProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n", "import React from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = (props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps, ...rest} = props\n\n  return (\n    <GetHookCollectionState {...rest} hooks={badges} args={badgeProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n", "import {omit} from 'lodash'\nimport React, {useCallback, useMemo} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {RouterPaneGroup, RouterPanes, RouterPaneSibling} from '../../types'\nimport {ChildLink} from './ChildLink'\nimport {BackLink} from './BackLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {PaneRouterContextValue} from './types'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: React.ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent} = useRouter()\n  const routerState = useRouterState()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes]\n  )\n\n  const groupIndex = index - 1\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...(routerState || {}), panes: nextPanes}\n\n      setTimeout(() => navigate(nextRouterState), 0)\n\n      return nextRouterState\n    },\n    [groupIndex, navigate, routerPaneGroups, routerState, siblingIndex]\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex]\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex]\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {template: template.id, parentRefPath: pathToString(parentRefPath), type},\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups]\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      BackLink,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings\n        )\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      handleEditReference,\n      modifyCurrentGroup,\n      navigateIntent,\n      params,\n      payload,\n      routerPaneGroups,\n      setParams,\n      setPayload,\n      siblingIndex,\n    ]\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n", "import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {PaneConfigOpts, PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n", "/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n", "import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n", "import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {PaneConfigOpts, PaneData, PaneResizeCache, PaneResizeData} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  // eslint-disable-next-line complexity\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n", "import {CardProps, useElementRect} from '@sanity/ui'\nimport React, {useMemo, useState, useEffect} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, PaneLayoutState} from './paneLayoutController'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const controller = useMemo(() => createPaneLayoutController(), [])\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing]\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n", "import {RouterPaneSiblingContext} from '../types'\n\nexport interface PaneResolutionErrorOptions {\n  message: string\n  context?: RouterPaneSiblingContext\n  helpId?: string\n  cause?: Error\n}\n\n/**\n * An error thrown during pane resolving. This error is meant to be bubbled up\n * through react and handled in an error boundary. It includes a `cause`\n * property which is the original error caught\n */\nexport class PaneResolutionError extends Error {\n  cause: Error | undefined\n  context: RouterPaneSiblingContext | undefined\n  helpId: string | undefined\n\n  constructor({message, context, helpId, cause}: PaneResolutionErrorOptions) {\n    super(message)\n    this.context = context\n    this.helpId = helpId\n    this.cause = cause\n  }\n}\n", "import {nanoid} from 'nanoid'\n\n// `WeakMap`s require the first type param to extend `object`\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst randomIdCache = new WeakMap<object, string>()\n\n/**\n * given an object, this function randomly generates an ID and returns it. this\n * result is then saved in a WeakMap so subsequent requests for the same object\n * will receive the same ID\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function assignId(obj: object): string {\n  const cachedValue = randomIdCache.get(obj)\n  if (cachedValue) return cachedValue\n\n  const id = nanoid()\n  randomIdCache.set(obj, id)\n  return id\n}\n", "/* eslint-disable @typescript-eslint/ban-types */\n\n// `WeakMap`s require the first type param to extend `object`\nconst bindCache = new WeakMap<object, Map<string, Function>>()\n\n/**\n * An alternative to `obj.method.bind(obj)` that utilizes a weakmap to return\n * the same memory reference for sequent binds.\n */\nexport function memoBind<\n  T extends object,\n  K extends keyof {[P in keyof T]: T[P] extends Function ? T[P] : never}\n>(obj: T, methodKey: K): T[K]\nexport function memoBind(obj: Record<string, unknown>, methodKey: string): Function {\n  const boundMethods = bindCache.get(obj) || new Map<string, Function>()\n  if (boundMethods) {\n    const bound = boundMethods.get(methodKey)\n    if (bound) return bound\n  }\n\n  const method = obj[methodKey]\n\n  if (typeof method !== 'function') {\n    throw new Error(\n      `Expected property \\`${methodKey}\\` to be a function but got ${typeof method} instead.`\n    )\n  }\n\n  const bound = method.bind(obj)\n  boundMethods.set(methodKey, bound)\n  bindCache.set(obj, boundMethods)\n\n  return bound\n}\n", "import {from, isObservable, Observable, of as observableOf, Subscribable} from 'rxjs'\n\nimport {publishReplay, refCount, switchMap} from 'rxjs/operators'\n\nimport {PaneNode, RouterPaneSiblingContext, UnresolvedPaneNode} from '../types'\nimport {PaneResolutionError} from './PaneResolutionError'\nimport {isRecord} from 'sanity'\n\ninterface Serializable {\n  serialize: (...args: never[]) => unknown\n}\n\nconst isPromise = (thing: any): thing is PromiseLike<unknown> => {\n  return !!thing && typeof thing?.then === 'function'\n}\nconst isSerializable = (thing: unknown): thing is Serializable => {\n  if (!isRecord(thing)) return false\n  return typeof thing.serialize === 'function'\n}\n\n/**\n * The signature of the function used to take an `UnresolvedPaneNode` and turn\n * it into an `Observable<PaneNode>`.\n */\nexport type PaneResolver = (\n  unresolvedPane: UnresolvedPaneNode | undefined,\n  context: RouterPaneSiblingContext,\n  flatIndex: number\n) => Observable<PaneNode>\n\nexport type PaneResolverMiddleware = (paneResolveFn: PaneResolver) => PaneResolver\n\nconst rethrowWithPaneResolutionErrors: PaneResolverMiddleware =\n  (next) => (unresolvedPane, context, flatIndex) => {\n    try {\n      return next(unresolvedPane, context, flatIndex)\n    } catch (e) {\n      // re-throw errors that are already `PaneResolutionError`s\n      if (e instanceof PaneResolutionError) {\n        throw e\n      }\n\n      // anything else, wrap with `PaneResolutionError` and set the underlying\n      // error as a the `cause`\n      throw new PaneResolutionError({\n        message: typeof e?.message === 'string' ? e.message : '',\n        context,\n        cause: e,\n      })\n    }\n  }\n\nconst wrapWithPublishReplay: PaneResolverMiddleware =\n  (next) =>\n  (...args) => {\n    return next(...args).pipe(\n      // need to add publishReplay + refCount to ensure new subscribers always\n      // get an emission. without this, memoized observables may get stuck\n      // waiting for their first emissions resulting in a loading pane\n      publishReplay(1),\n      refCount()\n    )\n  }\n\nexport function createPaneResolver(middleware: PaneResolverMiddleware): PaneResolver {\n  // note: this API includes a middleware/wrapper function because the function\n  // is recursive. we want to call the wrapped version of the function always\n  // (even inside of nested calls) so the identifier invoked for the recursion\n  // should be the wrapped version\n  const resolvePane = rethrowWithPaneResolutionErrors(\n    wrapWithPublishReplay(\n      middleware((unresolvedPane, context, flatIndex) => {\n        if (!unresolvedPane) {\n          throw new PaneResolutionError({\n            message: 'Pane returned no child',\n            context,\n            helpId: 'structure-item-returned-no-child',\n          })\n        }\n\n        if (isPromise(unresolvedPane) || isObservable(unresolvedPane)) {\n          return from(unresolvedPane).pipe(\n            switchMap((result) => resolvePane(result, context, flatIndex))\n          )\n        }\n\n        if (isSerializable(unresolvedPane)) {\n          return resolvePane(unresolvedPane.serialize(context), context, flatIndex)\n        }\n\n        if (typeof unresolvedPane === 'function') {\n          return resolvePane(unresolvedPane(context.id, context), context, flatIndex)\n        }\n\n        return observableOf(unresolvedPane)\n      })\n    )\n  )\n\n  return resolvePane\n}\n", "import {omit} from 'lodash'\nimport {firstValueFrom, Observable} from 'rxjs'\nimport {PaneNode, RouterPanes, RouterPaneSiblingContext, UnresolvedPaneNode} from '../types'\nimport {StructureContext} from '../structureBuilder'\nimport {assignId} from './assignId'\nimport {memoBind} from './memoBind'\nimport {createPaneResolver, PaneResolverMiddleware} from './createPaneResolver'\n\ninterface TraverseOptions {\n  unresolvedPane: UnresolvedPaneNode | undefined\n  intent: string\n  params: {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n  parent: PaneNode | null\n  path: string[]\n  currentId: string\n  flatIndex: number\n  levelIndex: number\n  structureContext: StructureContext\n}\n\nexport interface ResolveIntentOptions {\n  rootPaneNode?: UnresolvedPaneNode\n  intent: string\n  params: {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n  structureContext: StructureContext\n}\n\n/**\n * Resolves an intent request using breadth first search. If a match is not\n * found, the intent will resolve to the fallback editor.\n *\n * A match is found if:\n * 1. the `PaneNode` is of type `document` and the its ID matches the intent ID\n * 2. the `PaneNode` is of type `documentList` and the `schemaTypeName` matches\n * 3. the `PaneNode`'s `canHandleIntent` method returns true\n *\n * If a `PaneNode` of type `list` is found, it will be searched for a match.\n *\n * @see PaneNode\n */\nexport async function resolveIntent(options: ResolveIntentOptions): Promise<RouterPanes> {\n  const resolvedPaneCache = new Map<string, Observable<PaneNode>>()\n\n  // this is a simple version of the memoizer in `createResolvedPaneNodeStream`\n  const memoize: PaneResolverMiddleware = (nextFn) => (unresolvedPane, context, flatIndex) => {\n    const key = unresolvedPane && `${assignId(unresolvedPane)}-${context.path.join('__')}`\n    const cachedResolvedPane = key && resolvedPaneCache.get(key)\n    if (cachedResolvedPane) return cachedResolvedPane\n\n    const result = nextFn(unresolvedPane, context, flatIndex)\n    if (key) resolvedPaneCache.set(key, result)\n    return result\n  }\n\n  const resolvePane = createPaneResolver(memoize)\n\n  const fallbackEditorPanes: RouterPanes = [\n    [\n      {\n        id: `__edit__${options.params.id}`,\n        params: {...omit(options.params, ['id']), type: options.params.type},\n        payload: options.payload,\n      },\n    ],\n  ]\n\n  async function traverse({\n    currentId,\n    flatIndex,\n    intent,\n    params,\n    parent,\n    path,\n    payload,\n    unresolvedPane,\n    levelIndex,\n    structureContext,\n  }: TraverseOptions): Promise<\n    Array<{panes: RouterPanes; depthIndex: number; levelIndex: number}>\n  > {\n    if (!unresolvedPane) return []\n\n    const {id: targetId, type: schemaTypeName, ...otherParams} = params\n    const context: RouterPaneSiblingContext = {\n      id: currentId,\n      splitIndex: 0,\n      parent,\n      path,\n      index: flatIndex,\n      params: {},\n      payload: undefined,\n      structureContext,\n    }\n    const resolvedPane = await firstValueFrom(resolvePane(unresolvedPane, context, flatIndex))\n\n    // if the resolved pane is a document pane and the pane's ID matches then\n    // resolve the intent to the current path\n    if (resolvedPane.type === 'document' && resolvedPane.id === targetId) {\n      return [\n        {\n          panes: [\n            ...path.slice(0, path.length - 1).map((i) => [{id: i}]),\n            [{id: targetId, params: otherParams, payload}],\n          ],\n          depthIndex: path.length,\n          levelIndex,\n        },\n      ]\n    }\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `getIntentState.ts`\n    if (\n      // if the resolve pane's `canHandleIntent` returns true, then resolve\n      resolvedPane.canHandleIntent?.(intent, params, {\n        pane: resolvedPane,\n        index: flatIndex,\n      }) ||\n      // if the pane's `canHandleIntent` did not return true, then match against\n      // this default case. we will resolve the intent if:\n      (resolvedPane.type === 'documentList' &&\n        // 1. the schema type matches (this required for the document to render)\n        resolvedPane.schemaTypeName === schemaTypeName &&\n        // 2. the filter is the default filter.\n        //\n        // NOTE: this case is to prevent false positive matches where the user\n        // has configured a more specific filter for a particular type. In that\n        // case, the user can implement their own `canHandleIntent` function\n        resolvedPane.options.filter === '_type == $type')\n    ) {\n      return [\n        {\n          panes: [\n            // map the current path to router panes\n            ...path.map((id) => [{id}]),\n            // then augment with the intents IDs and params\n            [{id: params.id, params: otherParams, payload}],\n          ],\n          depthIndex: path.length,\n          levelIndex,\n        },\n      ]\n    }\n\n    if (resolvedPane.type === 'list' && resolvedPane.child && resolvedPane.items) {\n      return (\n        await Promise.all(\n          resolvedPane.items.map((item, nextLevelIndex) => {\n            if (item.type === 'divider') return Promise.resolve([])\n\n            return traverse({\n              currentId: item._id || item.id,\n              flatIndex: flatIndex + 1,\n              intent,\n              params,\n              parent: resolvedPane,\n              path: [...path, item.id],\n              payload,\n              unresolvedPane:\n                typeof resolvedPane.child === 'function'\n                  ? memoBind(resolvedPane, 'child')\n                  : resolvedPane.child,\n              levelIndex: nextLevelIndex,\n              structureContext,\n            })\n          })\n        )\n      ).flat()\n    }\n\n    return []\n  }\n\n  const matchingPanes = await traverse({\n    currentId: 'root',\n    flatIndex: 0,\n    levelIndex: 0,\n    intent: options.intent,\n    params: options.params,\n    parent: null,\n    path: [],\n    payload: options.payload,\n    unresolvedPane: options.rootPaneNode,\n    structureContext: options.structureContext,\n  })\n\n  const closestPaneToRoot = matchingPanes.sort((a, b) => {\n    // break ties with the level index\n    if (a.depthIndex === b.depthIndex) return a.levelIndex - b.levelIndex\n    return a.depthIndex - b.depthIndex\n  })[0]\n\n  if (closestPaneToRoot) {\n    return closestPaneToRoot.panes\n  }\n\n  return fallbackEditorPanes\n}\n", "import {useContext} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {DeskToolContextValue} from './types'\n\nexport function useDeskTool(): DeskToolContextValue {\n  const deskTool = useContext(DeskToolContext)\n\n  if (!deskTool) throw new Error(`DeskTool: missing context value`)\n\n  return deskTool\n}\n", "import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {isEqual} from 'lodash'\nimport {Observable, NEVER, of as observableOf, concat} from 'rxjs'\nimport {switchMap, map, scan, distinctUntilChanged, pairwise, startWith} from 'rxjs/operators'\nimport {\n  DocumentPaneNode,\n  PaneNode,\n  RouterPaneSiblingContext,\n  RouterPanes,\n  RouterPaneSibling,\n  PaneNodeResolver,\n  UnresolvedPaneNode,\n} from '../types'\nimport {StructureContext} from '../structureBuilder'\nimport {assignId} from './assignId'\nimport {createPaneResolver, PaneResolver, PaneResolverMiddleware} from './createPaneResolver'\nimport {memoBind} from './memoBind'\nimport {PaneResolutionError} from './PaneResolutionError'\n\n/**\n * the fallback editor child that is implicitly inserted into the structure tree\n * if the id starts with `__edit__`\n */\nconst fallbackEditorChild: PaneNodeResolver = (nodeId, context): DocumentPaneNode => {\n  const id = nodeId.replace(/^__edit__/, '')\n  const {\n    params,\n    payload,\n    structureContext: {resolveDocumentNode},\n  } = context\n  const {type, template} = params\n\n  if (!type) {\n    throw new Error(\n      `Document type for document with ID ${id} was not provided in the router params.`\n    )\n  }\n\n  let defaultDocumentBuilder = resolveDocumentNode({schemaType: type, documentId: id})\n\n  defaultDocumentBuilder = defaultDocumentBuilder.id('editor').title('Editor')\n\n  if (template) {\n    defaultDocumentBuilder = defaultDocumentBuilder.initialValueTemplate(\n      template,\n      payload as {[key: string]: unknown}\n    )\n  }\n\n  return defaultDocumentBuilder.serialize() as DocumentPaneNode\n}\n\n/**\n * takes in a `RouterPaneSiblingContext` and returns a normalized string\n * representation that can be used for comparisons\n */\nfunction hashContext(context: RouterPaneSiblingContext): string {\n  return `contextHash(${JSON.stringify({\n    id: context.id,\n    parentId: parent && assignId(parent),\n    path: context.path,\n    index: context.index,\n    splitIndex: context.splitIndex,\n    serializeOptionsIndex: context.serializeOptions?.index,\n    serializeOptionsPath: context.serializeOptions?.path,\n  })})`\n}\n\n/**\n * takes in `ResolvedPaneMeta` and returns a normalized string representation\n * that can be used for comparisons\n */\nconst hashResolvedPaneMeta = (meta: ResolvedPaneMeta): string => {\n  const normalized = {\n    type: meta.type,\n    id: meta.routerPaneSibling.id,\n    params: meta.routerPaneSibling.params || {},\n    payload: meta.routerPaneSibling.payload || null,\n    flatIndex: meta.flatIndex,\n    groupIndex: meta.groupIndex,\n    siblingIndex: meta.siblingIndex,\n    path: meta.path,\n    paneNode: meta.type === 'resolvedMeta' ? assignId(meta.paneNode) : null,\n  }\n\n  return `metaHash(${JSON.stringify(normalized)})`\n}\n\n/**\n * Represents one flattened \"router pane\", including the source group and\n * sibling indexes.\n *\n * @see RouterPanes\n */\ninterface FlattenedRouterPane {\n  routerPaneSibling: RouterPaneSibling\n  flatIndex: number\n  groupIndex: number\n  siblingIndex: number\n}\n\n/**\n * The state of the accumulator used to store and manage memo cache state\n */\ninterface CacheState {\n  /**\n   * Holds the memoization results keyed by a combination of `assignId` and a\n   * context hash.\n   */\n  resolvedPaneCache: Map<string, Observable<PaneNode>>\n  /**\n   * Acts as a dictionary that stores cache keys by their flat index. This is\n   * used to clean up the cache between different branches in the pane\n   * structure.\n   *\n   * @see createResolvedPaneNodeStream look inside the `scan` where `wrapFn` is\n   * defined\n   */\n  cacheKeysByFlatIndex: Array<Set<string>>\n  /**\n   * The resulting memoized `PaneResolver` function. This function closes over\n   * the `resolvedPaneCache`.\n   */\n  resolvePane: PaneResolver\n  flattenedRouterPanes: FlattenedRouterPane[]\n}\n\nexport interface CreateResolvedPaneNodeStreamOptions {\n  /**\n   * an input stream of `RouterPanes`\n   * @see RouterPanes\n   */\n  routerPanesStream: Observable<RouterPanes>\n  /**\n   * any `UnresolvedPaneNode` (could be an observable, promise, pane resolver etc)\n   */\n  rootPaneNode: UnresolvedPaneNode\n  /** used primarily for testing */\n  initialCacheState?: CacheState\n\n  structureContext: StructureContext\n}\n\n/**\n * The result of pane resolving\n */\nexport type ResolvedPaneMeta = {\n  groupIndex: number\n  siblingIndex: number\n  flatIndex: number\n  routerPaneSibling: RouterPaneSibling\n  path: string[]\n} & ({type: 'loading'; paneNode: null} | {type: 'resolvedMeta'; paneNode: PaneNode})\n\ninterface ResolvePaneTreeOptions {\n  resolvePane: PaneResolver\n  flattenedRouterPanes: FlattenedRouterPane[]\n  unresolvedPane: UnresolvedPaneNode | undefined\n  parent: PaneNode | null\n  path: string[]\n  structureContext: StructureContext\n}\n\n/**\n * A recursive pane resolving function. Starts at one unresolved pane node and\n * continues until there is no more flattened router panes that can be used as\n * input to the unresolved panes.\n */\nfunction resolvePaneTree({\n  unresolvedPane,\n  flattenedRouterPanes,\n  parent,\n  path,\n  resolvePane,\n  structureContext,\n}: ResolvePaneTreeOptions): Observable<ResolvedPaneMeta[]> {\n  const [current, ...rest] = flattenedRouterPanes\n  const next = rest[0] as FlattenedRouterPane | undefined\n\n  const context: RouterPaneSiblingContext = {\n    id: current.routerPaneSibling.id,\n    splitIndex: current.siblingIndex,\n    parent,\n    path: [...path, current.routerPaneSibling.id],\n    index: current.flatIndex,\n    params: current.routerPaneSibling.params || {},\n    payload: current.routerPaneSibling.payload,\n    structureContext,\n  }\n\n  try {\n    return resolvePane(unresolvedPane, context, current.flatIndex).pipe(\n      // this switch map receives a resolved pane\n      switchMap((paneNode) => {\n        // we can create a `resolvedMeta` type using it\n        const resolvedPaneMeta: ResolvedPaneMeta = {\n          type: 'resolvedMeta',\n          ...current,\n          paneNode: paneNode,\n          path: context.path,\n        }\n\n        // for the other unresolved panes, we can create \"loading panes\"\n        const loadingPanes = rest.map((i, restIndex) => {\n          const loadingPanePath = [\n            ...context.path,\n            ...rest.slice(restIndex).map((_, currentIndex) => `[${i.flatIndex + currentIndex}]`),\n          ]\n\n          const loadingPane: ResolvedPaneMeta = {\n            type: 'loading',\n            path: loadingPanePath,\n            paneNode: null,\n            ...i,\n          }\n\n          return loadingPane\n        })\n\n        if (!rest.length) {\n          return observableOf([resolvedPaneMeta])\n        }\n\n        let nextStream\n\n        if (\n          // the fallback editor case\n          next?.routerPaneSibling.id.startsWith('__edit__')\n        ) {\n          nextStream = resolvePaneTree({\n            unresolvedPane: fallbackEditorChild,\n            flattenedRouterPanes: rest,\n            parent,\n            path: context.path,\n            resolvePane,\n            structureContext,\n          })\n        } else if (current.groupIndex === next?.groupIndex) {\n          // if the next flattened router pane has the same group index as the\n          // current flattened router pane, then the next flattened router pane\n          // belongs to the same group (i.e. it is a split pane)\n          nextStream = resolvePaneTree({\n            unresolvedPane,\n            flattenedRouterPanes: rest,\n            parent,\n            path,\n            resolvePane,\n            structureContext,\n          })\n        } else {\n          // normal children resolving\n          nextStream = resolvePaneTree({\n            unresolvedPane:\n              typeof paneNode.child === 'function'\n                ? (memoBind(paneNode, 'child') as PaneNodeResolver)\n                : paneNode.child,\n            flattenedRouterPanes: rest,\n            parent: paneNode,\n            path: context.path,\n            resolvePane,\n            structureContext,\n          })\n        }\n\n        return concat(\n          // we emit the loading panes first in a concat (this emits immediately)\n          observableOf([resolvedPaneMeta, ...loadingPanes]),\n          // then whenever the next stream is done, the results will be combined.\n          nextStream.pipe(map((nextResolvedPanes) => [resolvedPaneMeta, ...nextResolvedPanes]))\n        )\n      })\n    )\n  } catch (e) {\n    if (e instanceof PaneResolutionError) {\n      if (e.context) {\n        console.warn(\n          `Pane resolution error at index ${e.context.index}${\n            e.context.splitIndex > 0 ? ` for split pane index ${e.context.splitIndex}` : ''\n          }: ${e.message}${e.helpId ? ` - see ${generateHelpUrl(e.helpId)}` : ''}`,\n          e\n        )\n      }\n\n      if (e.helpId === 'structure-item-returned-no-child') {\n        // returning an observable of an empty array will remove loading panes\n        // note: this one intentionally does not throw\n        return observableOf([])\n      }\n    }\n\n    throw e\n  }\n}\n\n/**\n * Takes in a stream of `RouterPanes` and an unresolved root pane and returns\n * a stream of `ResolvedPaneMeta`\n */\nexport function createResolvedPaneNodeStream({\n  routerPanesStream,\n  rootPaneNode,\n  initialCacheState = {\n    cacheKeysByFlatIndex: [],\n    flattenedRouterPanes: [],\n    resolvedPaneCache: new Map(),\n    resolvePane: () => NEVER,\n  },\n  structureContext,\n}: CreateResolvedPaneNodeStreamOptions): Observable<ResolvedPaneMeta[]> {\n  const resolvedPanes$ = routerPanesStream.pipe(\n    // add in implicit \"root\" router pane\n    map((rawRouterPanes) => [[{id: 'root'}], ...rawRouterPanes]),\n    // create flattened router panes\n    map((routerPanes) => {\n      const flattenedRouterPanes: FlattenedRouterPane[] = routerPanes\n        .flatMap((routerPaneGroup, groupIndex) =>\n          routerPaneGroup.map((routerPaneSibling, siblingIndex) => ({\n            routerPaneSibling,\n            groupIndex,\n            siblingIndex,\n          }))\n        )\n        // add in the flat index\n        .map((i, index) => ({...i, flatIndex: index}))\n\n      return flattenedRouterPanes\n    }),\n    // calculate a \"diffIndex\" used for clearing the memo cache\n    startWith([] as FlattenedRouterPane[]),\n    pairwise(),\n    map(([prev, curr]) => {\n      for (let i = 0; i < curr.length; i++) {\n        const prevValue = prev[i]\n        const currValue = curr[i]\n\n        if (!isEqual(prevValue, currValue)) {\n          return {\n            flattenedRouterPanes: curr,\n            diffIndex: i,\n          }\n        }\n      }\n\n      return {\n        flattenedRouterPanes: curr,\n        diffIndex: curr.length,\n      }\n    }),\n    // create the memoized `resolvePane` function and manage the memo cache\n    scan((acc, next) => {\n      const {cacheKeysByFlatIndex, resolvedPaneCache} = acc\n      const {flattenedRouterPanes, diffIndex} = next\n\n      // use the `cacheKeysByFlatIndex` like a dictionary to find cache keys to\n      // and cache keys to delete\n      const beforeDiffIndex = cacheKeysByFlatIndex.slice(0, diffIndex + 1)\n      const afterDiffIndex = cacheKeysByFlatIndex.slice(diffIndex + 1)\n\n      const keysToKeep = new Set(beforeDiffIndex.flatMap((keySet) => Array.from(keySet)))\n      const keysToDelete = afterDiffIndex\n        .flatMap((keySet) => Array.from(keySet))\n        .filter((key) => !keysToKeep.has(key))\n\n      for (const key of keysToDelete) {\n        resolvedPaneCache.delete(key)\n      }\n\n      // create a memoizing pane resolver middleware that utilizes the cache\n      // maintained above. this keeps the cache from growing indefinitely\n      const memoize: PaneResolverMiddleware = (nextFn) => (unresolvedPane, context, flatIndex) => {\n        const key = unresolvedPane && `${assignId(unresolvedPane)}-${hashContext(context)}`\n        const cachedResolvedPane = key && resolvedPaneCache.get(key)\n        if (cachedResolvedPane) return cachedResolvedPane\n\n        const result = nextFn(unresolvedPane, context, flatIndex)\n        if (!key) return result\n\n        const cacheKeySet = cacheKeysByFlatIndex[flatIndex] || new Set()\n        cacheKeySet.add(key)\n        cacheKeysByFlatIndex[flatIndex] = cacheKeySet\n        resolvedPaneCache.set(key, result)\n        return result\n      }\n\n      return {\n        flattenedRouterPanes,\n        cacheKeysByFlatIndex,\n        resolvedPaneCache,\n        resolvePane: createPaneResolver(memoize),\n      }\n    }, initialCacheState),\n    // run the memoized, recursive resolving\n    switchMap(({flattenedRouterPanes, resolvePane}) =>\n      resolvePaneTree({\n        unresolvedPane: rootPaneNode,\n        flattenedRouterPanes,\n        parent: null,\n        path: [],\n        resolvePane,\n        structureContext,\n      })\n    )\n  )\n\n  // after we've created a stream of `ResolvedPaneMeta[]`, we need to clean up\n  // the results to remove unwanted loading panes and prevent unnecessary\n  // emissions\n  return resolvedPanes$.pipe(\n    // this diffs the previous emission with the current one. if there is a new\n    // loading pane at the same position where a previous pane already had a\n    // resolved value (looking at the IDs to compare), then return the previous\n    // pane instead of the loading pane\n    scan(\n      (prev, next) =>\n        next.map((nextPane, index) => {\n          const prevPane = prev[index] as ResolvedPaneMeta | undefined\n          if (!prevPane) return nextPane\n          if (nextPane.type !== 'loading') return nextPane\n\n          if (prevPane.routerPaneSibling.id === nextPane.routerPaneSibling.id) {\n            return prevPane\n          }\n          return nextPane\n        }),\n      [] as ResolvedPaneMeta[]\n    ),\n    // this prevents duplicate emissions\n    distinctUntilChanged((prev, next) => {\n      if (prev.length !== next.length) return false\n\n      for (let i = 0; i < next.length; i++) {\n        const prevValue = prev[i]\n        const nextValue = next[i]\n        if (hashResolvedPaneMeta(prevValue) !== hashResolvedPaneMeta(nextValue)) {\n          return false\n        }\n      }\n\n      return true\n    })\n  )\n}\n", "import {useEffect, useMemo, useState} from 'react'\nimport {ReplaySubject} from 'rxjs'\nimport {map} from 'rxjs/operators'\nimport {LOADING_PANE} from '../constants'\nimport {RouterPanes, PaneNode, RouterPaneGroup} from '../types'\nimport {useDeskTool} from '../useDeskTool'\nimport {createResolvedPaneNodeStream} from './createResolvedPaneNodeStream'\nimport {RouterState, useRouter} from 'sanity/router'\n\ninterface PaneData {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  key: string\n  pane: PaneNode | typeof LOADING_PANE\n  params: Record<string, string | undefined>\n  path: string\n  payload: unknown\n  selected: boolean\n  siblingIndex: number\n}\n\ninterface Panes {\n  paneDataItems: PaneData[]\n  routerPanes: RouterPanes\n  resolvedPanes: (PaneNode | typeof LOADING_PANE)[]\n}\n\nfunction useRouterPanesStream() {\n  const routerStateSubject = useMemo(() => new ReplaySubject<RouterState>(1), [])\n  const routerPanes$ = useMemo(\n    () =>\n      routerStateSubject\n        .asObservable()\n        .pipe(map((_routerState) => (_routerState?.panes || []) as RouterPanes)),\n    [routerStateSubject]\n  )\n  const {state: routerState} = useRouter()\n  useEffect(() => {\n    routerStateSubject.next(routerState)\n  }, [routerState, routerStateSubject])\n\n  return routerPanes$\n}\n\nexport function useResolvedPanes(): Panes {\n  // used to propagate errors from async effect. throwing inside of the render\n  // will bubble the error to react where it can be picked up by standard error\n  // boundaries\n  const [error, setError] = useState<unknown>()\n  if (error) throw error\n\n  const {structureContext, rootPaneNode} = useDeskTool()\n\n  const [data, setData] = useState<Panes>({\n    paneDataItems: [],\n    resolvedPanes: [],\n    routerPanes: [],\n  })\n\n  const routerPanesStream = useRouterPanesStream()\n\n  useEffect(() => {\n    const resolvedPanes$ = createResolvedPaneNodeStream({\n      rootPaneNode,\n      routerPanesStream,\n      structureContext,\n    }).pipe(\n      map((resolvedPanes) => {\n        const routerPanes = resolvedPanes.reduce<RouterPanes>((acc, next) => {\n          const currentGroup = acc[next.groupIndex] || []\n          currentGroup[next.siblingIndex] = next.routerPaneSibling\n          acc[next.groupIndex] = currentGroup\n          return acc\n        }, [])\n\n        const groupsLen = routerPanes.length\n\n        const paneDataItems = resolvedPanes.map((pane) => {\n          const {groupIndex, flatIndex, siblingIndex, routerPaneSibling, path} = pane\n          const itemId = routerPaneSibling.id\n          const nextGroup = routerPanes[groupIndex + 1] as RouterPaneGroup | undefined\n\n          const paneDataItem: PaneData = {\n            active: groupIndex === groupsLen - 2,\n            childItemId: nextGroup?.[0].id ?? null,\n            index: flatIndex,\n            itemId: routerPaneSibling.id,\n            groupIndex,\n            key: `${\n              pane.type === 'loading' ? 'unknown' : pane.paneNode.id\n            }-${itemId}-${siblingIndex}`,\n            pane: pane.type === 'loading' ? LOADING_PANE : pane.paneNode,\n            params: routerPaneSibling.params || {},\n            path: path.join(';'),\n            payload: routerPaneSibling.payload,\n            selected: flatIndex === resolvedPanes.length - 1,\n            siblingIndex,\n          }\n\n          return paneDataItem\n        })\n\n        return {\n          paneDataItems,\n          routerPanes,\n          resolvedPanes: paneDataItems.map((pane) => pane.pane),\n        }\n      })\n    )\n\n    const subscription = resolvedPanes$.subscribe({\n      next: (result) => setData(result),\n      error: (e) => setError(e),\n    })\n\n    return () => subscription.unsubscribe()\n  }, [rootPaneNode, routerPanesStream, structureContext])\n\n  return data\n}\n", "import {uuid} from '@sanity/uuid'\nimport {first} from 'rxjs/operators'\nimport {firstValueFrom, Observable} from 'rxjs'\nimport {PaneResolutionError} from '../../../structureResolvers'\nimport {getPublishedId, DocumentStore} from 'sanity'\n\nexport function removeDraftPrefix(documentId: string): string {\n  const publishedId = getPublishedId(documentId)\n\n  if (publishedId !== documentId) {\n    console.warn(\n      'Removed unexpected draft id in document link: All links to documents should have the ' +\n        '`drafts.`-prefix removed and something appears to have made an intent link to `%s`',\n      documentId\n    )\n  }\n\n  return publishedId\n}\n\nexport async function ensureDocumentIdAndType(\n  documentStore: DocumentStore,\n  id: string | undefined,\n  type: string | undefined\n): Promise<{id: string; type: string}> {\n  if (id && type) return {id, type}\n  if (!id && type) return {id: uuid(), type}\n  if (id && !type) {\n    const resolvedType = await firstValueFrom(\n      documentStore.resolveTypeForDocument(id) as Observable<string>\n    )\n\n    return {id, type: resolvedType}\n  }\n\n  throw new PaneResolutionError({\n    message: 'Neither document `id` or `type` was provided when trying to resolve intent.',\n  })\n}\n", "import {memo, useCallback, useEffect, useState} from 'react'\nimport {resolveIntent} from '../../../structureResolvers'\nimport {useDeskTool} from '../../../useDeskTool'\nimport {ensureDocumentIdAndType} from './utils'\nimport {useRouter, useRouterState} from 'sanity/router'\nimport {isRecord, useDocumentStore} from 'sanity'\n\nconst EMPTY_RECORD: Record<string, unknown> = {}\n\n/**\n * A component that receives an intent from props and redirects to the resolved\n * intent location (while showing a loading spinner during the process)\n */\nexport const IntentResolver = memo(function IntentResolver() {\n  const {navigate} = useRouter()\n  const maybeIntent = useRouterState(\n    useCallback((routerState) => {\n      const intentName = typeof routerState.intent === 'string' ? routerState.intent : undefined\n      return intentName\n        ? {\n            intent: intentName,\n            params: isRecord(routerState.params) ? routerState.params : EMPTY_RECORD,\n            payload: routerState.payload,\n          }\n        : undefined\n    }, [])\n  )\n  const {rootPaneNode, structureContext} = useDeskTool()\n  const documentStore = useDocumentStore()\n  const [error, setError] = useState<unknown>(null)\n\n  // this re-throws errors so that parent ErrorBoundary's can handle them properly\n  if (error) throw error\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (maybeIntent) {\n      const {intent, params, payload} = maybeIntent\n\n      let cancelled = false\n      // eslint-disable-next-line no-inner-declarations\n      async function effect() {\n        const {id, type} = await ensureDocumentIdAndType(\n          documentStore,\n          typeof params.id === 'string' ? params.id : undefined,\n          typeof params.type === 'string' ? params.type : undefined\n        )\n\n        if (cancelled) return\n\n        const panes = await resolveIntent({\n          intent,\n          params: {...params, id, type},\n          payload,\n          rootPaneNode,\n          structureContext,\n        })\n\n        if (cancelled) return\n\n        navigate({panes}, {replace: true})\n      }\n\n      effect().catch(setError)\n\n      return () => {\n        cancelled = true\n      }\n    }\n  }, [documentStore, maybeIntent, navigate, rootPaneNode, structureContext])\n\n  return null\n})\n", "import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {Box, Button, Card, Code, Container, Heading, Label, Stack, Text} from '@sanity/ui'\nimport React, {useCallback} from 'react'\nimport styled from 'styled-components'\nimport {SyncIcon} from '@sanity/icons'\nimport {SerializeError} from '../../structureBuilder'\nimport {PaneResolutionError} from '../../structureResolvers'\n\nconst PathSegment = styled.span`\n  &:not(:last-child)::after {\n    content: ' ➝ ';\n    opacity: 0.5;\n  }\n`\n\nfunction formatStack(stack: string) {\n  return (\n    stack\n      // Prettify builder functions\n      .replace(/\\(\\.\\.\\.\\)\\./g, '(...)\\n  .')\n      // Remove webpack cruft from function names\n      .replace(/__WEBPACK_IMPORTED_MODULE_\\d+_+/g, '')\n      // Remove default export postfix from function names\n      .replace(/___default\\./g, '.')\n      // Replace full host path, leave only path to JS-file\n      .replace(new RegExp(` \\\\(https?:\\\\/\\\\/${window.location.host}`, 'g'), ' (')\n  )\n}\n\ninterface StructureErrorProps {\n  error: unknown\n}\n\nexport function StructureError({error}: StructureErrorProps) {\n  if (!(error instanceof PaneResolutionError)) {\n    throw error\n  }\n  const {cause} = error\n\n  // Serialize errors are well-formatted and should be readable, in these cases a stack trace is\n  // usually not helpful. Build errors in dev (with HMR) usually also contains a bunch of garbage\n  // instead of an actual error message, so make sure we show the message in these cases as well\n  const stack = cause?.stack || error.stack\n  const showStack =\n    stack && !(cause instanceof SerializeError) && !error.message.includes('Module build failed:')\n\n  const path = cause instanceof SerializeError ? cause.path : []\n  const helpId = (cause instanceof SerializeError && cause.helpId) || error.helpId\n\n  const handleReload = useCallback(() => {\n    window.location.reload()\n  }, [])\n\n  return (\n    <Card height=\"fill\" overflow=\"auto\" padding={4} sizing=\"border\" tone=\"critical\">\n      <Container>\n        <Heading as=\"h2\">Encountered an error while reading structure</Heading>\n\n        <Card marginTop={4} padding={4} radius={2} overflow=\"auto\" shadow={1} tone=\"inherit\">\n          {path.length > 0 && (\n            <Stack space={2}>\n              <Label>Structure path</Label>\n              <Code>\n                {/* TODO: it seems like the path is off by one and includes */}\n                {/* `root` twice  */}\n                {path.slice(1).map((segment, i) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <PathSegment key={`${segment}-${i}`}>{segment}</PathSegment>\n                ))}\n              </Code>\n            </Stack>\n          )}\n\n          <Stack marginTop={4} space={2}>\n            <Label>Error</Label>\n            <Code>{showStack ? formatStack(stack) : error.message}</Code>\n          </Stack>\n\n          {helpId && (\n            <Box marginTop={4}>\n              <Text>\n                <a href={generateHelpUrl(helpId)} rel=\"noopener noreferrer\" target=\"_blank\">\n                  View documentation\n                </a>\n              </Text>\n            </Box>\n          )}\n\n          <Box marginTop={4}>\n            <Button text=\"Reload\" icon={SyncIcon} tone=\"primary\" onClick={handleReload} />\n          </Box>\n        </Card>\n      </Container>\n    </Card>\n  )\n}\n", "import {Box, Text} from '@sanity/ui'\nimport React from 'react'\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {isRecord} from 'sanity'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title=\"Unknown pane type\" />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              Structure item of type <code>{type}</code> is not a known entity.\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              Structure item is missing required <code>type</code> property.\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n", "import {Observable, of, merge} from 'rxjs'\nimport {mapTo, delay} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<string> {\n  const thresholds = [\n    {ms: 300, message: 'Loading…'},\n    {ms: 5000, message: 'Still loading…'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(...thresholds.map(({ms, message}) => src.pipe(mapTo(message), delay(ms))))\n}\n", "import {Box, CardTone, Flex, Spinner, Text, _raf2} from '@sanity/ui'\nimport React, {memo, useMemo, useState, useEffect} from 'react'\nimport {Observable} from 'rxjs'\nimport styled from 'styled-components'\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {getWaitMessages} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<string>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE = 'Loading…'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return DEFAULT_MESSAGE\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe === 'function') return undefined\n\n    const sub = resolvedMessage.subscribe(setCurrentMessage)\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <Spinner muted />\n\n      {(title || currentMessage) && (\n        <Box marginTop={3}>\n          <Text align=\"center\" muted size={1}>\n            {title || currentMessage}\n          </Text>\n        </Box>\n      )}\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'LoadingPane'\n", "import React, {memo, lazy, Suspense} from 'react'\nimport {isEqual} from 'lodash'\nimport {PaneNode} from '../types'\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {UnknownPane} from './unknown'\nimport {LoadingPane} from './loading'\n\ninterface DeskToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined>\n  payload: unknown\n  path: string\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document')),\n  documentList: lazy(() => import('./documentList')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const DeskToolPane = memo(\n  function DeskToolPane(props: DeskToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      path,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} path={path} selected={selected} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next}\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  }\n)\n", "import React from 'react'\nimport {Box, CardTone} from '@sanity/ui'\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {children, flex, minWidth, paneKey, title = 'Error', tone = 'critical'} = props\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} tone={tone}>\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n", "import {useToast} from '@sanity/ui'\nimport React, {memo, useEffect, useRef} from 'react'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentOperationEvent} from 'sanity'\n\nfunction getOpErrorTitle(op: string): string {\n  if (op === 'delete') {\n    return `An error occurred while attempting to delete this document.\n      This usually means that there are other documents that refers to it.`\n  }\n  if (op === 'unpublish') {\n    return `An error occurred while attempting to unpublish this document.\n      This usually means that there are other documents that refers to it.`\n  }\n  return `An error occurred during ${op}`\n}\n\nfunction getOpSuccessTitle(op: string): string {\n  if (op === 'publish') {\n    return `The document was published`\n  }\n  if (op === 'unpublish') {\n    return `The document was unpublished. A draft has been created from the latest published version.`\n  }\n  if (op === 'discardChanges') {\n    return `All changes since last publish has now been discarded. The discarded draft can still be recovered from history`\n  }\n  if (op === 'delete') {\n    return `The document was successfully deleted`\n  }\n  return `Successfully performed ${op} on document`\n}\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType} = useDocumentPane()\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: getOpErrorTitle(event.op),\n        description: (\n          <details>\n            <summary>Details</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: getOpSuccessTitle(event.op),\n      })\n    }\n\n    prevEvent.current = event\n  }, [event, pushToast])\n\n  return null\n})\n", "import {EarthAmericasIcon, BinaryDocumentIcon, RestoreIcon} from '@sanity/icons'\nimport {DeskToolFeatures, PaneMenuItem} from '../../types'\n\ninterface Params {\n  features: DeskToolFeatures\n  changesOpen: boolean\n  hasValue: boolean\n  previewUrl?: string | null\n}\n\nconst getHistoryMenuItem = (params: Params): PaneMenuItem | null => {\n  const {features, hasValue, changesOpen} = params\n\n  if (!features.reviewChanges) return null\n\n  return {\n    action: 'reviewChanges',\n    title: 'Review changes',\n    icon: RestoreIcon,\n    isDisabled: changesOpen || !hasValue,\n  }\n}\n\nconst getInspectItem = ({hasValue}: Params): PaneMenuItem => ({\n  action: 'inspect',\n  title: 'Inspect',\n  icon: BinaryDocumentIcon,\n  isDisabled: !hasValue,\n  shortcut: 'Ctrl+Alt+I',\n})\n\nexport const getProductionPreviewItem = ({previewUrl}: Params): PaneMenuItem | null => {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    title: 'Open preview',\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport const getMenuItems = (params: Params): PaneMenuItem[] => {\n  const items = [getProductionPreviewItem, getHistoryMenuItem, getInspectItem]\n    .filter(Boolean)\n    .map((fn) => fn(params))\n\n  return items.filter((i) => i !== null) as PaneMenuItem[]\n}\n", "import {useEffect, useState} from 'react'\nimport {SanityDocument} from '@sanity/types'\nimport {useAsObservable} from 'react-rx'\nimport {debounceTime, switchMap, catchError} from 'rxjs/operators'\nimport {from, of} from 'rxjs'\nimport {useSource, isRecord} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const [previewUrl, setPreviewUrl] = useState<string | undefined>(undefined)\n  const [error, setError] = useState<unknown>(null)\n  const {resolveProductionUrl} = useSource().document\n  // @todo refactor out of useAsObservable, and instead use `of() + useMemoObservable` like we did for `useLoadableFromCreateLoadable`\n  const value$ = useAsObservable(value)\n\n  if (error) throw error\n\n  useEffect(() => {\n    value$\n      .pipe(\n        // this so that the preview URL isn't fetched on every keystroke\n        debounceTime(500),\n        switchMap((document) =>\n          isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined)\n        ),\n        catchError((e) => {\n          const message = isRecord(e) && typeof e.message === 'string' ? e.message : 'Unknown error'\n          throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n        })\n      )\n      .subscribe({\n        next: setPreviewUrl,\n        error: setError,\n      })\n  }, [resolveProductionUrl, value$])\n\n  return previewUrl\n}\n", "import {Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n", "import React, {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {ObjectSchemaType, Path, SanityDocument, SanityDocumentLike} from '@sanity/types'\nimport {omit} from 'lodash'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport isHotkey from 'is-hotkey'\nimport {isActionEnabled} from '@sanity/schema/_internal'\nimport {usePaneRouter} from '../../components'\nimport {PaneMenuItem} from '../../types'\nimport {useDeskTool} from '../../useDeskTool'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\nimport {getMenuItems} from './menuItems'\nimport {DocumentPaneProviderProps} from './types'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\nimport {\n  DocumentPresence,\n  PatchEvent,\n  StateTree,\n  toMutationPatches,\n  getExpandOperations,\n  getPublishedId,\n  setAtPath,\n  useConnectionState,\n  useDocumentOperation,\n  useEditState,\n  useFormState,\n  useInitialValue,\n  usePresenceStore,\n  useSchema,\n  useSource,\n  useTemplates,\n  useUnique,\n  useValidationStatus,\n  getDraftId,\n  useDocumentValuePermissions,\n  useTimelineStore,\n  useTimelineSelector,\n} from 'sanity'\n\nconst emptyObject = {} as Record<string, string | undefined>\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey} = props\n  const schema = useSchema()\n  const templates = useTemplates()\n  const {\n    actions: documentActions,\n    badges: documentBadges,\n    unstable_languageFilter: languageFilterResolver,\n  } = useSource().document\n  const presenceStore = usePresenceStore()\n  const paneRouter = usePaneRouter()\n  const {features} = useDeskTool()\n  const {push: pushToast} = useToast()\n  const {options, menuItemGroups, title = null, views: viewsProp = []} = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const paneParams = useUnique(paneRouter.params)\n  const panePayload = useUnique(paneRouter.payload)\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: paneParams?.template,\n      }),\n    [documentType, paneOptions, paneParams, panePayload, templates]\n  )\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n  })\n  const initialValue = useUnique(initialValueRaw)\n  const {patch}: any = useDocumentOperation(documentId, documentType)\n  const editState = useEditState(documentId, documentType)\n  const {validation: validationRaw} = useValidationStatus(documentId, documentType)\n  const connectionState = useConnectionState(documentId, documentType)\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n  const value: SanityDocumentLike = editState?.draft || editState?.published || initialValue.value\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions({schemaType: documentType, documentId}),\n    [documentActions, documentId, documentType]\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType]\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver]\n  )\n\n  const validation = useUnique(validationRaw)\n  const views = useUnique(viewsProp)\n  const params = paneRouter.params || emptyObject\n  const [focusPath, setFocusPath] = useState<Path>(() =>\n    params.path ? pathFromString(params.path) : []\n  )\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n  const [timelineMode, setTimelineMode] = useState<'since' | 'rev' | 'closed'>('closed')\n  const changesOpen = !!params.since\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n  /**\n   * Create an intermediate store which handles document Timeline + TimelineController\n   * creation, and also fetches pre-requsite document snapshots. Compatible with `useSyncExternalStore`\n   * and made available to child components via DocumentPaneContext.\n   */\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  // Subscribe to external timeline state changes\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(timelineStore, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(timelineStore, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(timelineStore, (state) => state.timelineReady)\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const [presence, setPresence] = useState<DocumentPresence[]>([])\n  useEffect(() => {\n    const subscription = presenceStore.documentPresence(documentId).subscribe((nextPresence) => {\n      setPresence(nextPresence)\n    })\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [documentId, presenceStore])\n\n  const hasValue = Boolean(value)\n  const menuItems = useMemo(\n    () => getMenuItems({features, hasValue, changesOpen, previewUrl}),\n    [changesOpen, features, hasValue, previewUrl]\n  )\n  const inspectOpen = params.inspect === 'on'\n  const compareValue: Partial<SanityDocument> | null = changesOpen\n    ? sinceAttributes\n    : editState?.published || null\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready =\n    connectionState === 'connected' && editState.ready && (timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => (onOlderRevision ? timelineDisplayed || {_id: value._id, _type: value._type} : value),\n    [onOlderRevision, timelineDisplayed, value]\n  )\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      paneRouter.setParams({\n        ...paneRouter.params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [paneRouter]\n  )\n\n  const handleFocus = useCallback(\n    (nextFocusPath: Path) => {\n      setFocusPath(nextFocusPath)\n      presenceStore.setLocation([\n        {\n          type: 'document',\n          documentId,\n          path: nextFocusPath,\n          lastActiveAt: new Date().toISOString(),\n        },\n      ])\n    },\n    [documentId, presenceStore, setFocusPath]\n  )\n\n  const handleBlur = useCallback(\n    (blurredPath: Path) => {\n      setFocusPath([])\n      // note: we're deliberately not syncing presence here since it would make the user avatar disappear when a\n      // user clicks outside a field without focusing another one\n    },\n    [setFocusPath]\n  )\n\n  const patchRef = useRef<(event: PatchEvent) => void>(() => {\n    throw new Error('Nope')\n  })\n\n  patchRef.current = (event: PatchEvent) => {\n    patch.execute(toMutationPatches(event.patches), initialValue.value)\n  }\n\n  const handleChange = useCallback((event: any) => patchRef.current(event), [])\n\n  const handleHistoryClose = useCallback(() => {\n    paneRouter.setParams({...params, since: undefined})\n  }, [paneRouter, params])\n\n  const handleHistoryOpen = useCallback(() => {\n    paneRouter.setParams({...params, since: '@lastPublished'})\n  }, [paneRouter, params])\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const toggleInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        paneRouter.setParams({...params, inspect: 'on'})\n      } else {\n        paneRouter.setParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, paneRouter, params]\n  )\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'inspect') {\n        toggleInspect(true)\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      return false\n    },\n    [handleHistoryOpen, previewUrl, toggleInspect]\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            handleMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [handleMenuAction, menuItems]\n  )\n\n  const handleInspectClose = useCallback(() => toggleInspect(false), [toggleInspect])\n\n  const [openPath, onSetOpenPath] = useState<Path>([])\n  const [fieldGroupState, onSetFieldGroupState] = useState<StateTree<string>>()\n  const [collapsedPaths, onSetCollapsedPath] = useState<StateTree<boolean>>()\n  const [collapsedFieldSets, onSetCollapsedFieldSets] = useState<StateTree<boolean>>()\n\n  const handleOnSetCollapsedPath = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedPath((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleOnSetCollapsedFieldSet = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedFieldSets((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleSetActiveFieldGroup = useCallback(\n    (path: Path, groupName: string) =>\n      onSetFieldGroupState((prevState) => setAtPath(prevState, path, groupName)),\n    []\n  )\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n  const liveEdit = useMemo(() => Boolean(schemaType?.liveEdit), [schemaType?.liveEdit])\n  const docId = value._id ? value._id : 'dummy-id'\n  const docPermissionsInput = useMemo(() => {\n    return {\n      ...value,\n      _id: liveEdit ? getPublishedId(docId) : getDraftId(docId),\n    }\n  }, [liveEdit, value, docId])\n\n  const [permissions, isPermissionsLoading] = useDocumentValuePermissions({\n    document: docPermissionsInput,\n    permission: requiredPermission,\n  })\n\n  const isNonExistent = !value?._id\n\n  const readOnly = useMemo(() => {\n    const hasNoPermission = !isPermissionsLoading && !permissions?.granted\n    const updateActionDisabled = !isActionEnabled(schemaType!, 'update')\n    const createActionDisabled = isNonExistent && !isActionEnabled(schemaType!, 'create')\n    const reconnecting = connectionState === 'reconnecting'\n    const isLocked = editState.transactionSyncLock?.enabled\n\n    return (\n      !ready ||\n      revTime !== null ||\n      hasNoPermission ||\n      updateActionDisabled ||\n      createActionDisabled ||\n      reconnecting ||\n      isLocked\n    )\n  }, [\n    connectionState,\n    isNonExistent,\n    isPermissionsLoading,\n    permissions?.granted,\n    ready,\n    revTime,\n    schemaType,\n    editState.transactionSyncLock,\n  ])\n\n  const formState = useFormState(schemaType!, {\n    value: displayed,\n    readOnly,\n    comparisonValue: compareValue,\n    focusPath,\n    openPath,\n    collapsedPaths,\n    presence,\n    validation,\n    collapsedFieldSets,\n    fieldGroupState,\n    changesOpen,\n  })\n\n  const formStateRef = useRef(formState)\n  formStateRef.current = formState\n\n  const setOpenPath = useCallback(\n    (path: Path) => {\n      const ops = getExpandOperations(formStateRef.current!, path)\n      ops.forEach((op) => {\n        if (op.type === 'expandPath') {\n          onSetCollapsedPath((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'expandFieldSet') {\n          onSetCollapsedFieldSets((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'setSelectedGroup') {\n          onSetFieldGroupState((prevState) => setAtPath(prevState, op.path, op.groupName))\n        }\n      })\n      onSetOpenPath(path)\n    },\n    [formStateRef]\n  )\n\n  const documentPane: DocumentPaneContextValue = {\n    actions,\n    activeViewId,\n    badges,\n    changesOpen,\n    collapsedFieldSets,\n    collapsedPaths,\n    compareValue,\n    connectionState,\n    displayed,\n    documentId,\n    documentIdRaw,\n    documentType,\n    editState,\n    focusPath,\n    menuItems,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onPathOpen: setOpenPath,\n    onHistoryClose: handleHistoryClose,\n    onHistoryOpen: handleHistoryOpen,\n    onInspectClose: handleInspectClose,\n    onKeyUp: handleKeyUp,\n    onMenuAction: handleMenuAction,\n    onPaneClose: handlePaneClose,\n    onPaneSplit: handlePaneSplit,\n    onSetActiveFieldGroup: handleSetActiveFieldGroup,\n    onSetCollapsedPath: handleOnSetCollapsedPath,\n    onSetCollapsedFieldSet: handleOnSetCollapsedFieldSet,\n    index,\n    inspectOpen,\n    validation,\n    menuItemGroups: menuItemGroups || [],\n    paneKey,\n    previewUrl,\n    ready,\n    schemaType: schemaType!,\n    isPermissionsLoading,\n    permissions,\n    setTimelineMode,\n    setTimelineRange,\n    timelineError,\n    timelineMode,\n    timelineStore,\n    title,\n    value,\n    views,\n    formState,\n    unstable_languageFilter: languageFilter,\n  }\n\n  useEffect(() => {\n    if (connectionState === 'reconnecting') {\n      pushToast({\n        id: 'sanity/desk/reconnecting',\n        status: 'warning',\n        title: <>Connection lost. Reconnecting…</>,\n      })\n    }\n  }, [connectionState, pushToast])\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n      const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n      // Reset focus path when url params path changes\n      setFocusPath(pathFromUrl)\n      setOpenPath(pathFromUrl)\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n  }, [params, documentId, setOpenPath, ready, paneRouter])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'DocumentPaneProvider'\n", "import {\n  TrashIcon,\n  EditIcon,\n  IconComponent,\n  PublishIcon,\n  UnpublishIcon,\n  CloseIcon,\n  AddCircleIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_LABELS: {[key: string]: string | undefined} = {\n  create: 'created',\n  delete: 'deleted',\n  discardDraft: 'discarded draft',\n  initial: 'created',\n  editDraft: 'edited',\n  editLive: 'live edited',\n  publish: 'published',\n  unpublish: 'unpublished',\n}\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddCircleIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddCircleIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n", "import {IconComponent} from '@sanity/icons'\nimport {TIMELINE_ICON_COMPONENTS, TIMELINE_LABELS} from './constants'\nimport {ChunkType} from 'sanity'\n\nexport function formatTimelineEventLabel(type: ChunkType): string | undefined {\n  return TIMELINE_LABELS[type]\n}\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n", "import React from 'react'\nimport {AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n}\n\nexport function UserAvatarStack({maxLength, userIds}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip />\n      ))}\n    </AvatarStack>\n  )\n}\n", "import {Text, Box, Button, Theme, Flex, rem} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport interface IconWrapperProps {\n  theme: Theme\n}\n\nexport const IconWrapper = styled(Flex)(({theme}: IconWrapperProps) => {\n  const borderColor = theme.sanity.color.base.skeleton?.from\n\n  return css`\n    --timeline-hairline-width: 1px;\n    position: relative;\n    z-index: 2;\n    margin: 0;\n    padding: 0;\n\n    &::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: var(--timeline-hairline-width);\n      background: ${borderColor};\n      top: 0;\n      left: calc((100% - var(--timeline-hairline-width)) / 2);\n      z-index: 1;\n    }\n  `\n})\n\nexport const Root = styled(Button)(({$selected}: {$selected: boolean}) => {\n  return css`\n    position: relative;\n    width: 100%;\n\n    /* Line styling */\n    &[data-first] ${IconWrapper}::before {\n      height: 50%;\n      top: unset;\n      bottom: 0;\n    }\n\n    &[data-last] ${IconWrapper}::before {\n      height: 50%;\n    }\n\n    ${$selected &&\n    css`\n      ${IconWrapper}::before {\n        background: transparent;\n      }\n    `}\n  `\n})\n\nexport const IconBox = styled(Box)`\n  background: var(--card-bg-color);\n  border-radius: 50px;\n  position: relative;\n  z-index: 2;\n`\n\nexport const EventLabel = styled(Text)`\n  text-transform: capitalize;\n`\n\nexport const TimestampBox = styled(Box)`\n  min-width: 1rem;\n  margin-left: ${({theme}) => `-${rem(theme.sanity.space[1])}`};\n`\n", "import React, {useCallback, createElement, useMemo} from 'react'\nimport {Box, ButtonTone, Card, Flex, Label, Stack, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {formatTimelineEventLabel, getTimelineEventIconComponent} from './helpers'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {EventLabel, IconBox, IconWrapper, Root, TimestampBox} from './timelineItem.styled'\nimport {ChunkType, Chunk} from 'sanity'\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ButtonTone> = {\n  initial: 'primary',\n  create: 'primary',\n  publish: 'positive',\n  editLive: 'caution',\n  editDraft: 'caution',\n  unpublish: 'critical',\n  discardDraft: 'critical',\n  delete: 'critical',\n  withinSelection: 'primary',\n}\n\ninterface TimelineItemProps {\n  chunk: Chunk\n  isFirst: boolean\n  isLast: boolean\n  isLatest: boolean\n  isSelected: boolean\n  onSelect: (chunk: Chunk) => void\n  timestamp: string\n  type: ChunkType\n}\n\nexport function TimelineItem({\n  chunk,\n  isFirst,\n  isLast,\n  isLatest,\n  isSelected,\n  onSelect,\n  timestamp,\n  type,\n}: TimelineItemProps) {\n  const iconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n\n    return formattedDate\n  }, [timestamp])\n\n  const handleClick = useCallback(\n    (evt: React.MouseEvent<HTMLButtonElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n      onSelect(chunk)\n    },\n    [onSelect, chunk]\n  )\n\n  return (\n    <Root\n      $selected={isSelected}\n      data-chunk-id={chunk.id}\n      data-first={isFirst ? true : undefined}\n      data-last={isLast ? true : undefined}\n      data-ui=\"timelineItem\"\n      mode={isSelected ? 'default' : 'bleed'}\n      onClick={handleClick}\n      padding={0}\n      radius={2}\n      tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n    >\n      <Box paddingX={2}>\n        <Flex align=\"stretch\">\n          <IconWrapper align=\"center\">\n            <IconBox padding={2}>\n              <Text size={2}>{iconComponent && createElement(iconComponent)}</Text>\n            </IconBox>\n          </IconWrapper>\n\n          <Stack space={2} margin={2}>\n            {isLatest && (\n              <Flex>\n                <Card\n                  padding={1}\n                  radius={2}\n                  shadow={1}\n                  tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n                >\n                  <Label muted size={0}>\n                    Latest\n                  </Label>\n                </Card>\n              </Flex>\n            )}\n            <Box>\n              <EventLabel size={1} weight=\"medium\">\n                {formatTimelineEventLabel(type) || <code>{type}</code>}\n              </EventLabel>\n            </Box>\n            <TimestampBox paddingX={1}>\n              <Text size={0} muted>\n                {formattedTimestamp}\n              </Text>\n            </TimestampBox>\n          </Stack>\n          <Flex flex={1} justify=\"flex-end\" align=\"center\">\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} />\n          </Flex>\n        </Flex>\n      </Box>\n    </Root>\n  )\n}\n", "import {Box, Flex, Stack} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)`\n  max-height: calc(100vh - 198px);\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)(({$visible}: {$visible?: boolean}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n", "import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\nimport {TimelineItem} from './timelineItem'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {Chunk, CommandList, CommandListRenderItemCallback} from 'sanity'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  disabledBeforeFirstChunk?: boolean\n  firstChunk?: Chunk | null\n  hasMoreChunks: boolean\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n}\n\nexport const Timeline = ({\n  chunks,\n  disabledBeforeFirstChunk,\n  hasMoreChunks,\n  lastChunk,\n  onLoadMore,\n  onSelect,\n  firstChunk,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n\n  const filteredChunks = useMemo(() => {\n    return chunks.filter((c) => {\n      if (disabledBeforeFirstChunk && firstChunk) {\n        return c.index < firstChunk.index\n      }\n      return true\n    })\n  }, [chunks, disabledBeforeFirstChunk, firstChunk])\n\n  const selectedIndex = useMemo(\n    () => (lastChunk?.id ? filteredChunks.findIndex((c) => c.id === lastChunk.id) : -1),\n    [lastChunk?.id, filteredChunks]\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<Chunk>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n      const isLast = (filteredChunks && activeIndex === filteredChunks.length - 1) || false\n      return (\n        <Box paddingBottom={isLast ? 1 : 0} paddingTop={isFirst ? 1 : 0} paddingX={1}>\n          <TimelineItem\n            chunk={chunk}\n            isFirst={isFirst}\n            isLast={isLast}\n            isLatest={activeIndex === 0 && !disabledBeforeFirstChunk}\n            isSelected={activeIndex === selectedIndex}\n            onSelect={onSelect}\n            timestamp={chunk.endTimestamp}\n            type={chunk.type}\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && (\n            <Flex align=\"center\" justify=\"center\" padding={4}>\n              <Spinner muted />\n            </Flex>\n          )}\n        </Box>\n      )\n    },\n    [disabledBeforeFirstChunk, filteredChunks, hasMoreChunks, onSelect, selectedIndex]\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            No document history\n          </Text>\n          <Text muted size={1}>\n            When changing the content of the document, the document versions will appear in this\n            menu.\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\">\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel=\"Document revisions\"\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={40}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n", "import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport React from 'react'\nimport {TextWithTone} from 'sanity'\n\nexport function TimelineError() {\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"semibold\">\n          An error occurred whilst retrieving document changes.\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          Document history transactions have not been affected.\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n", "import {SelectIcon} from '@sanity/icons'\nimport {Button, Placement, Popover, useClickOutside, useGlobalKeyDown, useToast} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {upperFirst} from 'lodash'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport styled from 'styled-components'\nimport {TimelineError} from '../changesPanel/content/TimelineError'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {formatTimelineEventLabel} from './helpers'\nimport {Timeline} from './timeline'\nimport {Chunk, useTimelineSelector} from 'sanity'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, setTimelineMode, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popover, setPopover] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const handleOpen = useCallback(() => {\n    setTimelineMode(mode)\n    setOpen(true)\n  }, [mode, setTimelineMode])\n\n  const handleClose = useCallback(() => {\n    setTimelineMode('closed')\n    setOpen(false)\n  }, [setTimelineMode])\n\n  const handleClickOutside = useCallback(() => {\n    if (open) {\n      handleClose()\n    }\n  }, [handleClose, open])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open]\n  )\n\n  useClickOutside(handleClickOutside, [button, popover])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForRev(revChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: 'Unable to load revision',\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, timelineStore, toast]\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForSince(sinceChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: 'Unable to load revision',\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, timelineStore, toast]\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = timelineError ? (\n    <TimelineError />\n  ) : (\n    <>\n      {mode === 'rev' && (\n        <Timeline\n          chunks={chunks}\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )}\n      {mode === 'since' && (\n        <Timeline\n          chunks={chunks}\n          disabledBeforeFirstChunk\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={sinceTime}\n          onLoadMore={handleLoadMore}\n          onSelect={selectSince}\n        />\n      )}\n    </>\n  )\n\n  const timeLabel = useFormattedTimestamp(chunk?.endTimestamp || '')\n\n  const revLabel = chunk\n    ? `${upperFirst(formatTimelineEventLabel(chunk.type))}: ${timeLabel}`\n    : 'Latest version'\n\n  const sinceLabel = chunk ? `Since: ${timeLabel}` : 'Since: unknown version'\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <Root\n      constrainSize\n      content={open && content}\n      data-ui=\"versionMenu\"\n      open={open}\n      placement={placement}\n      portal\n      ref={setPopover}\n    >\n      <Button\n        disabled={!ready}\n        mode=\"bleed\"\n        fontSize={1}\n        padding={2}\n        iconRight={SelectIcon}\n        onClick={open ? handleClose : handleOpen}\n        ref={setButton}\n        selected={open}\n        text={ready ? buttonLabel : 'Loading history'}\n      />\n    </Root>\n  )\n}\n\nexport function useFormattedTimestamp(time: string): string {\n  const formatted = useMemo(() => {\n    const parsedDate = time ? new Date(time) : new Date()\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n    return formattedDate\n  }, [time])\n\n  return formatted\n}\n", "import React from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\nimport {Delay} from '../../../../components'\n\nexport function LoadingContent() {\n  return (\n    <Delay ms={300}>\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\" paddingTop={3}>\n        <Spinner muted />\n        <Box marginTop={3}>\n          <Text align=\"center\" muted size={1}>\n            Loading changes\n          </Text>\n        </Box>\n      </Flex>\n    </Delay>\n  )\n}\n", "import {AnnotationDetails, visitDiff, Diff} from 'sanity'\n\nexport function collectLatestAuthorAnnotations(diff: Diff): AnnotationDetails[] {\n  const authorMap = new Map<string, AnnotationDetails>()\n  visitDiff(diff, (child) => {\n    if (child.action === 'unchanged' || !('annotation' in child) || !child.annotation) {\n      return true\n    }\n\n    const {author, timestamp} = child.annotation\n    const previous = authorMap.get(author)\n    if (!previous || previous.timestamp < timestamp) {\n      authorMap.set(author, child.annotation)\n    }\n\n    return true\n  })\n\n  return Array.from(authorMap.values()).sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n}\n", "import {ObjectDiff} from '@sanity/diff'\nimport {CloseIcon} from '@sanity/icons'\nimport {AvatarStack, BoundaryElementProvider, Box, Button, Flex} from '@sanity/ui'\nimport React, {useRef} from 'react'\nimport styled from 'styled-components'\nimport {PaneContent, PaneHeader, usePane} from '../../../components'\nimport {TimelineMenu} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {LoadingContent} from './content/LoadingContent'\nimport {collectLatestAuthorAnnotations} from './helpers'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  DiffTooltip,\n  DocumentChangeContext,\n  DocumentChangeContextInstance,\n  NoChanges,\n  ScrollContainer,\n  UserAvatar,\n  useTimelineSelector,\n} from 'sanity'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function ChangesPanel(): React.ReactElement | null {\n  const {documentId, onHistoryClose, schemaType, timelineError, timelineStore, value} =\n    useDocumentPane()\n  const {collapsed} = usePane()\n  const scrollRef = useRef<HTMLDivElement | null>(null)\n\n  // Subscribe to external timeline state changes\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  const documentContext: DocumentChangeContextInstance = React.useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value]\n  )\n\n  const changeAnnotations = React.useMemo(\n    () => (diff ? collectLatestAuthorAnnotations(diff) : []),\n    [diff]\n  )\n\n  if (collapsed) {\n    return null\n  }\n\n  return (\n    <Flex\n      direction=\"column\"\n      flex={1}\n      style={{\n        borderLeft: '1px dashed var(--card-border-color)',\n        overflow: 'hidden',\n        minWidth: 320,\n      }}\n      data-testid=\"review-changes-pane\"\n    >\n      <PaneHeader\n        actions={\n          <Button\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onHistoryClose}\n            padding={3}\n            title=\"Hide changes panel\"\n          />\n        }\n        subActions={\n          changeAnnotations.length > 0 && (\n            <Box paddingRight={1}>\n              <DiffTooltip\n                annotations={changeAnnotations}\n                description=\"Changes by\"\n                placement=\"bottom-end\"\n              >\n                <AvatarStack maxLength={4}>\n                  {changeAnnotations.map(({author}) => (\n                    <UserAvatar key={author} user={author} />\n                  ))}\n                </AvatarStack>\n              </DiffTooltip>\n            </Box>\n          )\n        }\n        tabs={<TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />}\n        title=\"Changes\"\n      />\n\n      <PaneContent>\n        <BoundaryElementProvider element={scrollRef.current}>\n          <Scroller data-ui=\"Scroller\" ref={scrollRef}>\n            <Box flex={1} padding={4}>\n              <Content\n                diff={diff}\n                documentContext={documentContext}\n                error={timelineError}\n                loading={loading}\n              />\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </PaneContent>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n}) {\n  const {schemaType} = useDocumentPane()\n\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingContent />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n", "import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {useSettingsStore} from 'sanity'\n\n/**\n * @internal\n */\nexport function useDeskToolSetting<ValueType>(\n  namespace: string | null,\n  key: string,\n  defaultValue?: ValueType\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const settingsStore = useSettingsStore()\n  const [value, setValue] = useState<ValueType | undefined>(defaultValue)\n\n  const deskToolSettings = useMemo(() => settingsStore.forNamespace('desk-tool'), [settingsStore])\n\n  const settings = useMemo(() => {\n    if (namespace) {\n      return deskToolSettings.forNamespace(namespace).forKey(key)\n    }\n\n    return deskToolSettings.forKey(key)\n  }, [deskToolSettings, namespace, key])\n\n  useEffect(() => {\n    const sub = settings.listen(defaultValue).subscribe({\n      next: setValue as any,\n    })\n\n    return () => sub?.unsubscribe()\n  }, [defaultValue, key, namespace, settings])\n\n  const set = useCallback(\n    (newValue: ValueType) => {\n      setValue(newValue)\n      settings.set(newValue as any)\n    },\n    [settings]\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n", "export const VIEW_MODE_PARSED = {id: 'parsed', title: 'Parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'Raw JSON'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n", "import {SanityDocumentLike} from '@sanity/types'\nimport HLRU from 'hashlru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = HLRU(1000)\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n", "import {rem, Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n", "import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport React, {useCallback} from 'react'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange]\n  )\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder=\"Search\"\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n", "import {SanityDocument} from '@sanity/types'\nimport {Card, Code, Dialog, Flex, Tab, TabList, TabPanel} from '@sanity/ui'\nimport React, {useCallback} from 'react'\nimport JSONInspector from '@rexxars/react-json-inspector'\nimport {DocTitle} from '../../../components'\nimport {useDeskToolSetting} from '../../../useDeskToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useDeskToolSetting(\n    'desk-tool',\n    `inspect-view-preferred-view-mode-${paneKey}`,\n    'parsed'\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  return (\n    <Dialog\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <>\n            Inspecting{' '}\n            <em>\n              <DocTitle document={value} />\n            </em>\n          </>\n        ) : (\n          <em>No value</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      width={3}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card padding={3} shadow={1} style={{position: 'sticky', bottom: 0, zIndex: 3}}>\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              fontSize={1}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={VIEW_MODE_PARSED.title}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              fontSize={1}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={VIEW_MODE_RAW.title}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JSONInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n", "import {Box, Button, Card, Container, Flex, Text} from '@sanity/ui'\nimport {WarningOutlineIcon, SyncIcon, CloseIcon} from '@sanity/icons'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport styled from 'styled-components'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {KeyedSegment, Reference} from '@sanity/types'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {concat, Observable, of} from 'rxjs'\nimport {useMemoObservable} from 'react-rx'\nimport {RouterPaneGroup} from '../../../types'\nimport {usePaneRouter} from '../../../components'\nimport {DocumentAvailability, useDocumentPreviewStore, getPublishedId} from 'sanity'\n\nconst Root = styled(Card)`\n  position: relative;\n  z-index: 50;\n`\n\nconst TextOneLine = styled(Text)`\n  & > * {\n    overflow: hidden;\n    overflow: clip;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n`\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {draft: DocumentAvailability; published: DocumentAvailability}\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfo = useMemoObservable(\n    (): Observable<ParentReferenceInfo> => {\n      const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n      // short-circuit: this document pane is not a child reference pane\n      if (!parentId || !parentRefPathSegment || !parentRefPath) {\n        return of({loading: false})\n      }\n\n      const publishedId = getPublishedId(parentId)\n      const path = pathFromString(parentRefPathSegment)\n\n      // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n      const keyedSegmentIndex = path.findIndex(\n        (p): p is KeyedSegment => typeof p == 'object' && '_key' in p\n      )\n\n      return concat(\n        // emit a loading state instantly\n        of({loading: true}),\n        // then emit the values from watching the published ID's path\n        documentPreviewStore\n          .unstable_observePathsDocumentPair(\n            publishedId,\n            (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][]\n          )\n          .pipe(\n            // this debounce time is needed to prevent flashing banners due to\n            // the router state updating faster than the content-lake state. we\n            // debounce to wait for more emissions because the value pulled\n            // initially could be stale.\n            debounceTime(750),\n            map(\n              ({draft, published}): ParentReferenceInfo => ({\n                loading: false,\n                result: {\n                  availability: {\n                    draft: draft.availability,\n                    published: published.availability,\n                  },\n                  refValue: pathGet<Reference>(draft.snapshot || published.snapshot, parentRefPath)\n                    ?._ref,\n                },\n              })\n            )\n          )\n      )\n    },\n    [documentPreviewStore, parentId, parentRefPath],\n    {loading: true}\n  )\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Root shadow={1} tone=\"caution\" data-testid=\"reference-changed-banner\">\n      <Container paddingX={4} paddingY={2} sizing=\"border\" width={1}>\n        <Flex align=\"center\">\n          <Text size={1}>\n            <WarningOutlineIcon />\n          </Text>\n\n          {referenceInfo.result?.refValue ? (\n            <>\n              <Box flex={1} marginLeft={3}>\n                <TextOneLine title=\"This reference has changed since you opened it.\" size={1}>\n                  This reference has changed since you opened it.\n                </TextOneLine>\n              </Box>\n              <Box marginLeft={3}>\n                <Button\n                  onClick={handleReloadReference}\n                  icon={SyncIcon}\n                  fontSize={1}\n                  mode=\"ghost\"\n                  padding={2}\n                  space={2}\n                  text=\"Reload reference\"\n                />\n              </Box>\n            </>\n          ) : (\n            <>\n              <Box flex={1} marginLeft={3}>\n                <TextOneLine title=\"This reference has been removed since you opened it.\" size={1}>\n                  This reference has been removed since you opened it.\n                </TextOneLine>\n              </Box>\n              <Box marginLeft={3}>\n                <Button\n                  as={BackLink}\n                  icon={CloseIcon}\n                  fontSize={1}\n                  mode=\"ghost\"\n                  padding={2}\n                  space={2}\n                  text=\"Close reference\"\n                />\n              </Box>\n            </>\n          )}\n        </Flex>\n      </Container>\n    </Root>\n  )\n})\n\nReferenceChangedBanner.displayName = 'ReferenceChangedBanner'\n", "import React from 'react'\nimport {Box, Card, Container, Flex, Text} from '@sanity/ui'\nimport {ReadOnlyIcon} from '@sanity/icons'\nimport styled from 'styled-components'\nimport {useCurrentUser} from 'sanity'\n\nconst Root = styled(Card)`\n  position: relative;\n  z-index: 50;\n`\n\ninterface PermissionCheckBannerProps {\n  granted: boolean\n  requiredPermission: string\n}\n\nexport function PermissionCheckBanner({granted, requiredPermission}: PermissionCheckBannerProps) {\n  const currentUser = useCurrentUser()\n  const plural = currentUser?.roles?.length !== 1\n\n  const roles = join(\n    currentUser?.roles?.map((r) => <code key={r.name}>{r.title}</code>) || [],\n    ', '\n  )\n\n  if (granted) return null\n\n  return (\n    <Root data-testid=\"permission-check-banner\" shadow={1} tone=\"transparent\">\n      <Container paddingX={4} paddingY={3} sizing=\"border\" width={1}>\n        <Flex align=\"flex-start\">\n          <Text size={1}>\n            <ReadOnlyIcon />\n          </Text>\n\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              Your role{plural && 's'} {roles} {plural ? 'do' : 'does'} not have permissions to{' '}\n              {requiredPermission} this document.\n            </Text>\n          </Box>\n        </Flex>\n      </Container>\n    </Root>\n  )\n}\n\nfunction join<T, S>(array: Array<T>, sep: S): Array<T | S> | null {\n  return array.reduce((result: Array<T | S> | null, item: T | S) => {\n    if (result === null) {\n      return [item]\n    }\n\n    return result.concat([sep, item])\n  }, null)\n}\n", "import {useEffect, useRef} from 'react'\nimport {ToastParams, useToast} from '@sanity/ui'\n\nfunction usePrevious<T>(value: T) {\n  const ref = useRef<T>()\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n  return ref.current\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * Workaround to support conditional toast (e.g. a toast that is visible as long as a condition holds true)\n */\nexport function useConditionalToast(params: ToastParams & {id: string; enabled?: boolean}) {\n  const toast = useToast()\n\n  const wasEnabled = usePrevious(params.enabled)\n  // note1: there's a `duration || 0` in Sanity UI's pushToast(), so make it non-falsey\n  // note2: cannot use `Infinity` as duration, since it exceeds setTimeout's maximum delay value\n  useEffect(() => {\n    if (!wasEnabled && params.enabled) {\n      toast.push({...params, duration: LONG_ENOUGH_BUT_NOT_TOO_LONG})\n    }\n    if (wasEnabled && !params.enabled) {\n      toast.push({\n        ...params,\n        // Note: @sanity/ui fallbacks to the default duration of 4s in case of falsey values\n        duration: 0.01,\n      })\n    }\n  }, [params, toast, wasEnabled])\n}\n", "/* eslint-disable no-nested-ternary */\n\nimport {Box, Container, Flex, Spinner, Text, focusFirstDescendant} from '@sanity/ui'\nimport React, {useEffect, useMemo, useRef} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Delay} from '../../../../components/Delay'\nimport {useConditionalToast} from './useConditionalToast'\nimport {\n  DocumentMutationEvent,\n  DocumentRebaseEvent,\n  FormBuilder,\n  PatchMsg,\n  PresenceOverlay,\n  createPatchChannel,\n  fromMutationPatches,\n  useDocumentPresence,\n  useDocumentStore,\n} from 'sanity'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: React.FormEvent) => ev.preventDefault()\n\nexport function FormView(props: FormViewProps) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n  } = useDocumentPane()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const patchChannel = useMemo(() => createPatchChannel(), [])\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n\n  useConditionalToast({\n    id: `sync-lock-${documentId}`,\n    status: 'warning',\n    enabled: isLocked,\n    title: `Syncing document…`,\n    description: `Please hold tight while the document is synced. This usually happens right after the document has been published, and it shouldn't take more than a few seconds`,\n  })\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        })\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel])\n\n  const hasRev = Boolean(value?._rev)\n  useEffect(() => {\n    if (hasRev) {\n      // this is a workaround for an issue that caused the document pushed to withDocument to get\n      // stuck at the first initial value.\n      // This effect is triggered only when the document goes from not having a revision, to getting one\n      // so it will kick in as soon as the document is received from the backend\n      patchChannel.publish({\n        type: 'mutation',\n        patches: [],\n        snapshot: value,\n      })\n    }\n    // React to changes in hasRev only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasRev])\n\n  const formRef = useRef<null | HTMLDivElement>(null)\n\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (ready && !formState?.focusPath.length) {\n      focusFirstDescendant(formRef.current!)\n    }\n    // We only want to run it on first mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ready])\n\n  // const after = useMemo(\n  //   () =>\n  //     Array.isArray(afterEditorComponents) &&\n  //     afterEditorComponents.map(\n  //       (AfterEditorComponent: React.ComponentType<{documentId: string}>, idx: number) => (\n  //         <AfterEditorComponent key={String(idx)} documentId={documentId} />\n  //       )\n  //     ),\n  //   [documentId]\n  // )\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box as=\"form\" onSubmit={preventDefault} ref={formRef}>\n          {ready ? (\n            formState === null ? (\n              <Box padding={2}>\n                <Text>This form is hidden</Text>\n              </Box>\n            ) : (\n              <FormBuilder\n                __internal_patchChannel={patchChannel}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focusPath={formState.focusPath}\n                changed={formState.changed}\n                focused={formState.focused}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                presence={presence}\n                readOnly={formState.readOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={formState.value}\n              />\n            )\n          ) : (\n            <Delay ms={300}>\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    Loading document\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n}\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches)\n    ),\n  }\n}\n", "import React, {useCallback} from 'react'\nimport {Tab, TabList} from '@sanity/ui'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {usePaneRouter} from '../../../../components'\n\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          key={view.id}\n          label={<>{view.title}</>}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : view.id ?? null}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: React.ComponentType | React.ReactNode\n  id: string\n  isActive: boolean\n  label: React.ReactNode\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {isActive, tabPanelId, viewId} = props\n  const {ready} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...props} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready}\n      fontSize={1}\n      selected={isActive}\n      onClick={handleClick}\n    />\n  )\n}\n", "import {ErrorOutlineIcon, InfoOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {\n  isValidationInfoMarker,\n  isValidationWarningMarker,\n  isValidationErrorMarker,\n  Path,\n} from '@sanity/types'\nimport {Button, ButtonProps, Menu, MenuButton} from '@sanity/ui'\nimport React, {useCallback, useMemo, useId} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {ValidationList} from 'sanity'\n\nexport interface ValidationMenuProps {\n  boundaryElement: HTMLDivElement | null\n  isOpen: boolean\n  setOpen: (val: boolean) => void\n}\n\nconst BUTTON_PROPS: Record<'error' | 'warning' | 'info', ButtonProps> = {\n  error: {\n    tone: 'critical',\n    icon: ErrorOutlineIcon,\n  },\n  warning: {\n    tone: 'caution',\n    icon: WarningOutlineIcon,\n  },\n  info: {\n    tone: 'primary',\n    icon: InfoOutlineIcon,\n  },\n}\n\nexport function ValidationMenu(props: ValidationMenuProps) {\n  const {boundaryElement, isOpen, setOpen} = props\n  const {onFocus, onPathOpen, schemaType, validation} = useDocumentPane()\n  const id = useId()\n  const hasValidationMarkers = validation.length > 0\n  const hasErrorMarkers = validation.some(isValidationErrorMarker)\n  const hasWarningMarkers = validation.some(isValidationWarningMarker)\n  const hasInfoMarkers = validation.some(isValidationInfoMarker)\n\n  const buttonProps = useMemo(() => {\n    if (hasErrorMarkers) return BUTTON_PROPS.error\n    if (hasWarningMarkers) return BUTTON_PROPS.warning\n    if (hasInfoMarkers) return BUTTON_PROPS.info\n    return undefined\n  }, [hasErrorMarkers, hasInfoMarkers, hasWarningMarkers])\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen]\n  )\n\n  const handleClose = useCallback(() => setOpen(false), [setOpen])\n\n  if (!hasValidationMarkers) return null\n\n  return (\n    <MenuButton\n      id={id || ''}\n      button={\n        <Button\n          {...buttonProps}\n          title=\"Show validation issues\"\n          mode=\"bleed\"\n          data-testid=\"validation-list-button\"\n        />\n      }\n      menu={\n        <Menu open={isOpen}>\n          <ValidationList\n            documentType={schemaType}\n            validation={validation}\n            onClose={handleClose}\n            onFocus={handleOpen}\n          />\n        </Menu>\n      }\n      popover={{\n        portal: true,\n        boundaryElement: boundaryElement,\n        constrainSize: true,\n        preventOverflow: true,\n        width: 0,\n      }}\n      placement=\"bottom\"\n    />\n  )\n}\n", "import React, {ReactElement} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport function DocumentHeaderTitle(): ReactElement {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue) && connectionState === 'connected'\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState !== 'connected') {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return <>New {schemaType?.title || schemaType?.name}</>\n  }\n\n  if (error) {\n    return <>Error: {error.message}</>\n  }\n\n  return <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n}\n", "import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Button, Inline} from '@sanity/ui'\nimport {negate} from 'lodash'\nimport React, {createElement, memo, forwardRef, useMemo} from 'react'\nimport {PaneMenuItem} from '../../../../types'\nimport {PaneHeader, PaneContextMenuButton, usePaneRouter, usePane} from '../../../../components'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDeskTool} from '../../../../useDeskTool'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {ValidationMenu} from './ValidationMenu'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {useTimelineSelector} from 'sanity'\n\nexport interface DocumentPanelHeaderProps {\n  // TODO:\n  // eslint-disable-next-line react/no-unused-prop-types\n  rootElement: HTMLDivElement | null\n}\n\nconst isActionButton = (item: PaneMenuItem) => Boolean(item.showAsAction)\nconst isMenuButton = negate(isActionButton)\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(({rootElement}: DocumentPanelHeaderProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {\n      onMenuAction,\n      onPaneClose,\n      onPaneSplit,\n      validation,\n      menuItems,\n      menuItemGroups,\n      schemaType,\n      timelineStore,\n      ready,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useDeskTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const contextMenuItems = useMemo(() => menuItems.filter(isMenuButton), [menuItems])\n    const [isValidationOpen, setValidationOpen] = React.useState<boolean>(false)\n    const showTabs = views.length > 1\n    const showVersionMenu = features.reviewChanges\n\n    // Subscribe to external timeline state changes\n    const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button) do the same thing and shouldn't be shown at the same time)\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !features.backButton\n\n    return (\n      <PaneHeader\n        ref={ref}\n        loading={!ready}\n        title={<DocumentHeaderTitle />}\n        tabs={showTabs && <DocumentHeaderTabs />}\n        tabIndex={tabIndex}\n        backButton={\n          features.backButton &&\n          index > 0 && <Button as={BackLink} data-as=\"a\" icon={ArrowLeftIcon} mode=\"bleed\" />\n        }\n        subActions={\n          showVersionMenu && <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        }\n        actions={\n          <Inline space={1}>\n            {unstable_languageFilter.length > 0 && (\n              <>\n                {unstable_languageFilter.map((languageFilterComponent, idx) => {\n                  return createElement(languageFilterComponent, {\n                    // eslint-disable-next-line react/no-array-index-key\n                    key: `language-filter-${idx}`,\n                    schemaType,\n                  })\n                })}\n              </>\n            )}\n\n            {validation.length > 0 && (\n              <ValidationMenu\n                boundaryElement={rootElement}\n                isOpen={isValidationOpen}\n                key=\"validation-menu\"\n                setOpen={setValidationOpen}\n              />\n            )}\n\n            <PaneContextMenuButton\n              itemGroups={menuItemGroups}\n              items={contextMenuItems}\n              key=\"context-menu\"\n              onAction={onMenuAction}\n            />\n\n            {showSplitPaneButton && (\n              <Button\n                icon={SplitVerticalIcon}\n                key=\"split-pane-button\"\n                mode=\"bleed\"\n                onClick={onPaneSplit}\n                title=\"Split pane right\"\n              />\n            )}\n\n            {showSplitPaneCloseButton && (\n              <Button\n                icon={CloseIcon}\n                key=\"close-view-button\"\n                mode=\"bleed\"\n                onClick={onPaneClose}\n                title=\"Close split pane\"\n              />\n            )}\n\n            {showPaneGroupCloseButton && (\n              <Button\n                icon={CloseIcon}\n                key=\"close-view-button\"\n                mode=\"bleed\"\n                title=\"Close pane group\"\n                as={BackLink}\n              />\n            )}\n          </Inline>\n        }\n      />\n    )\n  })\n)\n\nDocumentPanelHeader.displayName = 'DocumentPanelHeader'\n", "import {BoundaryElementProvider, Flex, PortalProvider, usePortal, useElementRect} from '@sanity/ui'\nimport React, {createElement, useEffect, useMemo, useRef, useState} from 'react'\nimport styled, {css} from 'styled-components'\nimport {PaneContent, usePaneLayout} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDeskTool} from '../../../useDeskTool'\nimport {ReferenceChangedBanner} from './ReferenceChangedBanner'\nimport {PermissionCheckBanner} from './PermissionCheckBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelHeader} from './header'\nimport {ScrollContainer, VirtualizerScrollInstanceProvider} from 'sanity'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  rootElement: HTMLDivElement | null\n  isInspectOpen: boolean\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n}\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {footerHeight, isInspectOpen, rootElement, setDocumentPanelPortalElement} = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const parentPortal = usePortal()\n  const {features} = useDeskTool()\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n  const headerRect = useElementRect(headerElement)\n  const portalRef = useRef<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views]\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? portalRef.current || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerRect?.height || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerRect])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(\n    () =>\n      activeView.type === 'component' &&\n      activeView.component &&\n      createElement(activeView.component, {\n        document: {\n          draft: editState?.draft || null,\n          displayed: displayed || value,\n          historical: displayed,\n          published: editState?.published || null,\n        },\n        documentId,\n        options: activeView.options,\n        schemaType,\n      }),\n    [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value]\n  )\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  return (\n    <Flex direction=\"column\" flex={2} overflow={layoutCollapsed ? undefined : 'hidden'}>\n      <DocumentPanelHeader rootElement={rootElement} ref={setHeaderElement} />\n\n      <PaneContent>\n        <PortalProvider\n          element={portalElement}\n          __unstable_elements={{documentScrollElement: documentScrollElement}}\n        >\n          <BoundaryElementProvider element={documentScrollElement}>\n            <VirtualizerScrollInstanceProvider scrollElement={documentScrollElement}>\n              {activeView.type === 'form' && !isPermissionsLoading && ready && (\n                <>\n                  <PermissionCheckBanner\n                    granted={Boolean(permissions?.granted)}\n                    requiredPermission={requiredPermission}\n                  />\n                  <ReferenceChangedBanner />\n                </>\n              )}\n\n              <Scroller\n                $disabled={layoutCollapsed || false}\n                data-testid=\"document-panel-scroller\"\n                ref={setDocumentScrollElement}\n              >\n                <FormView\n                  hidden={formViewHidden}\n                  key={documentId + (ready ? '_ready' : '_pending')}\n                  margins={margins}\n                />\n                {activeViewNode}\n              </Scroller>\n\n              {inspectDialog}\n\n              <div data-testid=\"document-panel-portal\" ref={portalRef} />\n            </VirtualizerScrollInstanceProvider>\n          </BoundaryElementProvider>\n        </PortalProvider>\n      </PaneContent>\n    </Flex>\n  )\n}\n", "import {DialogProps, Placement} from '@sanity/ui'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n", "import {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  Popover,\n  Text,\n  useClickOutside,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\nimport {DocumentActionConfirmDialogProps} from 'sanity'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onCancel()\n  }, [isTopLayer, onCancel])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel]\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return (\n    <Flex direction=\"column\" ref={setElement} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || 'Cancel'}\n          />\n          <Button\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || 'Confirm'}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n", "import {Box, Dialog} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\nimport {DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n", "import {Popover, useClickOutside, useGlobalKeyDown, useLayer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\nimport {DocumentActionPopoverDialogProps} from 'sanity'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onClose()\n  }, [isTopLayer, onClose])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose]\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return <div ref={setElement}>{content}</div>\n}\n", "import {Box, Dialog, usePortal, PortalProvider} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\nimport {DocumentActionDialogProps} from 'sanity'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: React.ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  // eslint-disable-next-line no-console\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={2}\n    >\n      <Box padding={4}>\n        {unknownModal.content || (\n          <>\n            Unexpected modal type (<code>{unknownModal.type}</code>)\n          </>\n        )}\n      </Box>\n    </Dialog>\n  )\n}\n", "import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Flex,\n  Hotkeys,\n  Menu,\n  MenuButton,\n  MenuItem,\n  PopoverProps,\n  Text,\n  Tooltip,\n} from '@sanity/ui'\nimport React, {\n  createElement,\n  isValidElement,\n  useCallback,\n  useRef,\n  useState,\n  useMemo,\n  useId,\n} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {ActionStateDialog} from './ActionStateDialog'\nimport {DocumentActionDescription, LegacyLayerProvider} from 'sanity'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const [actionIndex, setActionIndex] = useState(-1)\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    []\n  )\n\n  const currentAction = actionStates[actionIndex]\n\n  return (\n    <>\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <Button\n            data-testid=\"action-menu-button\"\n            aria-label=\"Open document actions\"\n            disabled={disabled}\n            icon={ChevronDownIcon}\n            mode=\"ghost\"\n            ref={buttonRef}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                // eslint-disable-next-line react/no-array-index-key\n                key={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n    </>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nfunction ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const tooltipContent = actionState.title && (\n    <Box padding={2}>\n      <Text size={1}>{actionState.title}</Text>\n    </Box>\n  )\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      onClick={handleClick}\n      padding={0}\n      tone={actionState.tone}\n    >\n      <Tooltip\n        content={tooltipContent}\n        disabled={!tooltipContent}\n        fallbackPlacements={['left', 'bottom']}\n        placement=\"top\"\n        portal\n      >\n        <Flex align=\"center\" paddingX={3}>\n          <Flex flex={1} paddingY={3}>\n            {actionState.icon && (\n              <Box marginRight={3}>\n                <Text>\n                  {isValidElement(actionState.icon) && actionState.icon}\n                  {isValidElementType(actionState.icon) && createElement(actionState.icon)}\n                </Text>\n              </Box>\n            )}\n\n            <Text>{actionState.label}</Text>\n          </Flex>\n\n          {actionState.shortcut && (\n            <Box marginLeft={3}>\n              <Hotkeys\n                keys={String(actionState.shortcut)\n                  .split('+')\n                  .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))}\n              />\n            </Box>\n          )}\n        </Flex>\n      </Tooltip>\n    </MenuItem>\n  )\n}\n", "import {Box, Flex, Tooltip, Stack, Button, Hotkeys, LayerProvider, Text} from '@sanity/ui'\nimport React, {memo, useMemo, useState} from 'react'\nimport {RenderActionCollectionState} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\nimport {DocumentActionDescription, useTimelineSelector} from 'sanity'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  showMenu: boolean\n  states: DocumentActionDescription[]\n}\n\nfunction DocumentStatusBarActionsInner(props: DocumentStatusBarActionsInnerProps) {\n  const {disabled, showMenu, states} = props\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex padding={2} style={{maxWidth: 300}} align=\"center\">\n        <Text size={1}>{firstActionState.title}</Text>\n        {firstActionState.shortcut && (\n          <Box marginLeft={firstActionState.title ? 2 : 0}>\n            <Hotkeys\n              keys={String(firstActionState.shortcut)\n                .split('+')\n                .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n            />\n          </Box>\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  return (\n    <Flex>\n      {firstActionState && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} portal placement=\"top\">\n            <Stack flex={1}>\n              <Button\n                data-testid={`action-${firstActionState.label}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n\n      {showMenu && menuActionStates.length > 0 && (\n        <Box marginLeft={1}>\n          <ActionMenuButton actionStates={menuActionStates} disabled={disabled} />\n        </Box>\n      )}\n\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n}\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {actions, connectionState, documentId, editState} = useDocumentPane()\n  // const [isMenuOpen, setMenuOpen] = useState(false)\n  // const handleMenuOpen = useCallback(() => setMenuOpen(true), [])\n  // const handleMenuClose = useCallback(() => setMenuOpen(false), [])\n  // const handleActionComplete = useCallback(() => setMenuOpen(false), [])\n\n  if (!actions || !editState) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState\n      // component={}\n      // onActionComplete={handleActionComplete}\n      actions={actions}\n      // @ts-expect-error TODO: fix the document actions\n      actionProps={editState}\n    >\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected'}\n          // isMenuOpen={isMenuOpen}\n          // onMenuOpen={handleMenuOpen}\n          // onMenuClose={handleMenuClose}\n          showMenu={actions.length > 1}\n          states={states}\n          // Use document ID as key to make sure that the actions state is reset when the document changes\n          key={documentId}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {connectionState, editState, timelineStore} = useDocumentPane()\n\n  // Subscribe to external timeline state changes\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n\n  const revision = revTime?.id || ''\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps = useMemo(() => ({...(editState || {}), revision}), [editState, revision])\n  const historyActions = useMemo(() => [HistoryRestoreAction], [])\n\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps as any}>\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected' || Boolean(disabled)}\n          showMenu={false}\n          states={states}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n", "import {Badge, BadgeTone, Box, Inline, Text, Tooltip} from '@sanity/ui'\nimport React from 'react'\nimport {RenderBadgeCollectionState} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentBadgeDescription} from 'sanity'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nfunction DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          content={\n            badge.title && (\n              <Box padding={2}>\n                <Text size={1}>{badge.title}</Text>\n              </Box>\n            )\n          }\n          disabled={!badge.title}\n          key={String(index)}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n}\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState as any}>\n      {({states}) => <DocumentBadgesInner states={states} />}\n    </RenderBadgeCollectionState>\n  )\n}\n", "import {Box, Button, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {PlayIcon, PublishIcon} from '@sanity/icons'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useTimeAgo} from 'sanity'\n\ninterface PublishStatusProps {\n  collapsed?: boolean\n  disabled: boolean\n  lastPublished?: string\n  lastUpdated?: string\n  liveEdit: boolean\n}\n\nconst Root = styled(Flex)`\n  cursor: default;\n`\n\nexport function PublishStatus(props: PublishStatusProps) {\n  const {collapsed, disabled, lastPublished, lastUpdated, liveEdit} = props\n\n  const lastPublishedTimeAgo = useTimeAgo(lastPublished || '', {minimal: true, agoSuffix: true})\n  const lastPublishedTime = useTimeAgo(lastPublished || '', {minimal: true})\n\n  const lastUpdatedTimeAgo = useTimeAgo(lastUpdated || '', {minimal: true, agoSuffix: true})\n  const lastUpdatedTime = useTimeAgo(lastUpdated || '', {minimal: true})\n\n  return (\n    <Root align=\"center\" data-ui=\"SessionLayout\" sizing=\"border\">\n      <Tooltip\n        placement=\"top\"\n        portal\n        content={\n          <Stack padding={3} space={3}>\n            <Text size={1} muted>\n              {liveEdit ? (\n                <>Last updated {lastUpdated ? lastUpdatedTimeAgo : lastPublishedTimeAgo}</>\n              ) : (\n                <>Last published {lastPublishedTimeAgo}</>\n              )}\n            </Text>\n          </Stack>\n        }\n      >\n        <Button\n          mode=\"bleed\"\n          tone={liveEdit ? 'critical' : 'positive'}\n          tabIndex={-1}\n          disabled={disabled}\n        >\n          <Flex align=\"center\">\n            <Box marginRight={collapsed ? 0 : 3}>\n              <Text size={2}>{liveEdit ? <PlayIcon /> : <PublishIcon />}</Text>\n            </Box>\n            {!collapsed && (\n              <Text size={1} weight=\"medium\">\n                {liveEdit ? (\n                  <>{lastUpdated ? lastUpdatedTime : lastPublishedTime}</>\n                ) : (\n                  lastPublishedTime\n                )}\n              </Text>\n            )}\n          </Flex>\n        </Button>\n      </Tooltip>\n    </Root>\n  )\n}\n", "import React, {ComponentProps} from 'react'\nimport {motion} from 'framer-motion'\nimport styled, {keyframes} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\nconst Edit = (props: MotionPathProps) => (\n  <motion.path d=\"M15 7L18 10M6 19L7 15L17 5L20 8L10 18L6 19Z\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\nconst edit = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  changes: {\n    pathLength: 1,\n    transition: {\n      duration: 0.4,\n      delay: 0.5,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n        <Edit variants={edit} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n", "import React, {useMemo} from 'react'\nimport {Box, Button, ButtonProps, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\nimport {useTimeAgo} from 'sanity'\n\ninterface ReviewChangesButtonProps extends React.HTMLProps<HTMLButtonElement> {\n  status?: 'changes' | 'saved' | 'syncing'\n  lastUpdated?: string\n  collapsed?: boolean\n}\n\nconst ReviewButton = React.forwardRef(function ReviewButton(\n  props: ReviewChangesButtonProps & ButtonProps,\n  ref: React.ForwardedRef<HTMLButtonElement>\n) {\n  const {collapsed, status, lastUpdated, ...rest} = props\n  const lastUpdatedTime = useTimeAgo(lastUpdated || '', {minimal: true})\n  const lastUpdatedTimeAgo = useTimeAgo(lastUpdated || '', {minimal: true, agoSuffix: true})\n\n  const buttonProps: ButtonProps = useMemo(() => {\n    if (status === 'syncing') {\n      return {\n        text: 'Saving...',\n        tone: undefined,\n      }\n    }\n    if (status === 'changes') {\n      return {\n        text: lastUpdatedTime,\n        tone: 'caution',\n      }\n    }\n    if (status === 'saved') {\n      return {\n        text: 'Saved!',\n        tone: 'positive',\n      }\n    }\n\n    return {}\n  }, [status, lastUpdatedTime])\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <Tooltip\n      placement=\"top\"\n      portal\n      disabled={status !== 'changes'}\n      content={\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            Review changes\n          </Text>\n          <Text size={1} muted>\n            Changes saved {lastUpdatedTimeAgo}\n          </Text>\n        </Stack>\n      }\n    >\n      <Button\n        mode=\"bleed\"\n        justify=\"flex-start\"\n        tone={buttonProps?.tone}\n        {...rest}\n        data-testid=\"review-changes-button\"\n        ref={ref}\n      >\n        <Flex align=\"center\">\n          <Box marginRight={collapsed ? 0 : 3}>\n            <Text>\n              <AnimatedStatusIcon status={status} />\n            </Text>\n          </Box>\n          {!collapsed && (\n            <Text size={1} weight=\"medium\">\n              {buttonProps?.text}\n            </Text>\n          )}\n        </Flex>\n      </Button>\n    </Tooltip>\n  )\n})\n\nexport const ReviewChangesButton = React.memo(ReviewButton)\n", "import {Box, Flex, useElementRect} from '@sanity/ui'\nimport React, {useEffect, useMemo, useState, memo, useLayoutEffect} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentBadges} from './DocumentBadges'\nimport {PublishStatus} from './PublishStatus'\nimport {ReviewChangesButton} from './ReviewChangesButton'\nimport {useSyncState, useTimelineSelector} from 'sanity'\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport const DocumentSparkline = memo(function DocumentSparkline() {\n  const {\n    changesOpen,\n    documentId,\n    documentType,\n    editState,\n    onHistoryClose,\n    onHistoryOpen,\n    timelineStore,\n    value,\n  } = useDocumentPane()\n  const syncState = useSyncState(documentId, documentType)\n\n  const lastUpdated = value?._updatedAt\n  const lastPublished = editState?.published?._updatedAt\n  const liveEdit = Boolean(editState?.liveEdit)\n  const published = Boolean(editState?.published)\n  const changed = Boolean(editState?.draft)\n\n  const [rootFlexElement, setRootFlexElement] = useState<HTMLDivElement | null>(null)\n  const rootFlexRect = useElementRect(rootFlexElement)\n  const collapsed = !rootFlexRect || rootFlexRect?.width < 300\n\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n\n  // Subscribe to TimelineController changes and store internal state.\n  const showingRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  const reviewButton = useMemo(\n    () => (\n      <ReviewChangesButton\n        lastUpdated={lastUpdated}\n        status={status || (changed ? 'changes' : undefined)}\n        onClick={changesOpen ? onHistoryClose : onHistoryOpen}\n        disabled={showingRevision}\n        selected={changesOpen}\n        collapsed={collapsed}\n      />\n    ),\n    [\n      changed,\n      changesOpen,\n      onHistoryClose,\n      onHistoryOpen,\n      lastUpdated,\n      showingRevision,\n      status,\n      collapsed,\n    ]\n  )\n\n  const publishStatus = useMemo(\n    () =>\n      (liveEdit || published) && (\n        <Box marginRight={1}>\n          <PublishStatus\n            disabled={showingRevision}\n            lastPublished={lastPublished}\n            lastUpdated={lastUpdated}\n            liveEdit={liveEdit}\n            collapsed={collapsed}\n          />\n        </Box>\n      ),\n    [collapsed, lastPublished, lastUpdated, liveEdit, published, showingRevision]\n  )\n\n  return (\n    <Flex align=\"center\" data-ui=\"DocumentSparkline\" ref={setRootFlexElement}>\n      {publishStatus}\n\n      <Flex align=\"center\" flex={1}>\n        {reviewButton}\n        {!collapsed && (\n          <Box marginLeft={3}>\n            <DocumentBadges />\n          </Box>\n        )}\n      </Flex>\n    </Flex>\n  )\n})\n", "import React, {useMemo} from 'react'\nimport styled from 'styled-components'\nimport {Box, Flex} from '@sanity/ui'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentSparkline} from './sparkline/DocumentSparkline'\nimport {useTimelineSelector} from 'sanity'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: React.Ref<HTMLDivElement>\n}\n\nconst DocumentActionsBox = styled(Box)`\n  min-width: 10em;\n  max-width: 16em;\n`\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef} = props\n  const {badges, timelineStore} = useDocumentPane()\n\n  // Subscribe to external timeline state changes\n  const showingRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n\n  return useMemo(\n    () => (\n      <Box paddingLeft={2} paddingRight={[2, 3]} paddingY={2}>\n        <Flex align=\"center\">\n          <Box flex={[1, 2]}>{badges && <DocumentSparkline />}</Box>\n\n          <DocumentActionsBox flex={1} marginLeft={[1, 3]} ref={actionsBoxRef}>\n            {showingRevision ? <HistoryStatusBarActions /> : <DocumentStatusBarActions />}\n          </DocumentActionsBox>\n        </Flex>\n      </Box>\n    ),\n    [actionsBoxRef, badges, showingRevision]\n  )\n}\n", "import isHotkey from 'is-hotkey'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {ActionStateDialog} from '../statusBar'\nimport {Pane, RenderActionCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentActionDescription, DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: React.Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nfunction KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<React.HTMLProps<HTMLDivElement>, 'height'>\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event)\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states]\n  )\n\n  return (\n    <Pane id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </Pane>\n  )\n}\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: React.Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = React.memo(\n  (props: DocumentActionShortcutsProps & React.HTMLProps<HTMLDivElement>) => {\n    const {actionsBoxElement, children, ...rest} = props\n    const {actions, editState} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          // @todo: get revision string\n          revision: undefined,\n        },\n      [editState]\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {({states}) => (\n          <KeyboardShortcutResponder\n            {...rest}\n            activeIndex={activeIndex}\n            actionsBoxElement={actionsBoxElement}\n            onActionStart={onActionStart}\n            states={states}\n          >\n            {children}\n          </KeyboardShortcutResponder>\n        )}\n      </RenderActionCollectionState>\n    )\n  }\n)\n\nDocumentActionShortcuts.displayName = 'DocumentActionShortcuts'\n", "import {\n  BoundaryElementProvider,\n  Card,\n  Code,\n  DialogProvider,\n  DialogProviderProps,\n  Flex,\n  PortalProvider,\n  Stack,\n  Text,\n  useElementRect,\n} from '@sanity/ui'\nimport React, {memo, useCallback, useMemo, useState} from 'react'\nimport styled from 'styled-components'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {Path} from '@sanity/types'\nimport {DocumentPaneNode} from '../../types'\nimport {usePaneRouter} from '../../components'\nimport {PaneFooter} from '../../components/pane'\nimport {usePaneLayout} from '../../components/pane/usePaneLayout'\nimport {useDeskTool} from '../../useDeskTool'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../constants'\nimport {DocumentOperationResults} from './DocumentOperationResults'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {ChangesPanel} from './changesPanel'\nimport {DocumentPanel} from './documentPanel'\nimport {DocumentActionShortcuts} from './keyboardShortcuts'\nimport {DocumentStatusBar} from './statusBar'\nimport {DocumentPaneProviderProps} from './types'\nimport {useDocumentPane} from './useDocumentPane'\nimport {\n  ChangeConnectorRoot,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  isDev,\n  useDocumentType,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useZIndex,\n} from 'sanity'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\nconst DOCUMENT_PANEL_MIN_WIDTH = 320\nconst DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\nconst CHANGES_PANEL_MIN_WIDTH = 320\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrow screens (< 512px).\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <DocumentPaneInner {...props} />\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'global',\n    })\n  }, [resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            // eslint-disable-next-line no-nested-ternary\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n              ? 'selected'\n              : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  if (options.type === '*' && !isLoaded) {\n    return <LoadingPane flex={2.5} minWidth={320} paneKey={paneKey} title=\"Loading document…\" />\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={<>The document was not found</>}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            The document type is not defined, and a document with the <code>{options.id}</code>{' '}\n            identifier could not be found.\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProvider\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink as any}\n        onEditReference={handleEditReference as any}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <InnerDocumentPane />\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProvider>\n  )\n}\n\nfunction usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {}\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n\nfunction InnerDocumentPane() {\n  const {\n    changesOpen,\n    documentType,\n    onFocus,\n    onPathOpen,\n    onHistoryOpen,\n    onKeyUp,\n    inspectOpen,\n    paneKey,\n    schemaType,\n    value,\n  } = useDocumentPane()\n  const {features} = useDeskTool()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const zOffsets = useZIndex()\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null\n  )\n  const footerRect = useElementRect(footerElement)\n  const footerH = footerRect?.height\n\n  const documentPanel = useMemo(\n    () => (\n      <DocumentPanel\n        footerHeight={footerH || null}\n        isInspectOpen={inspectOpen}\n        rootElement={rootElement}\n        setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n      />\n    ),\n    [footerH, rootElement, inspectOpen]\n  )\n\n  // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane.\n  // The portal element comes from `DocumentPanel`.\n  const footer = useMemo(\n    () => (\n      <PortalProvider\n        __unstable_elements={{[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}}\n      >\n        <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n          <PaneFooter ref={setFooterElement}>\n            <DocumentStatusBar actionsBoxRef={setActionsBoxElement} />\n          </PaneFooter>\n        </DialogProvider>\n      </PortalProvider>\n    ),\n    [documentPanelPortalElement, zOffsets.portal]\n  )\n\n  const changesPanel = useMemo(() => {\n    if (!features.reviewChanges) return null\n    if (!changesOpen) return null\n\n    return (\n      <BoundaryElementProvider element={rootElement}>\n        <ChangesPanel />\n      </BoundaryElementProvider>\n    )\n  }, [changesOpen, features.reviewChanges, rootElement])\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus]\n  )\n\n  const children = useMemo(() => {\n    if (!schemaType) {\n      return (\n        <ErrorPane\n          flex={2.5}\n          minWidth={320}\n          paneKey={paneKey}\n          title={\n            <>\n              Unknown document type: <code>{documentType}</code>\n            </>\n          }\n          tone=\"caution\"\n        >\n          <Stack space={4}>\n            {documentType && (\n              <Text as=\"p\">\n                This document has the schema type <code>{documentType}</code>, which is not defined\n                as a type in the local content studio schema.\n              </Text>\n            )}\n\n            {!documentType && (\n              <Text as=\"p\">\n                This document does not exist, and no schema type was specified for it.\n              </Text>\n            )}\n\n            {isDev && value && (\n              <>\n                <Text as=\"p\">Here is the JSON representation of the document:</Text>\n                <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n                  <Code language=\"json\" size={[1, 1, 2]}>\n                    {JSON.stringify(value, null, 2)}\n                  </Code>\n                </Card>\n              </>\n            )}\n          </Stack>\n        </ErrorPane>\n      )\n    }\n\n    return (\n      <>\n        <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n          <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n            <StyledChangeConnectorRoot\n              data-testid=\"change-connector-root\"\n              isReviewChangesOpen={changesOpen}\n              onOpenReviewChanges={onHistoryOpen}\n              onSetFocus={onConnectorSetFocus}\n            >\n              {documentPanel}\n              {changesPanel}\n            </StyledChangeConnectorRoot>\n          </Flex>\n        </DialogProvider>\n        {footer}\n        <DocumentOperationResults />\n      </>\n    )\n  }, [\n    schemaType,\n    zOffsets.portal,\n    layoutCollapsed,\n    changesOpen,\n    onHistoryOpen,\n    onConnectorSetFocus,\n    documentPanel,\n    changesPanel,\n    footer,\n    paneKey,\n    documentType,\n    value,\n  ])\n\n  const currentMinWidth = changesOpen\n    ? DOCUMENT_PANEL_INITIAL_MIN_WIDTH + CHANGES_PANEL_MIN_WIDTH\n    : DOCUMENT_PANEL_INITIAL_MIN_WIDTH\n\n  const minWidth = changesOpen\n    ? DOCUMENT_PANEL_MIN_WIDTH + CHANGES_PANEL_MIN_WIDTH\n    : DOCUMENT_PANEL_MIN_WIDTH\n\n  return (\n    <DocumentActionShortcuts\n      actionsBoxElement={actionsBoxElement}\n      currentMinWidth={currentMinWidth}\n      data-testid=\"document-pane\"\n      flex={2.5}\n      id={paneKey}\n      minWidth={minWidth}\n      onKeyUp={onKeyUp}\n      rootRef={setRootElement}\n    >\n      {children}\n    </DocumentActionShortcuts>\n  )\n}\n", "import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Stack, Text} from '@sanity/ui'\nimport React from 'react'\n\nexport function NoDocumentTypesScreen() {\n  return (\n    <Card height=\"fill\">\n      <Flex align=\"center\" height=\"fill\" justify=\"center\" padding={4} sizing=\"border\">\n        <Container width={0}>\n          <Card padding={4} radius={2} shadow={1} tone=\"caution\">\n            <Flex>\n              <Box>\n                <Text size={1}>\n                  <WarningOutlineIcon />\n                </Text>\n              </Box>\n              <Stack flex={1} marginLeft={3} space={3}>\n                <Text as=\"h1\" size={1} weight=\"bold\">\n                  No document types\n                </Text>\n                <Text as=\"p\" muted size={1}>\n                  Please define at least one document type in your schema.\n                </Text>\n                <Text as=\"p\" muted size={1}>\n                  <a\n                    href=\"https://www.sanity.io/docs/create-a-schema-and-configure-sanity-studio\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    Learn how to add a document type &rarr;\n                  </a>\n                </Text>\n              </Stack>\n            </Flex>\n          </Card>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n", "import {PortalProvider, useToast} from '@sanity/ui'\nimport React, {memo, Fragment, useState, useEffect, useCallback} from 'react'\nimport styled from 'styled-components'\nimport isHotkey from 'is-hotkey'\nimport {LOADING_PANE} from '../../constants'\nimport {LoadingPane, DeskToolPane} from '../../panes'\nimport {useResolvedPanes} from '../../structureResolvers'\nimport {PaneNode} from '../../types'\nimport {PaneLayout} from '../pane'\nimport {useDeskTool} from '../../useDeskTool'\nimport {NoDocumentTypesScreen} from './NoDocumentTypesScreen'\nimport {useSchema, _isCustomDocumentTypeDefinition} from 'sanity'\nimport {useRouterState} from 'sanity/router'\n\ninterface DeskToolProps {\n  onPaneChange: (panes: Array<PaneNode | typeof LOADING_PANE>) => void\n}\n\nconst StyledPaneLayout = styled(PaneLayout)`\n  min-height: 100%;\n  min-width: 320px;\n`\n\nconst isSaveHotkey = isHotkey('mod+s')\n\n/**\n * @internal\n */\nexport const DeskTool = memo(function DeskTool({onPaneChange}: DeskToolProps) {\n  const {push: pushToast} = useToast()\n  const schema = useSchema()\n  const {layoutCollapsed, setLayoutCollapsed} = useDeskTool()\n  const {paneDataItems, resolvedPanes} = useResolvedPanes()\n  // Intent resolving is processed by the sibling `<IntentResolver />` but it doesn't have a UI for indicating progress.\n  // We handle that here, so if there are only 1 pane (the root structure), and there's an intent state in the router, we need to show a placeholder LoadingPane until\n  // the structure is resolved and we know what panes to load/display\n  const isResolvingIntent = useRouterState(\n    useCallback((routerState) => typeof routerState.intent === 'string', [])\n  )\n\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n\n  const handleRootCollapse = useCallback(() => setLayoutCollapsed(true), [setLayoutCollapsed])\n  const handleRootExpand = useCallback(() => setLayoutCollapsed(false), [setLayoutCollapsed])\n\n  useEffect(() => {\n    // we check for length before emitting here to skip the initial empty array\n    // state from the `useResolvedPanes` hook. there should always be a root\n    // pane emitted on subsequent emissions\n    if (resolvedPanes.length) {\n      onPaneChange(resolvedPanes)\n    }\n  }, [onPaneChange, resolvedPanes])\n\n  useEffect(() => {\n    const handleGlobalKeyDown = (event: KeyboardEvent) => {\n      // Prevent `Cmd+S`\n      if (isSaveHotkey(event)) {\n        event.preventDefault()\n\n        pushToast({\n          closable: true,\n          id: 'auto-save-message',\n          status: 'info',\n          title: 'Your work is automatically saved!',\n          duration: 4000,\n        })\n      }\n    }\n\n    window.addEventListener('keydown', handleGlobalKeyDown)\n    return () => window.removeEventListener('keydown', handleGlobalKeyDown)\n  }, [pushToast])\n\n  const hasDefinedDocumentTypes = schema._original?.types.some(_isCustomDocumentTypeDefinition)\n\n  if (!hasDefinedDocumentTypes) {\n    return <NoDocumentTypesScreen />\n  }\n\n  return (\n    <PortalProvider element={portalElement || null}>\n      <StyledPaneLayout\n        flex={1}\n        height={layoutCollapsed ? undefined : 'fill'}\n        minWidth={512}\n        onCollapse={handleRootCollapse}\n        onExpand={handleRootExpand}\n      >\n        {paneDataItems.map(\n          ({\n            active,\n            childItemId,\n            groupIndex,\n            itemId,\n            key: paneKey,\n            pane,\n            index: paneIndex,\n            params: paneParams,\n            path,\n            payload,\n            siblingIndex,\n            selected,\n          }) => (\n            <Fragment key={`${pane === LOADING_PANE ? 'loading' : pane.type}-${paneIndex}`}>\n              {pane === LOADING_PANE ? (\n                <LoadingPane paneKey={paneKey} path={path} selected={selected} />\n              ) : (\n                <DeskToolPane\n                  active={active}\n                  groupIndex={groupIndex}\n                  index={paneIndex}\n                  pane={pane}\n                  childItemId={childItemId}\n                  itemId={itemId}\n                  paneKey={paneKey}\n                  params={paneParams}\n                  payload={payload}\n                  path={path}\n                  selected={selected}\n                  siblingIndex={siblingIndex}\n                />\n              )}\n            </Fragment>\n          )\n        )}\n        {/* If there's just 1 pane (the root), or less, and we're resolving an intent then it's necessary to show */}\n        {/* a loading indicator as the intent resolving is async, could take a while and can also be interrupted/redirected */}\n        {paneDataItems.length <= 1 && isResolvingIntent && (\n          <LoadingPane paneKey=\"intent-resolver\" />\n        )}\n      </StyledPaneLayout>\n      <div data-portal=\"\" ref={setPortalElement} />\n    </PortalProvider>\n  )\n})\n", "import React, {useEffect, useState} from 'react'\nimport {ErrorBoundary} from '@sanity/ui'\nimport {DeskToolOptions} from '../../types'\nimport {DeskToolProvider} from '../../DeskToolProvider'\nimport {setActivePanes} from '../../getIntentState'\nimport {IntentResolver} from './intentResolver'\nimport {StructureError} from './StructureError'\nimport {DeskTool} from './DeskTool'\nimport {SourceProvider, useWorkspace, Tool} from 'sanity'\n\ninterface DeskToolBoundaryProps {\n  tool: Tool<DeskToolOptions>\n}\n\nexport function DeskToolBoundary({tool: {options}}: DeskToolBoundaryProps) {\n  const {unstable_sources: sources} = useWorkspace()\n  const [firstSource] = sources\n  const {source, defaultDocumentNode, structure} = options || {}\n\n  // Set active panes to blank on mount and unmount\n  useEffect(() => {\n    setActivePanes([])\n    return () => setActivePanes([])\n  }, [])\n\n  const [{error}, setError] = useState<{error: unknown}>({error: null})\n  // this re-throws if the error it catches is not a PaneResolutionError\n  if (error) return <StructureError error={error} />\n\n  return (\n    <ErrorBoundary onCatch={setError}>\n      <SourceProvider name={source || firstSource.name}>\n        <DeskToolProvider defaultDocumentNode={defaultDocumentNode} structure={structure}>\n          <DeskTool onPaneChange={setActivePanes} />\n          <IntentResolver />\n        </DeskToolProvider>\n      </SourceProvider>\n    </ErrorBoundary>\n  )\n}\n"],
  "mappings": "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",
  "names": ["Delay", "_ref", "children", "ms", "ready", "setReady", "useState", "useEffect", "timeoutId", "setTimeout", "clearTimeout", "jsx", "Fragment", "RenderActionCollectionState", "props", "actions", "actionProps", "onActionComplete", "GetHookCollectionState", "onReset", "hooks", "args", "RenderBadgeCollectionState", "badges", "badgeProps", "rest", "emptyArray", "PaneRouterProvider", "flatIndex", "index", "params", "payload", "siblingIndex", "navigate", "navigateIntent", "useRouter", "routerState", "useRouterState", "routerPaneGroups", "useMemo", "panes", "groupIndex", "modifyCurrentGroup", "useCallback", "modifier", "currentGroup", "currentItem", "nextGroup", "nextPanes", "slice", "nextRouterState", "setPayload", "nextPayload", "siblings", "item", "setParams", "nextParams", "handleEditReference", "_ref2", "id", "parentRefPath", "type", "template", "pathToString", "ctx", "hasGroupSiblings", "length", "groupLength", "routerPanesState", "ChildLink", "BackLink", "ReferenceChildLink", "ParameterizedLink", "replaceCurrent", "opts", "arguments", "undefined", "closeCurrent", "filter", "sibling", "duplicateCurrent", "options", "duplicatedItem", "setView", "viewId", "restParams", "omit", "view", "PaneRouterContext", "Provider", "value", "_calcPaneResize", "cache", "left", "right", "deltaX", "_a", "_b", "sum", "flex", "width", "leftMinWidth", "minWidth", "PANE_DEFAULT_MIN_WIDTH", "rightMinWidth", "leftMaxWidth", "Math", "min", "maxWidth", "Infinity", "rightMaxWidth", "minDeltaX", "rightMinDeltaX", "maxDeltaX", "leftMaxDeltaX", "_deltaX", "max", "leftW", "rightW", "leftFlex", "rightFlex", "_getDOMPath", "rootElement", "el", "path", "e", "parentElement", "Array", "from", "childNodes", "indexOf", "unshift", "EMPTY_PATH", "_sortElements", "elements", "map", "WeakMap", "element", "set", "_sortByElementPath", "a", "b", "get", "len", "i", "aIndex", "bIndex", "sort", "createPaneLayoutController", "observers", "optionsMap", "userCollapsedElementSet", "Set", "rootWidth", "expandedElement", "resizeDataMap", "Map", "resizing", "collapse", "add", "_notifyObservers", "expand", "delete", "mount", "original", "push", "idx", "splice", "resize", "leftElement", "_c", "_d", "leftIndex", "leftOptions", "rightElement", "rightOptions", "offsetWidth", "leftResizeData", "rightResizeData", "currentMinWidth", "currentMaxWidth", "setRootElement", "nextRootElement", "setRootWidth", "nextRootWidth", "subscribe", "observer", "_elements", "dataMap", "lastElement", "collapsedWidth", "PANE_COLLAPSED_WIDTH", "remaingWidth", "isLast", "userCollapsed", "has", "sizeCollapsed", "collapsed", "resizeData", "data", "PaneLayout", "onCollapse", "onExpand", "restProps", "controller", "rootRect", "useElementRect", "state", "setState", "paneLayout", "PaneLayoutContext", "Root", "ref", "PaneResolutionError", "Error", "constructor", "message", "context", "helpId", "cause", "_ref3", "randomIdCache", "assignId", "obj", "cachedValue", "nanoid", "bindCache", "memoBind", "methodKey", "boundMethods", "bound", "method", "concat", "bind", "isPromise", "thing", "then", "isSerializable", "isRecord", "serialize", "rethrowWithPaneResolutionErrors", "next", "unresolvedPane", "wrapWithPublishReplay", "pipe", "publishReplay", "refCount", "createPaneResolver", "middleware", "resolvePane", "isObservable", "switchMap", "result", "observableOf", "resolveIntent", "resolvedPaneCache", "memoize", "nextFn", "key", "join", "cachedResolvedPane", "fallbackEditorPanes", "traverse", "_ref4", "currentId", "intent", "parent", "levelIndex", "structureContext", "targetId", "schemaTypeName", "otherParams", "splitIndex", "resolvedPane", "firstValueFrom", "depthIndex", "canHandleIntent", "call", "pane", "child", "items", "Promise", "all", "nextLevelIndex", "resolve", "_id", "flat", "matchingPanes", "rootPaneNode", "closestPaneToRoot", "useDeskTool", "deskTool", "useContext", "DeskToolContext", "fallbackEditorChild", "nodeId", "replace", "resolveDocumentNode", "defaultDocumentBuilder", "schemaType", "documentId", "title", "initialValueTemplate", "hashContext", "JSON", "stringify", "parentId", "serializeOptionsIndex", "serializeOptions", "serializeOptionsPath", "hashResolvedPaneMeta", "meta", "normalized", "routerPaneSibling", "paneNode", "resolvePaneTree", "_ref5", "flattenedRouterPanes", "current", "resolvedPaneMeta", "loadingPanes", "restIndex", "loadingPanePath", "_", "currentIndex", "loadingPane", "nextStream", "startsWith", "nextResolvedPanes", "console", "warn", "generateHelpUrl", "createResolvedPaneNodeStream", "_ref6", "routerPanesStream", "initialCacheState", "cacheKeysByFlatIndex", "NEVER", "resolvedPanes$", "rawRouterPanes", "routerPanes", "flatMap", "routerPaneGroup", "startWith", "pairwise", "_ref7", "prev", "curr", "prevValue", "currValue", "isEqual", "diffIndex", "scan", "acc", "beforeDiffIndex", "afterDiffIndex", "keysToKeep", "keySet", "keysToDelete", "cacheKeySet", "_ref8", "nextPane", "prevPane", "distinctUntilChanged", "nextValue", "useRouterPanesStream", "routerStateSubject", "ReplaySubject", "routerPanes$", "asObservable", "_routerState", "useResolvedPanes", "error", "setError", "setData", "paneDataItems", "resolvedPanes", "reduce", "groupsLen", "itemId", "paneDataItem", "active", "childItemId", "LOADING_PANE", "selected", "subscription", "unsubscribe", "ensureDocumentIdAndType", "documentStore", "uuid", "resolvedType", "resolveTypeForDocument", "EMPTY_RECORD", "IntentResolver", "memo", "maybeIntent", "intentName", "useDocumentStore", "cancelled", "effect", "catch", "PathSegment", "styled", "span", "_templateObject", "_taggedTemplateLiteral", "formatStack", "stack", "RegExp", "window", "location", "host", "StructureError", "_ref9", "showStack", "SerializeError", "includes", "handleReload", "reload", "Card", "height", "overflow", "padding", "sizing", "tone", "Container", "Heading", "as", "jsxs", "marginTop", "radius", "shadow", "Stack", "space", "Label", "Code", "segment", "Box", "Text", "href", "rel", "target", "Button", "text", "icon", "SyncIcon", "onClick", "UnknownPane", "isSelected", "paneKey", "Pane", "PaneHeader", "PaneContent", "muted", "getWaitMessages", "thresholds", "isDev", "src", "of", "merge", "_ref10", "mapTo", "delay", "DEFAULT_MESSAGE", "Content", "Flex", "_templateObject2", "LoadingPane", "messageProp", "resolvedMessage", "split", "currentMessage", "setCurrentMessage", "sub", "contentElement", "setContentElement", "mounted", "setMounted", "_raf2", "content", "align", "direction", "justify", "Spinner", "size", "displayName", "paneMap", "component", "lazy", "document", "documentList", "list", "DeskToolPane", "PaneComponent", "Suspense", "fallback", "isActive", "_ref11", "_ref12", "prevParams", "prevPayload", "keys", "Object", "ErrorPane", "paddingX", "paddingY", "getOpErrorTitle", "op", "getOpSuccessTitle", "IGNORE_OPS", "DocumentOperationResults", "pushToast", "useToast", "documentType", "useDocumentPane", "event", "useDocumentOperationEvent", "prevEvent", "useRef", "closable", "duration", "status", "description", "getHistoryMenuItem", "features", "hasValue", "changesOpen", "reviewChanges", "action", "RestoreIcon", "isDisabled", "getInspectItem", "_ref13", "BinaryDocumentIcon", "shortcut", "getProductionPreviewItem", "_ref14", "previewUrl", "EarthAmericasIcon", "getMenuItems", "Boolean", "fn", "isSanityDocument", "_type", "usePreviewUrl", "setPreviewUrl", "resolveProductionUrl", "useSource", "value$", "useAsObservable", "debounceTime", "catchError", "getInitialValueTemplateOpts", "templates", "panePayload", "structureNodeTemplate", "templateName", "urlTemplate", "typeTemplates", "t", "templateParams", "emptyObject", "DocumentPaneProvider", "schema", "useSchema", "useTemplates", "documentActions", "documentBadges", "unstable_languageFilter", "languageFilterResolver", "presenceStore", "usePresenceStore", "paneRouter", "usePaneRouter", "menuItemGroups", "views", "viewsProp", "paneOptions", "useUnique", "documentIdRaw", "getPublishedId", "paneParams", "templateParameters", "initialValueRaw", "useInitialValue", "initialValue", "patch", "useDocumentOperation", "editState", "useEditState", "validation", "validationRaw", "useValidationStatus", "connectionState", "useConnectionState", "draft", "published", "languageFilter", "focusPath", "setFocusPath", "pathFromString", "activeViewId", "timelineMode", "setTimelineMode", "since", "timelineError", "setTimelineError", "timelineStore", "useTimelineStore", "onError", "rev", "onOlderRevision", "useTimelineSelector", "revTime", "sinceAttributes", "timelineDisplayed", "timelineReady", "presence", "setPresence", "documentPresence", "nextPresence", "menuItems", "inspectOpen", "inspect", "compareValue", "displayed", "setTimelineRange", "newSince", "newRev", "handleFocus", "nextFocusPath", "setLocation", "lastActiveAt", "Date", "toISOString", "handleBlur", "blurredPath", "patchRef", "execute", "toMutationPatches", "patches", "handleChange", "handleHistoryClose", "handleHistoryOpen", "handlePaneClose", "handlePaneSplit", "toggleInspect", "toggle", "handleMenuAction", "open", "handleKeyUp", "isHotkey", "preventDefault", "stopPropagation", "handleInspectClose", "openPath", "onSetOpenPath", "fieldGroupState", "onSetFieldGroupState", "collapsedPaths", "onSetCollapsedPath", "collapsedFieldSets", "onSetCollapsedFieldSets", "handleOnSetCollapsedPath", "prevState", "setAtPath", "handleOnSetCollapsedFieldSet", "handleSetActiveFieldGroup", "groupName", "requiredPermission", "_createdAt", "liveEdit", "docId", "docPermissionsInput", "getDraftId", "permissions", "isPermissionsLoading", "useDocumentValuePermissions", "permission", "isNonExistent", "readOnly", "hasNoPermission", "granted", "updateActionDisabled", "isActionEnabled", "createActionDisabled", "reconnecting", "isLocked", "transactionSyncLock", "enabled", "formState", "useFormState", "comparisonValue", "formStateRef", "setOpenPath", "ops", "getExpandOperations", "forEach", "documentPane", "onBlur", "onChange", "onFocus", "onPathOpen", "onHistoryClose", "onHistoryOpen", "onInspectClose", "onKeyUp", "onMenuAction", "onPaneClose", "onPaneSplit", "onSetActiveFieldGroup", "onSetCollapsedFieldSet", "pathFromUrl", "resolveKeyedPath", "DocumentPaneContext", "TIMELINE_LABELS", "create", "discardDraft", "initial", "editDraft", "editLive", "publish", "unpublish", "TIMELINE_ICON_COMPONENTS", "AddCircleIcon", "TrashIcon", "CloseIcon", "EditIcon", "PublishIcon", "UnpublishIcon", "formatTimelineEventLabel", "getTimelineEventIconComponent", "UserAvatarStack", "_ref15", "maxLength", "userIds", "AvatarStack", "userId", "UserAvatar", "user", "withTooltip", "IconWrapper", "_ref16", "theme", "borderColor", "sanity", "color", "base", "skeleton", "css", "_templateObject3", "_ref17", "$selected", "_templateObject4", "_templateObject5", "IconBox", "_templateObject6", "EventLabel", "_templateObject7", "TimestampBox", "_templateObject8", "_ref18", "rem", "TIMELINE_ITEM_EVENT_TONE", "withinSelection", "TimelineItem", "_ref19", "chunk", "isFirst", "isLatest", "onSelect", "timestamp", "iconComponent", "authorUserIds", "authors", "formattedTimestamp", "parsedDate", "formattedDate", "format", "handleClick", "evt", "mode", "createElement", "margin", "weight", "StackWrapper", "_templateObject9", "ListWrapper", "_templateObject10", "_ref20", "$visible", "_templateObject11", "_templateObject12", "Timeline", "_ref21", "chunks", "disabledBeforeFirstChunk", "hasMoreChunks", "lastChunk", "onLoadMore", "firstChunk", "filteredChunks", "c", "selectedIndex", "findIndex", "renderItem", "_ref22", "activeIndex", "paddingBottom", "paddingTop", "endTimestamp", "CommandList", "activeItemDataAttr", "ariaLabel", "autoFocus", "initialIndex", "initialScrollAlign", "itemHeight", "onEndReached", "onEndReachedIndexOffset", "overscan", "wrapAround", "TimelineError", "gap", "TextWithTone", "ErrorOutlineIcon", "Popover", "_templateObject13", "TimelineMenu", "_ref23", "placement", "setOpen", "button", "setButton", "popover", "setPopover", "toast", "loading", "isLoading", "realRevChunk", "sinceTime", "handleOpen", "handleClose", "handleClickOutside", "handleGlobalKeyDown", "focus", "useClickOutside", "useGlobalKeyDown", "selectRev", "revChunk", "sinceId", "revId", "findRangeForRev", "err", "selectSince", "sinceChunk", "findRangeForSince", "handleLoadMore", "loadMore", "timeLabel", "useFormattedTimestamp", "revLabel", "upperFirst", "sinceLabel", "buttonLabel", "constrainSize", "portal", "disabled", "fontSize", "iconRight", "SelectIcon", "time", "formatted", "LoadingContent", "collectLatestAuthorAnnotations", "diff", "authorMap", "visitDiff", "annotation", "author", "previous", "values", "Scroller", "ScrollContainer", "_templateObject14", "ChangesPanel", "usePane", "scrollRef", "selectionState", "isComparingCurrent", "documentContext", "React", "FieldWrapper", "ChangeFieldWrapper", "rootDiff", "changeAnnotations", "style", "borderLeft", "subActions", "paddingRight", "DiffTooltip", "annotations", "_ref24", "tabs", "BoundaryElementProvider", "_ref25", "NoChanges", "DocumentChangeContext", "ChangeList", "useDeskToolSetting", "namespace", "defaultValue", "settingsStore", "useSettingsStore", "setValue", "deskToolSettings", "forNamespace", "settings", "forKey", "listen", "newValue", "VIEW_MODE_PARSED", "VIEW_MODE_RAW", "VIEW_MODES", "lru", "HLRU", "isExpanded", "keyPath", "cached", "isArray", "toggleExpanded", "selectElement", "sel", "getSelection", "range", "createRange", "removeAllRanges", "selectNodeContents", "addRange", "select", "currentTarget", "maybeSelectAll", "selectAll", "keyCode", "metaKey", "ctrlKey", "isDocumentLike", "isString", "JSONInspectorWrapper", "div", "_ref26", "fonts", "_templateObject15", "code", "family", "sizes", "lineHeight", "syntax", "property", "constant", "string", "boolean", "number", "Search", "query", "TextInput", "SearchIcon", "placeholder", "InspectDialog", "dialogIdPrefix", "viewModeId", "onViewModeChange", "viewMode", "find", "setParsedViewMode", "setRawViewMode", "Dialog", "header", "DocTitle", "onClose", "onClickOutside", "position", "bottom", "zIndex", "TabList", "Tab", "label", "TabPanel", "outline", "JSONInspector", "search", "language", "tabIndex", "onKeyDown", "onDoubleClick", "_templateObject16", "TextOneLine", "_templateObject17", "ReferenceChangedBanner", "_e", "_f", "documentPreviewStore", "useDocumentPreviewStore", "routerReferenceId", "parentGroup", "parentSibling", "hasHistoryOpen", "referenceInfo", "useMemoObservable", "parentRefPathSegment", "publishedId", "keyedSegmentIndex", "p", "unstable_observePathsDocumentPair", "_ref27", "availability", "refValue", "pathGet", "snapshot", "handleReloadReference", "shouldHide", "available", "WarningOutlineIcon", "marginLeft", "_templateObject18", "PermissionCheckBanner", "_ref28", "currentUser", "useCurrentUser", "plural", "roles", "r", "name", "ReadOnlyIcon", "array", "sep", "usePrevious", "LONG_ENOUGH_BUT_NOT_TOO_LONG", "useConditionalToast", "wasEnabled", "ev", "FormView", "hidden", "margins", "useDocumentPresence", "patchChannel", "createPatchChannel", "pair", "documentEvents", "tap", "prepareMutationEvent", "prepareRebaseEvent", "hasRev", "_rev", "formRef", "focusFirstDescendant", "PresenceOverlay", "onSubmit", "FormBuilder", "__internal_patchChannel", "changed", "focused", "groups", "members", "onFieldGroupSelect", "onPathBlur", "onPathFocus", "onSetFieldSetCollapsed", "onSetPathCollapsed", "mutations", "mut", "fromMutationPatches", "origin", "remotePatches", "remoteMutations", "localPatches", "localMutations", "DocumentHeaderTabs", "tabPanelId", "DocumentHeaderTab", "BUTTON_PROPS", "warning", "info", "InfoOutlineIcon", "ValidationMenu", "boundaryElement", "isOpen", "useId", "hasValidationMarkers", "hasErrorMarkers", "some", "isValidationErrorMarker", "hasWarningMarkers", "isValidationWarningMarker", "hasInfoMarkers", "isValidationInfoMarker", "buttonProps", "MenuButton", "menu", "Menu", "ValidationList", "preventOverflow", "DocumentHeaderTitle", "documentValue", "subscribed", "useValuePreview", "isActionButton", "showAsAction", "isMenuButton", "negate", "DocumentPanelHeader", "forwardRef", "_ref29", "contextMenuItems", "isValidationOpen", "setValidationOpen", "showTabs", "showVersionMenu", "showSplitPaneButton", "splitViews", "showSplitPaneCloseButton", "showPaneGroupCloseButton", "backButton", "ArrowLeftIcon", "Inline", "languageFilterComponent", "PaneContextMenuButton", "itemGroups", "onAction", "SplitVerticalIcon", "_ref30", "$disabled", "_templateObject19", "DocumentPanel", "footerHeight", "isInspectOpen", "setDocumentPanelPortalElement", "layoutCollapsed", "usePaneLayout", "parentPortal", "usePortal", "headerElement", "setHeaderElement", "headerRect", "portalRef", "documentScrollElement", "setDocumentScrollElement", "activeView", "portalElement", "splitPanes", "formViewHidden", "activeViewNode", "historical", "scrollTo", "inspectDialog", "PortalProvider", "__unstable_elements", "VirtualizerScrollInstanceProvider", "scrollElement", "POPOVER_FALLBACK_PLACEMENTS", "DIALOG_WIDTH_TO_UI_WIDTH", "small", "medium", "large", "full", "ConfirmDialog", "dialog", "referenceElement", "ConfirmDialogContent", "fallbackPlacements", "cancelButtonIcon", "cancelButtonText", "confirmButtonIcon", "confirmButtonText", "onCancel", "onConfirm", "isTopLayer", "useLayer", "setElement", "borderTop", "Grid", "columns", "ModalDialog", "dialogId", "footer", "LegacyLayerProvider", "zOffset", "__unstable_hideCloseButton", "showCloseButton", "PopoverDialog", "PopoverDialogContent", "DocumentActionPortalProvider", "DOCUMENT_PANEL_PORTAL_ELEMENT", "ActionStateDialog", "modalId", "unknownModal", "ActionMenuButton", "actionStates", "idPrefix", "buttonRef", "actionIndex", "setActionIndex", "setReferenceElement", "handleAction", "popoverProps", "currentAction", "ChevronDownIcon", "actionState", "ActionMenuListItem", "onHandle", "tooltipContent", "MenuItem", "Tooltip", "marginRight", "isValidElement", "isValidElementType", "Hotkeys", "String", "s", "toUpperCase", "DocumentStatusBarActionsInner", "showMenu", "states", "firstActionState", "menuActionStates", "buttonElement", "setButtonElement", "toLowerCase", "LayerProvider", "DocumentStatusBarActions", "_ref31", "HistoryStatusBarActions", "revision", "historyActions", "HistoryRestoreAction", "_ref32", "BADGE_TONES", "primary", "success", "danger", "DocumentBadgesInner", "_ref33", "badge", "Badge", "whiteSpace", "DocumentBadges", "_ref34", "_templateObject20", "PublishStatus", "lastPublished", "lastUpdated", "lastPublishedTimeAgo", "useTimeAgo", "minimal", "agoSuffix", "lastPublishedTime", "lastUpdatedTimeAgo", "lastUpdatedTime", "PlayIcon", "StyledMotionPath", "motion", "_templateObject21", "Circle", "circle", "fill", "cx", "cy", "strokeWidth", "Arrows", "d", "Checkmark", "Edit", "rotateAnimation", "keyframes", "_templateObject22", "RotateGroup", "g", "_templateObject23", "root", "syncing", "scale", "transition", "saved", "changes", "strokeDasharray", "strokeDashoffset", "opacity", "arrows", "checkmark", "pathLength", "edit", "AnimatedStatusIcon", "viewBox", "stroke", "variants", "animate", "ReviewButton", "ReviewChangesButton", "SYNCING_TIMEOUT", "SAVED_TIMEOUT", "DocumentSparkline", "syncState", "useSyncState", "_updatedAt", "rootFlexElement", "setRootFlexElement", "rootFlexRect", "setStatus", "showingRevision", "isSyncing", "timerId", "useLayoutEffect", "reviewButton", "publishStatus", "DocumentActionsBox", "_templateObject24", "DocumentStatusBar", "actionsBoxRef", "paddingLeft", "KeyboardShortcutResponder", "actionsBoxElement", "onActionStart", "rootRef", "activeAction", "handleKeyDown", "matchingStates", "matchingState", "DocumentActionShortcuts", "setActiveIndex", "onComplete", "_ref35", "DOCUMENT_PANEL_MIN_WIDTH", "DOCUMENT_PANEL_INITIAL_MIN_WIDTH", "CHANGES_PANEL_MIN_WIDTH", "DIALOG_PROVIDER_POSITION", "StyledChangeConnectorRoot", "ChangeConnectorRoot", "_templateObject25", "DocumentPane", "parentSourceName", "SourceProvider", "source", "DocumentPaneInner", "resolveNewDocumentOptions", "usePaneOptions", "isLoaded", "isDocumentLoaded", "useDocumentType", "templateItems", "templatePermissions", "isTemplatePermissionsLoading", "useTemplatePermissions", "providerProps", "mergeDocumentType", "childParams", "routerPanesStateLength", "activePath", "ReferenceInputOptionsProvider", "EditReferenceLinkComponent", "onEditReference", "initialValueTemplateItems", "InnerDocumentPane", "zOffsets", "useZIndex", "footerElement", "setFooterElement", "setActionsBoxElement", "documentPanelPortalElement", "footerRect", "footerH", "documentPanel", "DialogProvider", "PaneFooter", "changesPanel", "onConnectorSetFocus", "isReviewChangesOpen", "onOpenReviewChanges", "onSetFocus", "NoDocumentTypesScreen", "StyledPaneLayout", "_templateObject26", "isSaveHotkey", "DeskTool", "_ref36", "onPaneChange", "setLayoutCollapsed", "isResolvingIntent", "setPortalElement", "handleRootCollapse", "handleRootExpand", "addEventListener", "removeEventListener", "hasDefinedDocumentTypes", "_original", "types", "_isCustomDocumentTypeDefinition", "_ref37", "paneIndex", "DeskToolBoundary", "tool", "_ref38", "unstable_sources", "sources", "useWorkspace", "firstSource", "defaultDocumentNode", "structure", "setActivePanes", "ErrorBoundary", "onCatch", "DeskToolProvider"]
}
