{"version":3,"file":"index.esm.js","sources":["../src/loader/loadGoogleMapsApi.ts","../src/loader/LoadError.tsx","../src/loader/GoogleMapsLoadProxy.tsx","../src/map/SearchInput.styles.tsx","../src/map/SearchInput.tsx","../src/map/util.ts","../src/map/Map.styles.tsx","../src/map/Map.tsx","../src/map/Marker.tsx","../src/input/GeopointSelect.tsx","../src/input/GeopointInput.styles.tsx","../src/global-workaround.ts","../src/input/GeopointInput.tsx","../src/map/Arrow.tsx","../src/diff/GeopointMove.tsx","../src/diff/GeopointFieldDiff.styles.tsx","../src/diff/GeopointArrayDiff.tsx","../src/diff/GeopointFieldDiff.tsx","../src/plugin.tsx"],"sourcesContent":["declare global {\n  interface Window {\n    gm_authFailure: any\n    ___sanity_googleMapsApiCallback: any\n  }\n}\n\nconst callbackName = '___sanity_googleMapsApiCallback'\nconst authFailureCallbackName = 'gm_authFailure'\n\nexport class AuthError extends Error {}\n\nfunction _loadGoogleMapsApi(config: {locale: string; apiKey: string}) {\n  return new Promise<typeof window.google.maps>((resolve, reject) => {\n    window[authFailureCallbackName] = () => {\n      reject(new AuthError('Authentication error when loading Google Maps API.'))\n    }\n\n    window[callbackName] = () => {\n      resolve(window.google.maps)\n    }\n\n    const script = document.createElement('script')\n    script.onerror = (\n      event: Event | string,\n      source?: string,\n      lineno?: number,\n      colno?: number,\n      error?: Error\n    ) => reject(new Error(coeerceError(event, error)))\n\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${config.apiKey}&libraries=places&callback=${callbackName}&language=${config.locale}`\n    document.getElementsByTagName('head')[0].appendChild(script)\n  }).finally(() => {\n    delete window[callbackName]\n    delete window[authFailureCallbackName]\n  })\n}\n\nlet memo: Promise<typeof window.google.maps> | null = null\nexport function loadGoogleMapsApi(config: {locale: string; apiKey: string}) {\n  if (memo) {\n    return memo\n  }\n  memo = _loadGoogleMapsApi(config)\n  memo.catch(() => {\n    memo = null\n  })\n  return memo\n}\nfunction coeerceError(event: Event | string, error?: Error): string {\n  if (error) {\n    return error.message\n  }\n\n  if (typeof event === 'string') {\n    return event\n  }\n\n  return isErrorEvent(event) ? event.message : 'Failed to load Google Maps API'\n}\n\nfunction isErrorEvent(event: unknown): event is ErrorEvent {\n  if (typeof event !== 'object' || event === null) {\n    return false\n  }\n\n  if (!('message' in event)) {\n    return false\n  }\n\n  return typeof (event as ErrorEvent).message === 'string'\n}\n","import * as React from 'react'\nimport {Card, Box, Text, Code} from '@sanity/ui'\n\ntype Props = {error: {message?: string}; isAuthError: false} | {isAuthError: true}\n\nexport function LoadError(props: Props) {\n  return (\n    <Card tone=\"critical\" radius={1}>\n      <Box as=\"header\" paddingX={4} paddingTop={4} paddingBottom={1}>\n        <Text as=\"h2\" weight=\"bold\">\n          Google Maps failed to load\n        </Text>\n      </Box>\n\n      <Box paddingX={4} paddingTop={4} paddingBottom={1}>\n        {props.isAuthError ? (\n          <AuthError />\n        ) : (\n          <>\n            <Text as=\"h3\">Error details:</Text>\n            <pre>\n              <Code size={1}>{'error' in props && props.error?.message}</Code>\n            </pre>\n          </>\n        )}\n      </Box>\n    </Card>\n  )\n}\n\nfunction AuthError() {\n  return (\n    <Text>\n      <p>The error appears to be related to authentication</p>\n      <p>Common causes include:</p>\n      <ul>\n        <li>Incorrect API key</li>\n        <li>Referer not allowed</li>\n        <li>Missing authentication scope</li>\n      </ul>\n      <p>Check the browser developer tools for more information.</p>\n    </Text>\n  )\n}\n","import React, {useEffect, useState} from 'react'\nimport {AuthError, loadGoogleMapsApi} from './loadGoogleMapsApi'\nimport {LoadError as LoadErrorView} from './LoadError'\nimport {GoogleMapsInputConfig} from '../index'\n\ninterface LoadProps {\n  children: (api: typeof window.google.maps) => React.ReactElement\n  config: GoogleMapsInputConfig\n}\n\nconst browserLocale = (typeof window !== 'undefined' && window.navigator.language) || 'en'\n\ntype LoadState =\n  | {\n      type: 'loading'\n    }\n  | {\n      type: 'loaded'\n      api: typeof window.google.maps\n    }\n  | {\n      type: 'error'\n      error: {type: 'loadError' | 'authError'; message: string}\n    }\n\nfunction useLoadGoogleMapsApi(config: {defaultLocale?: string; apiKey: string}): LoadState {\n  const locale = config.defaultLocale || browserLocale || 'en-US'\n\n  const [state, setState] = useState<LoadState>({type: 'loading'})\n\n  useEffect(() => {\n    loadGoogleMapsApi({locale, apiKey: config.apiKey}).then(\n      (api) => setState({type: 'loaded', api}),\n      (err) =>\n        setState({\n          type: 'error',\n          error: {type: err instanceof AuthError ? 'authError' : 'loadError', message: err.message},\n        })\n    )\n  }, [locale, config.apiKey])\n  return state\n}\n\nexport function GoogleMapsLoadProxy(props: LoadProps) {\n  const loadState = useLoadGoogleMapsApi(props.config)\n  switch (loadState.type) {\n    case 'error':\n      return (\n        <LoadErrorView error={loadState.error} isAuthError={loadState.error.type === 'authError'} />\n      )\n    case 'loading':\n      return <div>Loading Google Maps API</div>\n    case 'loaded':\n      return props.children(loadState.api)\n    default:\n      return null\n  }\n}\n","import styled from 'styled-components'\n\nexport const WrapperContainer = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 220px;\n`\n","import * as React from 'react'\nimport {TextInput} from '@sanity/ui'\nimport {WrapperContainer} from './SearchInput.styles'\n\ninterface Props {\n  api: typeof window.google.maps\n  map: google.maps.Map\n  onChange: (result: google.maps.places.PlaceResult) => void\n}\n\nexport class SearchInput extends React.PureComponent<Props> {\n  searchInputRef = React.createRef<HTMLInputElement>()\n  autoComplete: google.maps.places.Autocomplete | undefined\n\n  handleChange = () => {\n    if (!this.autoComplete) {\n      return\n    }\n\n    this.props.onChange(this.autoComplete.getPlace())\n\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.value = ''\n    }\n  }\n\n  componentDidMount() {\n    const input = this.searchInputRef.current\n    if (!input) {\n      return\n    }\n\n    const {api, map} = this.props\n    const {Circle, places, event} = api\n    const searchBounds = new Circle({center: map.getCenter(), radius: 100}).getBounds()!\n    this.autoComplete = new places.Autocomplete(input, {\n      bounds: searchBounds,\n      types: [], // return all kinds of places\n    })\n\n    event.addListener(this.autoComplete, 'place_changed', this.handleChange)\n  }\n\n  render() {\n    return (\n      <WrapperContainer>\n        <TextInput\n          name=\"place\"\n          ref={this.searchInputRef}\n          placeholder=\"Search for place or address\"\n          padding={4}\n        />\n      </WrapperContainer>\n    )\n  }\n}\n","import {LatLng} from '../types'\n\nexport function latLngAreEqual(\n  latLng1: LatLng | google.maps.LatLng,\n  latLng2: LatLng | google.maps.LatLng\n): boolean {\n  const lat1 = typeof latLng1.lat === 'function' ? latLng1.lat() : latLng1.lat\n  const lng1 = typeof latLng1.lng === 'function' ? latLng1.lng() : latLng1.lng\n\n  const lat2 = typeof latLng2.lat === 'function' ? latLng2.lat() : latLng2.lat\n  const lng2 = typeof latLng2.lng === 'function' ? latLng2.lng() : latLng2.lng\n\n  return lat1 === lat2 && lng1 === lng2\n}\n","import styled from 'styled-components'\n\nexport const MapContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n`\n","import React from 'react'\nimport {LatLng} from '../types'\nimport {latLngAreEqual} from './util'\nimport {MapContainer} from './Map.styles'\n\ninterface MapProps {\n  api: typeof window.google.maps\n  location: LatLng\n  bounds?: google.maps.LatLngBounds\n  defaultZoom?: number\n  mapTypeControl?: boolean\n  scrollWheel?: boolean\n  controlSize?: number\n  onClick?: (event: google.maps.MapMouseEvent) => void\n  children?: (map: google.maps.Map) => React.ReactElement\n}\n\ninterface MapState {\n  map: google.maps.Map | undefined\n}\n\nexport class GoogleMap extends React.PureComponent<MapProps, MapState> {\n  static defaultProps = {\n    defaultZoom: 8,\n    scrollWheel: true,\n  }\n\n  state: MapState = {map: undefined}\n  clickHandler: google.maps.MapsEventListener | undefined\n  mapRef = React.createRef<HTMLDivElement>()\n  mapEl: HTMLDivElement | null = null\n\n  componentDidMount() {\n    this.attachClickHandler()\n  }\n\n  attachClickHandler = () => {\n    const map = this.state.map\n    if (!map) {\n      return\n    }\n\n    const {api, onClick} = this.props\n    const {event} = api\n\n    if (this.clickHandler) {\n      this.clickHandler.remove()\n    }\n\n    if (onClick) {\n      this.clickHandler = event.addListener(map, 'click', onClick)\n    }\n  }\n\n  componentDidUpdate(prevProps: MapProps) {\n    const map = this.state.map\n    if (!map) {\n      return\n    }\n\n    const {onClick, location, bounds} = this.props\n\n    if (prevProps.onClick !== onClick) {\n      this.attachClickHandler()\n    }\n\n    if (!latLngAreEqual(prevProps.location, location)) {\n      map.panTo(this.getCenter())\n    }\n\n    if (bounds && (!prevProps.bounds || !bounds.equals(prevProps.bounds))) {\n      map.fitBounds(bounds)\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.clickHandler) {\n      this.clickHandler.remove()\n    }\n  }\n\n  getCenter(): google.maps.LatLng {\n    const {location, api} = this.props\n    return new api.LatLng(location.lat, location.lng)\n  }\n\n  constructMap(el: HTMLDivElement) {\n    const {defaultZoom, api, mapTypeControl, controlSize, bounds, scrollWheel} = this.props\n\n    const map = new api.Map(el, {\n      zoom: defaultZoom,\n      center: this.getCenter(),\n      scrollwheel: scrollWheel,\n      streetViewControl: false,\n      mapTypeControl,\n      controlSize,\n    })\n\n    if (bounds) {\n      map.fitBounds(bounds)\n    }\n\n    return map\n  }\n\n  setMapElement = (element: HTMLDivElement | null) => {\n    if (element && element !== this.mapEl) {\n      const map = this.constructMap(element)\n      this.setState({map}, this.attachClickHandler)\n    }\n\n    this.mapEl = element\n  }\n\n  render() {\n    const {children} = this.props\n    const {map} = this.state\n    return (\n      <>\n        <MapContainer ref={this.setMapElement} />\n        {children && map ? children(map) : null}\n      </>\n    )\n  }\n}\n","import * as React from 'react'\nimport {LatLng} from '../types'\nimport {latLngAreEqual} from './util'\n\nconst markerPath =\n  'M 3.052 3.7 C 1.56 5.293 0.626 7.612 0.663 9.793 C 0.738 14.352 2.793 16.077 6.078 22.351 C 7.263 25.111 8.497 28.032 9.672 32.871 C 9.835 33.584 9.994 34.246 10.069 34.305 C 10.143 34.362 10.301 33.697 10.465 32.983 C 11.639 28.145 12.875 25.226 14.059 22.466 C 17.344 16.192 19.398 14.466 19.474 9.908 C 19.511 7.727 18.574 5.405 17.083 3.814 C 15.379 1.994 12.809 0.649 10.069 0.593 C 7.328 0.536 4.756 1.882 3.052 3.7 Z'\n\ninterface Props {\n  api: typeof window.google.maps\n  map: google.maps.Map\n  onMove?: (event: google.maps.MapMouseEvent) => void\n  onClick?: (event: google.maps.MapMouseEvent) => void\n  position: LatLng | google.maps.LatLng\n  zIndex?: number\n  opacity?: number\n  label?: string\n  markerRef?: React.MutableRefObject<google.maps.Marker | undefined>\n  color?: {background: string; border: string; text: string}\n}\n\nexport class Marker extends React.PureComponent<Props> {\n  marker: google.maps.Marker | undefined\n\n  eventHandlers: {\n    move?: google.maps.MapsEventListener\n    click?: google.maps.MapsEventListener\n  } = {}\n\n  componentDidMount() {\n    const {position, api, map, onMove, zIndex, opacity, label, markerRef, color} = this.props\n    const {Marker: GMarker} = api\n\n    let icon: google.maps.Symbol | undefined\n    if (color) {\n      icon = {\n        path: markerPath,\n        fillOpacity: 1,\n        fillColor: color.background,\n        strokeColor: color.border,\n        strokeWeight: 2,\n        anchor: new api.Point(10, 35),\n        labelOrigin: new api.Point(10, 11),\n      }\n    }\n\n    this.marker = new GMarker({\n      draggable: Boolean(onMove),\n      position,\n      map,\n      zIndex,\n      opacity,\n      label,\n      icon,\n    })\n\n    if (markerRef) {\n      markerRef.current = this.marker\n    }\n\n    this.attachMoveHandler()\n    this.attachClickHandler()\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.marker) {\n      return\n    }\n\n    const {position, onMove, label, zIndex, opacity, map} = this.props\n\n    if (prevProps.onMove !== onMove) {\n      this.attachMoveHandler()\n    }\n\n    if (!latLngAreEqual(prevProps.position, position)) {\n      this.marker.setPosition(position)\n    }\n\n    if (prevProps.label !== label) {\n      this.marker.setLabel(label || null)\n    }\n\n    if (prevProps.zIndex !== zIndex) {\n      this.marker.setZIndex(zIndex || null)\n    }\n\n    if (prevProps.opacity !== opacity) {\n      this.marker.setOpacity(opacity || null)\n    }\n\n    if (prevProps.map !== map) {\n      this.marker.setMap(map)\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.eventHandlers.move) {\n      this.eventHandlers.move.remove()\n    }\n\n    if (this.marker) {\n      this.marker.setMap(null)\n    }\n  }\n\n  attachMoveHandler() {\n    const {api, onMove} = this.props\n    if (this.eventHandlers.move) {\n      this.eventHandlers.move.remove()\n    }\n    if (this.marker && onMove) {\n      this.eventHandlers.move = api.event.addListener(this.marker, 'dragend', onMove)\n    }\n  }\n\n  attachClickHandler() {\n    const {api, onClick} = this.props\n    if (this.eventHandlers.click) {\n      this.eventHandlers.click.remove()\n    }\n    if (this.marker && onClick) {\n      this.eventHandlers.click = api.event.addListener(this.marker, 'click', onClick)\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  render(): any {\n    return null\n  }\n}\n","import React from 'react'\nimport {SearchInput} from '../map/SearchInput'\nimport {GoogleMap} from '../map/Map'\nimport {Marker} from '../map/Marker'\nimport {LatLng, Geopoint} from '../types'\n\nconst fallbackLatLng: LatLng = {lat: 40.7058254, lng: -74.1180863}\n\ninterface SelectProps {\n  api: typeof window.google.maps\n  value?: Geopoint\n  onChange?: (latLng: google.maps.LatLng) => void\n  defaultLocation?: LatLng\n  defaultZoom?: number\n}\n\nexport class GeopointSelect extends React.PureComponent<SelectProps> {\n  static defaultProps = {\n    defaultZoom: 8,\n    defaultLocation: {lng: 10.74609, lat: 59.91273},\n  }\n\n  mapRef = React.createRef<HTMLDivElement>()\n\n  getCenter() {\n    const {value = {}, defaultLocation = {}} = this.props\n    const point: LatLng = {...fallbackLatLng, ...defaultLocation, ...value}\n    return point\n  }\n\n  handlePlaceChanged = (place: google.maps.places.PlaceResult) => {\n    if (!place.geometry?.location) {\n      return\n    }\n\n    this.setValue(place.geometry.location)\n  }\n\n  handleMarkerDragEnd = (event: google.maps.MapMouseEvent) => {\n    if (event.latLng) this.setValue(event.latLng)\n  }\n\n  handleMapClick = (event: google.maps.MapMouseEvent) => {\n    if (event.latLng) this.setValue(event.latLng)\n  }\n\n  setValue(geoPoint: google.maps.LatLng) {\n    if (this.props.onChange) {\n      this.props.onChange(geoPoint)\n    }\n  }\n\n  render() {\n    const {api, defaultZoom, value, onChange} = this.props\n    return (\n      <GoogleMap\n        api={api}\n        location={this.getCenter()}\n        onClick={this.handleMapClick}\n        defaultZoom={defaultZoom}\n      >\n        {(map) => (\n          <>\n            <SearchInput api={api} map={map} onChange={this.handlePlaceChanged} />\n            {value && (\n              <Marker\n                api={api}\n                map={map}\n                position={value}\n                onMove={onChange ? this.handleMarkerDragEnd : undefined}\n              />\n            )}\n          </>\n        )}\n      </GoogleMap>\n    )\n  }\n}\n","import styled from 'styled-components'\n\nexport const PreviewImage = styled.img`\n  width: 100%;\n  height: auto;\n  vertical-align: top;\n`\n\nexport const DialogInnerContainer = styled.div`\n  height: 40rem;\n  width: 50rem;\n`\n","import {GoogleMapsInputConfig} from './index'\n\nlet config: GoogleMapsInputConfig\n\nexport function getGeoConfig(): GoogleMapsInputConfig {\n  return config as GoogleMapsInputConfig\n}\n\nexport function setGeoConfig(newConfig: GoogleMapsInputConfig): void {\n  config = newConfig\n}\n","import React from 'react'\nimport {uniqueId} from 'lodash'\nimport {Box, Button, Dialog, Grid} from '@sanity/ui'\nimport {EditIcon, TrashIcon} from '@sanity/icons'\nimport {ObjectInputProps, set, setIfMissing, unset, ChangeIndicator} from 'sanity'\nimport {GoogleMapsLoadProxy} from '../loader/GoogleMapsLoadProxy'\nimport {Geopoint, GeopointSchemaType, LatLng} from '../types'\nimport {GeopointSelect} from './GeopointSelect'\nimport {DialogInnerContainer, PreviewImage} from './GeopointInput.styles'\nimport {GoogleMapsInputConfig} from '../index'\nimport {getGeoConfig} from '../global-workaround'\n\nconst getStaticImageUrl = (value: LatLng, apiKey: string) => {\n  const loc = `${value.lat},${value.lng}`\n  const params = {\n    key: apiKey,\n    center: loc,\n    markers: loc,\n    zoom: 13,\n    scale: 2,\n    size: '640x300',\n  } as const\n  const qs = Object.keys(params).reduce((res, param) => {\n    return res.concat(`${param}=${encodeURIComponent(params[param as keyof typeof params])}`)\n  }, [] as string[])\n\n  return `https://maps.googleapis.com/maps/api/staticmap?${qs.join('&')}`\n}\n\nexport type GeopointInputProps = ObjectInputProps<Geopoint, GeopointSchemaType> & {\n  geoConfig: GoogleMapsInputConfig\n}\n\ntype Focusable = any\n\ninterface InputState {\n  modalOpen: boolean\n}\n\nclass GeopointInput extends React.PureComponent<GeopointInputProps, InputState> {\n  _geopointInputId = uniqueId('GeopointInput')\n\n  editButton: Focusable | undefined\n\n  constructor(props: GeopointInputProps) {\n    super(props)\n\n    this.state = {\n      modalOpen: false,\n    }\n  }\n\n  setEditButton = (el: Focusable) => {\n    this.editButton = el\n  }\n\n  focus() {\n    if (this.editButton) {\n      this.editButton.focus()\n    }\n  }\n\n  handleToggleModal = () => {\n    this.setState((prevState) => ({modalOpen: !prevState.modalOpen}))\n  }\n\n  handleCloseModal = () => {\n    this.setState({modalOpen: false})\n  }\n\n  handleChange = (latLng: google.maps.LatLng) => {\n    const {schemaType, onChange} = this.props\n    onChange([\n      setIfMissing({\n        _type: schemaType.name,\n      }),\n      set(latLng.lat(), ['lat']),\n      set(latLng.lng(), ['lng']),\n    ])\n  }\n\n  handleClear = () => {\n    const {onChange} = this.props\n    onChange(unset())\n  }\n\n  render() {\n    const {value, readOnly, geoConfig: config, path, changed, focused} = this.props\n\n    const {modalOpen} = this.state\n\n    if (!config || !config.apiKey) {\n      return (\n        <div>\n          <p>\n            The <a href=\"https://sanity.io/docs/schema-types/geopoint-type\">Geopoint type</a> needs\n            a Google Maps API key with access to:\n          </p>\n          <ul>\n            <li>Google Maps JavaScript API</li>\n            <li>Google Places API Web Service</li>\n            <li>Google Static Maps API</li>\n          </ul>\n          <p>\n            Please enter the API key with access to these services in your googleMapsInput plugin\n            config.\n          </p>\n        </div>\n      )\n    }\n\n    return (\n      <>\n        {value && (\n          <ChangeIndicator path={path} isChanged={changed} hasFocus={!!focused}>\n            <PreviewImage src={getStaticImageUrl(value, config.apiKey)} alt=\"Map location\" />\n          </ChangeIndicator>\n        )}\n\n        {!readOnly && (\n          <Box marginTop={4}>\n            <Grid columns={2} gap={2}>\n              <Button\n                mode=\"ghost\"\n                icon={value && EditIcon}\n                padding={3}\n                ref={this.setEditButton}\n                text={value ? 'Edit' : 'Set location'}\n                onClick={this.handleToggleModal}\n              />\n\n              {value && (\n                <Button\n                  tone=\"critical\"\n                  icon={TrashIcon}\n                  padding={3}\n                  mode=\"ghost\"\n                  text={'Remove'}\n                  onClick={this.handleClear}\n                />\n              )}\n            </Grid>\n          </Box>\n        )}\n\n        {modalOpen && (\n          <Dialog\n            id={`${this._geopointInputId}_dialog`}\n            onClose={this.handleCloseModal}\n            header=\"Place the marker on the map\"\n            width={1}\n          >\n            <DialogInnerContainer>\n              <GoogleMapsLoadProxy config={getGeoConfig()}>\n                {(api) => (\n                  <GeopointSelect\n                    api={api}\n                    value={value || undefined}\n                    onChange={readOnly ? undefined : this.handleChange}\n                    defaultLocation={config.defaultLocation}\n                    defaultZoom={config.defaultZoom}\n                  />\n                )}\n              </GoogleMapsLoadProxy>\n            </DialogInnerContainer>\n          </Dialog>\n        )}\n      </>\n    )\n  }\n}\n\nexport default GeopointInput\n","import * as React from 'react'\nimport {LatLng} from '../types'\nimport {latLngAreEqual} from './util'\n\ninterface Props {\n  api: typeof window.google.maps\n  map: google.maps.Map\n  from: LatLng\n  to: LatLng\n  color?: {background: string; border: string; text: string}\n  zIndex?: number\n  arrowRef?: React.MutableRefObject<google.maps.Polyline | undefined>\n  onClick?: (event: google.maps.MapMouseEvent) => void\n}\n\nexport class Arrow extends React.PureComponent<Props> {\n  line: google.maps.Polyline | undefined\n\n  eventHandlers: {\n    click?: google.maps.MapsEventListener\n  } = {}\n\n  componentDidMount() {\n    const {from, to, api, map, zIndex, onClick, color, arrowRef} = this.props\n    const lineSymbol = {\n      path: api.SymbolPath.FORWARD_OPEN_ARROW,\n    }\n\n    this.line = new api.Polyline({\n      map,\n      zIndex,\n      path: [from, to],\n      icons: [{icon: lineSymbol, offset: '50%'}],\n      strokeOpacity: 0.55,\n      strokeColor: color ? color.text : 'black',\n    })\n\n    if (onClick) {\n      this.eventHandlers.click = api.event.addListener(this.line, 'click', onClick)\n    }\n\n    if (arrowRef) {\n      arrowRef.current = this.line\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.line) {\n      return\n    }\n\n    const {from, to, map} = this.props\n    if (!latLngAreEqual(prevProps.from, from) || !latLngAreEqual(prevProps.to, to)) {\n      this.line.setPath([from, to])\n    }\n\n    if (prevProps.map !== map) {\n      this.line.setMap(map)\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.line) {\n      this.line.setMap(null)\n    }\n\n    if (this.eventHandlers.click) {\n      this.eventHandlers.click.remove()\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  render(): any {\n    return null\n  }\n}\n","import * as React from 'react'\nimport {useUserColor, ObjectDiff} from 'sanity'\nimport {Marker} from '../map/Marker'\nimport {Arrow} from '../map/Arrow'\nimport {Geopoint} from '../types'\n\ninterface Props {\n  api: typeof window.google.maps\n  map: google.maps.Map\n  diff: ObjectDiff<Geopoint>\n  label?: string\n}\n\nexport function GeopointMove({diff, api, map, label}: Props) {\n  const {fromValue: from, toValue: to} = diff\n  const annotation = diff.isChanged ? diff.annotation : undefined\n  const userColor = useUserColor(annotation ? annotation.author : null) || undefined\n  const fromRef = React.useRef<google.maps.Marker>()\n  const toRef = React.useRef<google.maps.Marker>()\n\n  return (\n    <>\n      {from && (\n        <Marker\n          api={api}\n          map={map}\n          position={from}\n          zIndex={0}\n          opacity={0.55}\n          markerRef={fromRef}\n          color={userColor}\n        />\n      )}\n      {from && to && <Arrow api={api} map={map} from={from} to={to} zIndex={1} color={userColor} />}\n      {to && (\n        <Marker\n          api={api}\n          map={map}\n          position={to}\n          zIndex={2}\n          markerRef={toRef}\n          label={label}\n          color={userColor}\n        />\n      )}\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const RootContainer = styled.div`\n  position: relative;\n  min-height: 200px;\n\n  &:empty {\n    background-color: var(--card-skeleton-color-from);\n    display: table;\n    width: 100%;\n  }\n\n  &:empty:after {\n    content: 'Missing/invalid data';\n    display: table-cell;\n    vertical-align: middle;\n    text-align: center;\n    position: relative;\n  }\n`\n","import * as React from 'react'\nimport {ArrayDiff, ObjectDiff, Diff, DiffProps as GenericDiffProps, DiffComponent} from 'sanity'\nimport {GoogleMapsLoadProxy} from '../loader/GoogleMapsLoadProxy'\nimport {GoogleMap} from '../map/Map'\nimport {Geopoint} from '../types'\nimport {GeopointMove} from './GeopointMove'\nimport {RootContainer} from './GeopointFieldDiff.styles'\nimport {getGeoConfig} from '../global-workaround'\n\nexport type DiffProps = GenericDiffProps<ArrayDiff<Geopoint>>\n\nexport const GeopointArrayDiff: DiffComponent<ArrayDiff<Geopoint>> = ({diff, schemaType}) => {\n  return (\n    <RootContainer>\n      <GoogleMapsLoadProxy config={getGeoConfig()}>\n        {(api) => <GeopointDiff api={api} diff={diff} schemaType={schemaType} />}\n      </GoogleMapsLoadProxy>\n    </RootContainer>\n  )\n}\n\nfunction GeopointDiff({api, diff}: DiffProps & {api: typeof google.maps}) {\n  const fromValue = (diff.fromValue || []).filter(hasCoordinates)\n  const toValue = (diff.toValue || []).filter(hasCoordinates)\n  if (fromValue.length === 0 && toValue.length === 0) {\n    return null\n  }\n\n  const bounds = getBounds(fromValue, toValue, api)\n  return (\n    <GoogleMap\n      api={api}\n      location={bounds.getCenter().toJSON()}\n      mapTypeControl={false}\n      controlSize={20}\n      bounds={bounds}\n    >\n      {(map) => (\n        <>\n          {diff.items.map(({toIndex, diff: pointDiff}) => {\n            if (!isChangeDiff(pointDiff)) {\n              return null\n            }\n\n            return (\n              <GeopointMove\n                key={toIndex}\n                api={api}\n                map={map}\n                diff={pointDiff}\n                label={`${toIndex}`}\n              />\n            )\n          })}\n        </>\n      )}\n    </GoogleMap>\n  )\n}\n\nfunction isChangeDiff(diff: Diff): diff is ObjectDiff<Geopoint> {\n  return diff.action !== 'unchanged' && diff.type === 'object'\n}\n\nfunction hasCoordinates(point: Partial<Geopoint>): point is Geopoint {\n  return typeof point.lat === 'number' && typeof point.lng === 'number'\n}\n\nfunction getBounds(\n  fromValue: google.maps.LatLngLiteral[] | null | undefined,\n  toValue: google.maps.LatLngLiteral[] | null | undefined,\n  api: typeof window.google.maps\n): google.maps.LatLngBounds {\n  const bounds = new api.LatLngBounds()\n  const points = [...(fromValue || []), ...(toValue || [])]\n  points.forEach((point) => bounds.extend(point))\n  return bounds\n}\n","import * as React from 'react'\nimport {\n  DiffComponent,\n  ObjectDiff,\n  DiffProps as GenericDiffProps,\n  DiffTooltip,\n  getAnnotationAtPath,\n} from 'sanity'\nimport {GoogleMapsLoadProxy} from '../loader/GoogleMapsLoadProxy'\nimport {GoogleMap} from '../map/Map'\nimport {Geopoint} from '../types'\nimport {GeopointMove} from './GeopointMove'\nimport {RootContainer} from './GeopointFieldDiff.styles'\nimport {getGeoConfig} from '../global-workaround'\n\nexport type DiffProps = GenericDiffProps<ObjectDiff<Geopoint>>\n\nexport const GeopointFieldDiff: DiffComponent<ObjectDiff<Geopoint>> = ({diff, schemaType}) => {\n  return (\n    <RootContainer>\n      <GoogleMapsLoadProxy config={getGeoConfig()}>\n        {(api) => <GeopointDiff api={api} diff={diff} schemaType={schemaType} />}\n      </GoogleMapsLoadProxy>\n    </RootContainer>\n  )\n}\n\nfunction GeopointDiff({api, diff}: DiffProps & {api: typeof window.google.maps}) {\n  const {fromValue, toValue} = diff\n  const annotation =\n    getAnnotationAtPath(diff, ['lat']) ||\n    getAnnotationAtPath(diff, ['lng']) ||\n    getAnnotationAtPath(diff, [])\n\n  const center = getCenter(diff, api)\n  const bounds = fromValue && toValue ? getBounds(fromValue, toValue, api) : undefined\n\n  return (\n    <DiffTooltip annotations={annotation ? [annotation] : []} description={getAction(diff)}>\n      <div>\n        <GoogleMap\n          api={api}\n          location={center}\n          mapTypeControl={false}\n          controlSize={20}\n          bounds={bounds}\n          scrollWheel={false}\n        >\n          {(map) => <GeopointMove api={api} map={map} diff={diff} />}\n        </GoogleMap>\n      </div>\n    </DiffTooltip>\n  )\n}\n\nfunction getBounds(\n  fromValue: google.maps.LatLngLiteral,\n  toValue: google.maps.LatLngLiteral,\n  api: typeof window.google.maps\n): google.maps.LatLngBounds {\n  return new api.LatLngBounds().extend(fromValue).extend(toValue)\n}\n\nfunction getCenter(\n  diff: DiffProps['diff'],\n  api: typeof window.google.maps\n): google.maps.LatLngLiteral {\n  const {fromValue, toValue} = diff\n  if (fromValue && toValue) {\n    return getBounds(fromValue, toValue, api).getCenter().toJSON()\n  }\n\n  if (fromValue) {\n    return fromValue\n  }\n\n  if (toValue) {\n    return toValue\n  }\n\n  throw new Error('Neither a from or a to value present')\n}\n\nfunction getAction(diff: ObjectDiff<Geopoint>) {\n  const {fromValue, toValue} = diff\n  if (fromValue && toValue) {\n    return 'Moved'\n  } else if (fromValue) {\n    return 'Removed'\n  } else if (toValue) {\n    return 'Added'\n  }\n\n  return 'Unchanged'\n}\n","import React from 'react'\nimport {definePlugin, SchemaType} from 'sanity'\nimport GeopointInput, {GeopointInputProps} from './input/GeopointInput'\nimport {setGeoConfig} from './global-workaround'\nimport {GeopointSchemaType} from './types'\n\nexport interface GoogleMapsInputConfig {\n  apiKey: string\n  defaultZoom?: number\n  defaultLocale?: string\n  defaultLocation?: {\n    lat: number\n    lng: number\n  }\n}\n\nexport const googleMapsInput = definePlugin<GoogleMapsInputConfig>((config) => {\n  setGeoConfig(config)\n  return {\n    name: 'google-maps-input',\n    form: {\n      components: {\n        input(props) {\n          if (isGeopoint(props.schemaType)) {\n            const castedProps = props as unknown as Omit<GeopointInputProps, 'geoConfig'>\n            return <GeopointInput {...castedProps} geoConfig={config} />\n          }\n          return props.renderDefault(props)\n        },\n      },\n    },\n  }\n})\n\nfunction isGeopoint(schemaType: SchemaType): schemaType is GeopointSchemaType {\n  return isType('geopoint', schemaType)\n}\n\nfunction isType(name: string, schema?: SchemaType): boolean {\n  if (schema?.name === name) {\n    return true\n    // eslint-disable-next-line no-negated-condition\n  } else if (!schema?.name) {\n    return false\n  }\n  return isType(name, schema?.type)\n}\n"],"names":["callbackName","AuthError","Error","_loadGoogleMapsApi","config","Promise","resolve","reject","window","google","maps","script","document","createElement","onerror","event","source","lineno","colno","error","message","isErrorEvent","coeerceError","src","apiKey","locale","getElementsByTagName","appendChild","finally","memo","LoadError","props","_a","jsxs","Card","tone","radius","children","jsx","Box","as","paddingX","paddingTop","paddingBottom","Text","weight","isAuthError","Fragment","Code","size","browserLocale","navigator","language","useLoadGoogleMapsApi","defaultLocale","state","setState","useState","type","useEffect","catch","loadGoogleMapsApi","then","api","err","GoogleMapsLoadProxy","loadState","LoadErrorView","WrapperContainer","styled","div","_templateObject","_taggedTemplateLiteral","SearchInput","React","PureComponent","constructor","super","arguments","this","searchInputRef","createRef","handleChange","autoComplete","onChange","getPlace","current","value","componentDidMount","input","map","Circle","places","searchBounds","center","getCenter","getBounds","Autocomplete","bounds","types","addListener","render","TextInput","name","ref","placeholder","padding","latLngAreEqual","latLng1","latLng2","lat1","lat","lng1","lng","lat2","lng2","MapContainer","_templateObject2","GoogleMap","mapRef","mapEl","attachClickHandler","onClick","clickHandler","remove","setMapElement","element","constructMap","componentDidUpdate","prevProps","location","panTo","equals","fitBounds","componentWillUnmount","LatLng","el","defaultZoom","mapTypeControl","controlSize","scrollWheel","Map","zoom","scrollwheel","streetViewControl","defaultProps","Marker","eventHandlers","position","onMove","zIndex","opacity","label","markerRef","color","GMarker","icon","path","fillOpacity","fillColor","background","strokeColor","border","strokeWeight","anchor","Point","labelOrigin","marker","draggable","Boolean","attachMoveHandler","setPosition","setLabel","setZIndex","setOpacity","setMap","move","click","fallbackLatLng","GeopointSelect","handlePlaceChanged","place","geometry","setValue","handleMarkerDragEnd","latLng","handleMapClick","defaultLocation","geoPoint","PreviewImage","img","_templateObject3","DialogInnerContainer","_templateObject4","getGeoConfig","setGeoConfig","newConfig","getStaticImageUrl","loc","params","key","markers","scale","qs","Object","keys","reduce","res","param","concat","encodeURIComponent","join","GeopointInput","_geopointInputId","uniqueId","setEditButton","editButton","handleToggleModal","prevState","modalOpen","handleCloseModal","schemaType","setIfMissing","_type","set","handleClear","unset","focus","readOnly","geoConfig","changed","focused","ChangeIndicator","isChanged","hasFocus","alt","marginTop","Grid","columns","gap","Button","mode","EditIcon","text","TrashIcon","Dialog","id","onClose","header","width","href","Arrow","from","to","arrowRef","lineSymbol","SymbolPath","FORWARD_OPEN_ARROW","line","Polyline","icons","offset","strokeOpacity","setPath","GeopointMove","_ref","diff","fromValue","toValue","annotation","userColor","useUserColor","author","fromRef","useRef","toRef","RootContainer","_templateObject5","GeopointArrayDiff","_ref2","GeopointDiff","_ref3","filter","hasCoordinates","length","LatLngBounds","forEach","point","extend","toJSON","items","_ref4","toIndex","pointDiff","action","isChangeDiff","GeopointFieldDiff","_ref5","_ref6","getAnnotationAtPath","DiffTooltip","annotations","description","getAction","googleMapsInput","definePlugin","form","components","isType","renderDefault","schema"],"mappings":"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"}