{"version":3,"file":"defaultOptionsValidator-6e254980.cjs","sources":["../../src/middleware/defaultOptionsProcessor.ts","../../src/middleware/defaultOptionsValidator.ts"],"sourcesContent":["const isReactNative = typeof navigator === 'undefined' ? false : navigator.product === 'ReactNative'\n\nconst defaultOptions = {timeout: isReactNative ? 60000 : 120000}\n\n/** @public */\nexport function processOptions(opts: any): any {\n  const options =\n    typeof opts === 'string'\n      ? Object.assign({url: opts}, defaultOptions)\n      : Object.assign({}, defaultOptions, opts)\n\n  // Allow parsing relativ URLs by setting the origin\n  const url = new URL(options.url, 'http://localhost')\n\n  // Normalize timeouts\n  options.timeout = normalizeTimeout(options.timeout)\n\n  // Shallow-merge (override) existing query params\n  if (options.query) {\n    for (const [key, value] of Object.entries(options.query)) {\n      if (value !== undefined) {\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            url.searchParams.append(key, v as string)\n          }\n        } else {\n          url.searchParams.append(key, value as string)\n        }\n      }\n    }\n  }\n\n  // Implicit POST if we have not specified a method but have a body\n  options.method =\n    options.body && !options.method ? 'POST' : (options.method || 'GET').toUpperCase()\n\n  // Stringify URL\n  options.url =\n    url.origin === 'http://localhost' ? `${url.pathname}?${url.searchParams}` : url.toString()\n\n  return options\n}\n\nfunction normalizeTimeout(time: any): any {\n  if (time === false || time === 0) {\n    return false\n  }\n\n  if (time.connect || time.socket) {\n    return time\n  }\n\n  const delay = Number(time)\n  if (isNaN(delay)) {\n    return normalizeTimeout(defaultOptions.timeout)\n  }\n\n  return {connect: delay, socket: delay}\n}\n","const validUrl = /^https?:\\/\\//i\n\n/** @public */\nexport function validateOptions(options: any): any {\n  if (!validUrl.test(options.url)) {\n    throw new Error(`\"${options.url}\" is not a valid URL`)\n  }\n}\n"],"names":["isReactNative","navigator","product","defaultOptions","timeout","processOptions","opts","options","Object","assign","url","URL","normalizeTimeout","query","key","value","entries","Array","isArray","v","searchParams","append","method","body","toUpperCase","origin","concat","pathname","toString","time","connect","socket","delay","Number","isNaN","validUrl","validateOptions","test","Error"],"mappings":";;AAAA,MAAMA,gBAAgB,OAAOC,SAAA,KAAc,WAAc,GAAA,KAAA,GAAQA,UAAUC,OAAY,KAAA,aAAA;AAEvF,MAAMC,cAAiB,GAAA;EAACC,OAAS,EAAAJ,aAAA,GAAgB,MAAQ;AAAM,CAAA;AAGxD,SAASK,eAAeC,IAAgB,EAAA;EAC7C,MAAMC,UACJ,OAAOD,IAAA,KAAS,QACZ,GAAAE,MAAA,CAAOC,OAAO;IAACC,GAAA,EAAKJ;EAAI,CAAA,EAAGH,cAAc,CACzC,GAAAK,MAAA,CAAOC,OAAO,CAAA,CAAC,EAAGN,gBAAgBG,IAAI,CAAA;EAG5C,MAAMI,GAAM,GAAA,IAAIC,GAAI,CAAAJ,OAAA,CAAQG,KAAK,kBAAkB,CAAA;EAG3CH,OAAA,CAAAH,OAAA,GAAUQ,gBAAiB,CAAAL,OAAA,CAAQH,OAAO,CAAA;EAGlD,IAAIG,QAAQM,KAAO,EAAA;IACN,KAAA,MAAA,CAACC,KAAKC,KAAK,CAAA,IAAKP,OAAOQ,OAAQ,CAAAT,OAAA,CAAQM,KAAK,CAAG,EAAA;MACxD,IAAIE,UAAU,KAAW,CAAA,EAAA;QACnB,IAAAE,KAAA,CAAMC,OAAQ,CAAAH,KAAK,CAAG,EAAA;UACxB,KAAA,MAAWI,KAAKJ,KAAO,EAAA;YACjBL,GAAA,CAAAU,YAAA,CAAaC,MAAO,CAAAP,GAAA,EAAKK,CAAW,CAAA;UAC1C;QAAA,CACK,MAAA;UACDT,GAAA,CAAAU,YAAA,CAAaC,MAAO,CAAAP,GAAA,EAAKC,KAAe,CAAA;QAC9C;MACF;IACF;EACF;EAGQR,OAAA,CAAAe,MAAA,GACNf,OAAQ,CAAAgB,IAAA,IAAQ,CAAChB,OAAA,CAAQe,SAAS,MAAU,GAAA,CAAAf,OAAA,CAAQe,MAAU,IAAA,KAAA,EAAOE,WAAY,CAAA,CAAA;EAG3EjB,OAAA,CAAAG,GAAA,GACNA,GAAI,CAAAe,MAAA,KAAW,kBAAqB,MAAAC,MAAA,CAAGhB,IAAIiB,QAAY,OAAAD,MAAA,CAAAhB,GAAA,CAAIU,YAAiB,IAAAV,GAAA,CAAIkB,QAAS,CAAA,CAAA;EAEpF,OAAArB,OAAA;AACT;AAEA,SAASK,iBAAiBiB,IAAgB,EAAA;EACpC,IAAAA,IAAA,KAAS,KAAS,IAAAA,IAAA,KAAS,CAAG,EAAA;IACzB,OAAA,KAAA;EACT;EAEI,IAAAA,IAAA,CAAKC,OAAW,IAAAD,IAAA,CAAKE,MAAQ,EAAA;IACxB,OAAAF,IAAA;EACT;EAEM,MAAAG,KAAA,GAAQC,OAAOJ,IAAI,CAAA;EACrB,IAAAK,KAAA,CAAMF,KAAK,CAAG,EAAA;IACT,OAAApB,gBAAA,CAAiBT,eAAeC,OAAO,CAAA;EAChD;EAEA,OAAO;IAAC0B,OAAA,EAASE,KAAO;IAAAD,MAAA,EAAQC;EAAK,CAAA;AACvC;AC1DA,MAAMG,QAAW,GAAA,eAAA;AAGV,SAASC,gBAAgB7B,OAAmB,EAAA;EACjD,IAAI,CAAC4B,QAAA,CAASE,IAAK,CAAA9B,OAAA,CAAQG,GAAG,CAAG,EAAA;IAC/B,MAAM,IAAI4B,KAAA,MAAAZ,MAAA,CAAUnB,OAAA,CAAQG,GAAyB,0BAAA,CAAA;EACvD;AACF;;"}