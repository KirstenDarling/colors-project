{"version":3,"file":"desk-c925d322.js","sources":["../../src/desk/components/DocTitle.tsx","../../src/desk/components/TimeAgo.tsx","../../src/desk/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/desk/components/PublishedStatus.tsx","../../src/desk/components/DraftStatus.tsx","../../src/desk/components/paneItem/PaneItemPreview.tsx","../../src/desk/components/paneRouter/PaneRouterContext.tsx","../../src/desk/components/paneRouter/BackLink.tsx","../../src/desk/components/paneRouter/ChildLink.tsx","../../src/desk/components/paneRouter/ReferenceChildLink.tsx","../../src/desk/components/paneRouter/ParameterizedLink.tsx","../../src/desk/components/paneRouter/usePaneRouter.ts","../../src/desk/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/desk/components/confirmDeleteDialog/index.tsx","../../src/desk/components/pane/PaneContextMenuButton.tsx","../../src/desk/components/pane/constants.ts","../../src/desk/components/pane/PaneContext.ts","../../src/desk/components/pane/PaneLayoutContext.ts","../../src/desk/components/pane/usePaneLayout.ts","../../src/desk/components/pane/PaneDivider.tsx","../../src/desk/components/pane/Pane.tsx","../../src/desk/components/pane/usePane.ts","../../src/desk/components/pane/PaneContent.styles.tsx","../../src/desk/components/pane/PaneContent.tsx","../../src/desk/components/pane/PaneFooter.styles.tsx","../../src/desk/components/pane/PaneFooter.tsx","../../src/desk/components/pane/PaneHeader.styles.tsx","../../src/desk/components/pane/PaneHeader.tsx","../../src/desk/components/pane/PaneLayout.styles.tsx","../../src/desk/components/IntentButton.tsx","../../src/desk/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/desk/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/desk/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/desk/documentActions/DeleteAction.tsx","../../src/desk/documentActions/DiscardChangesAction.tsx","../../src/desk/documentActions/DuplicateAction.tsx","../../src/desk/documentActions/HistoryRestoreAction.tsx","../../src/desk/panes/document/DocumentPaneContext.ts","../../src/desk/panes/document/useDocumentPane.tsx","../../src/desk/documentActions/PublishAction.tsx","../../src/desk/documentActions/UnpublishAction.tsx","../../src/desk/documentBadges/LiveEditBadge.ts","../../src/desk/constants.ts","../../src/desk/getIntentState.ts","../../src/desk/router.ts","../../src/desk/deskTool.ts","../../src/desk/DeskToolContext.ts","../../src/desk/structureBuilder/SerializeError.ts","../../src/desk/structureBuilder/util/getExtendedProjection.ts","../../src/desk/structureBuilder/Sort.ts","../../src/desk/structureBuilder/MenuItem.ts","../../src/desk/structureBuilder/MenuItemGroup.ts","../../src/desk/structureBuilder/util/validateId.ts","../../src/desk/structureBuilder/util/getStructureNodeId.ts","../../src/desk/structureBuilder/Component.ts","../../src/desk/structureBuilder/util/resolveTypeForDocument.ts","../../src/desk/structureBuilder/views/View.ts","../../src/desk/structureBuilder/views/ComponentView.ts","../../src/desk/structureBuilder/views/FormView.ts","../../src/desk/structureBuilder/views/index.ts","../../src/desk/structureBuilder/Document.ts","../../src/desk/structureBuilder/Layout.ts","../../src/desk/structureBuilder/Intent.ts","../../src/desk/structureBuilder/InitialValueTemplateItem.ts","../../src/desk/structureBuilder/GenericList.ts","../../src/desk/structureBuilder/DocumentList.ts","../../src/desk/structureBuilder/List.ts","../../src/desk/structureBuilder/ListItem.ts","../../src/desk/structureBuilder/DocumentListItem.ts","../../src/desk/structureBuilder/DocumentTypeList.ts","../../src/desk/structureBuilder/documentTypeListItems.ts","../../src/desk/structureBuilder/createStructureBuilder.ts","../../src/desk/DeskToolProvider.tsx"],"sourcesContent":["import {SanityDocumentLike} from '@sanity/types'\nimport React from 'react'\nimport {useSchema, unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>Unknown schema type: {documentValue._type}</code>\n  }\n\n  if (error) {\n    return <>Error: {error.message}</>\n  }\n\n  return <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n}\n","import React from 'react'\nimport {useTimeAgo} from 'sanity'\n\nexport interface TimeAgoProps {\n  time: string | Date\n}\n\nexport function TimeAgo({time}: TimeAgoProps) {\n  const timeAgo = useTimeAgo(time)\n\n  return <span title={timeAgo}>{timeAgo} ago</span>\n}\n","import {useMemo} from 'react'\nimport {ClientError, SanityClient} from '@sanity/client'\nimport {Observable, timer, fromEvent, EMPTY, of} from 'rxjs'\nimport {\n  map,\n  startWith,\n  distinctUntilChanged,\n  switchMap,\n  shareReplay,\n  catchError,\n} from 'rxjs/operators'\nimport {\n  AvailabilityResponse,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  DocumentStore,\n  useDocumentStore,\n  createHookFromObservableFactory,\n  getDraftId,\n  getPublishedId,\n  useClient,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY\n      ),\n      shareReplay({refCount: true, bufferSize: 1})\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient}\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    })\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient}\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          })\n        )\n    })\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000}\n    ) as Observable<ReferringDocuments['internalReferences']>\n  }\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        })\n      )\n    )\n  }\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId])\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient])\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean)\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== '')\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string'\n      )\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import React from 'react'\nimport {PublishIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function PublishedStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Published {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>Not published</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"positive\" dimmed={!document} muted={!document} size={1}>\n        <PublishIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n","import React from 'react'\nimport {EditIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function DraftStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Edited {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>No unpublished edits</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"caution\" dimmed={!document} muted={!document} size={1}>\n        <EditIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n","import type {SanityDocument, SchemaType} from '@sanity/types'\nimport React, {isValidElement} from 'react'\nimport {isNumber, isString} from 'lodash'\nimport {Inline} from '@sanity/ui'\nimport {useMemoObservable} from 'react-rx'\nimport {PublishedStatus} from '../PublishedStatus'\nimport {DraftStatus} from '../DraftStatus'\nimport type {PaneItemPreviewState} from './types'\nimport {\n  DocumentPresence,\n  DocumentPreviewPresence,\n  DocumentPreviewStore,\n  GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  isRecord,\n} from 'sanity'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: React.ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n  const title =\n    (isRecord(value.title) && isValidElement(value.title)) ||\n    isString(value.title) ||\n    isNumber(value.title)\n      ? value.title\n      : null\n\n  // NOTE: this emits sync so can never be null\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const {draft, published, isLoading} = useMemoObservable<PaneItemPreviewState>(\n    () => getPreviewStateObservable(props.documentPreviewStore, schemaType, value._id, title),\n    [props.documentPreviewStore, schemaType, value._id, title]\n  )!\n\n  const status = isLoading ? null : (\n    <Inline space={4}>\n      {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n      <PublishedStatus document={published} />\n      <DraftStatus document={draft} />\n    </Inline>\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({value, draft, published})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n    />\n  )\n}\n","import {createContext} from 'react'\nimport {PaneRouterContextValue} from './types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>({\n  index: 0,\n  groupIndex: 0,\n  siblingIndex: 0,\n  payload: undefined,\n  params: {},\n  hasGroupSiblings: false,\n  groupLength: 0,\n  routerPanesState: [],\n  BackLink: () => missingContext(),\n  ChildLink: () => missingContext(),\n  ReferenceChildLink: () => missingContext(),\n  handleEditReference: () => missingContext(),\n  ParameterizedLink: () => missingContext(),\n  replaceCurrent: () => missingContext(),\n  closeCurrent: () => missingContext(),\n  duplicateCurrent: () => missingContext(),\n  setView: () => missingContext(),\n  setParams: () => missingContext(),\n  setPayload: () => missingContext(),\n  navigateIntent: () => missingContext(),\n})\n","import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {BackLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as React.ComponentType<BackLinkProps>\n","import React, {forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ChildLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import React, {forwardRef} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {ChildLink} from './ChildLink'\nimport {ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {useUnique} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: React.ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import React, {useCallback} from 'react'\nimport type {SanityDocument, SchemaType} from '@sanity/types'\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\nimport {\n  FIXME,\n  PreviewCard,\n  getPublishedId,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: React.ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id]\n  )\n\n  return (\n    <PreviewCard\n      __unstable_focusRing\n      as={Link as FIXME}\n      data-as=\"a\"\n      onClick={onClick}\n      padding={2}\n      radius={2}\n    >\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"default\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {rem, Flex, Text, Card, Box, Tooltip, Container, Inline} from '@sanity/ui'\nimport {InfoOutlineIcon} from '@sanity/icons'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const TableContainer = styled(Box).attrs({paddingX: 2, paddingBottom: 2})`\n  overflow: auto;\n  max-height: 150px;\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  thead > tr {\n    position: sticky;\n    top: 0;\n    background: var(--card-bg-color);\n    z-index: 1;\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 35px;\n`\n\nexport const ReferencesCard = styled(Card).attrs({\n  radius: 2,\n  shadow: 1,\n  marginBottom: 4,\n  flex: 'auto',\n})`\n  overflow: hidden;\n  overflow: clip;\n  min-height: 150px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Inline space={2}>\n      <Text size={1} muted>\n        {difference} other reference{difference === 1 ? '' : 's'} not shown{' '}\n      </Text>\n\n      <Tooltip\n        portal\n        placement=\"top\"\n        content={\n          <Container width={0}>\n            <Box padding={2}>\n              <Text size={1}>\n                We can't show metadata about these references because no token with access to the\n                datasets they are in was found.\n              </Text>\n            </Box>\n          </Container>\n        }\n      >\n        <Text size={1} muted>\n          <InfoOutlineIcon />\n        </Text>\n      </Tooltip>\n    </Inline>\n  )\n}\n","import React, {useCallback} from 'react'\nimport {\n  WarningOutlineIcon,\n  DocumentsIcon,\n  ClipboardIcon,\n  UnknownIcon,\n  ChevronDownIcon,\n} from '@sanity/icons'\nimport {useToast, Text, Box, Button, Flex, Label, Card, Stack} from '@sanity/ui'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {ReferringDocuments} from './useReferringDocuments'\nimport {\n  ReferencesCard,\n  OtherReferenceCount,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  TableContainer,\n  Table,\n  ChevronWrapper,\n  DocumentIdFlex,\n} from './ConfirmDeleteDialogBody.styles'\nimport {SanityDefaultPreview, useSchema} from 'sanity'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: string\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title=\"Preview Unavailable\"\n            subtitle={`ID: ${item._id}`}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, onReferenceLinkClick]\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\">\n        Are you sure you want to {action} <strong>“{documentTitle}”</strong>?\n      </Text>\n    )\n  }\n\n  const documentCount =\n    crossDatasetReferences.totalCount === 1\n      ? '1 document'\n      : `${crossDatasetReferences.totalCount.toLocaleString()} documents`\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n  const datasetsCount =\n    normalizedDatasetNames.length === 1\n      ? 'another dataset'\n      : `${normalizedDatasetNames.length} datasets`\n\n  let datasetNameList = `Dataset${\n    normalizedDatasetNames.length === 1 ? '' : 's'\n  }: ${normalizedDatasetNames.join(', ')}`\n\n  // We only have one dataset, and it is unavailable due to permissions\n  if (hasUnknownDatasetNames && normalizedDatasetNames.length === 1) {\n    datasetNameList = 'Unavailable dataset'\n  }\n\n  return (\n    <>\n      <Card padding={3} radius={2} tone=\"caution\" marginBottom={4} flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              {totalCount === 1 ? (\n                <>1 document refers to “{documentTitle}”</>\n              ) : (\n                <>\n                  {totalCount.toLocaleString()} documents refer to “{documentTitle}”\n                </>\n              )}\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n\n      <Box flex=\"none\" marginBottom={4}>\n        <Text>\n          You may not be able to {action} “{documentTitle}” because the following documents refer to\n          it:\n        </Text>\n      </Box>\n\n      <ReferencesCard>\n        <Flex direction=\"column\" height=\"fill\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" padding={3} space={3} overflow=\"auto\" data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Flex padding={4} align=\"center\">\n                  <Box marginRight={4}>\n                    <Text size={3}>\n                      <DocumentsIcon />\n                    </Text>\n                  </Box>\n                  <Flex marginRight={4} direction=\"column\">\n                    <Box marginBottom={2}>\n                      <Text>\n                        {documentCount} in {datasetsCount}\n                      </Text>\n                    </Box>\n                    <Box>\n                      <Text title={datasetNameList} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetNameList}\n                      </Text>\n                    </Box>\n                  </Flex>\n                  <ChevronWrapper>\n                    <Text muted>\n                      <ChevronDownIcon />\n                    </Text>\n                  </ChevronWrapper>\n                </Flex>\n              </CrossDatasetReferencesSummary>\n\n              <TableContainer>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Label muted size={0}>\n                          Project ID\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Dataset\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Document ID\n                        </Label>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <CopyToClipboard\n                                  text={documentId}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onCopy={() => {\n                                    // TODO: this isn't visible with the dialog open\n                                    toast.push({\n                                      title: 'Copied document ID to clipboard!',\n                                      status: 'success',\n                                    })\n                                  }}\n                                >\n                                  <Button\n                                    title=\"Copy ID to clipboard\"\n                                    mode=\"bleed\"\n                                    icon={ClipboardIcon}\n                                    fontSize={0}\n                                  />\n                                </CopyToClipboard>\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n                <Box padding={2}>\n                  <OtherReferenceCount {...crossDatasetReferences} />\n                </Box>\n              </TableContainer>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </ReferencesCard>\n\n      <Box flex=\"none\">\n        <Text>\n          If you {action} this document, documents that refer to it will no longer be able to access\n          it.\n        </Text>\n      </Box>\n    </>\n  )\n}\n","import React, {useMemo, useId} from 'react'\nimport styled from 'styled-components'\nimport {Box, Dialog, Button, Text, Spinner, Grid, Flex} from '@sanity/ui'\nimport {DocTitle} from '../DocTitle'\nimport {useReferringDocuments} from './useReferringDocuments'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\n\n/** @internal */\nexport const DialogBody = styled(Flex).attrs({\n  padding: 4,\n  direction: 'column',\n  height: 'fill',\n})`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 300px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: string\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const capitalizedAction = `${action.substring(0, 1).toUpperCase()}${action.substring(1)}`\n\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={`${capitalizedAction} document?`}\n      footer={\n        <Grid columns={showConfirmButton ? 2 : 1} gap={2} paddingX={4} paddingY={3}>\n          <Button mode=\"ghost\" onClick={onCancel} text=\"Cancel\" />\n\n          {showConfirmButton && (\n            <Button\n              data-testid=\"confirm-delete-button\"\n              text={totalCount > 0 ? `${capitalizedAction} anyway` : `${capitalizedAction} now`}\n              tone=\"critical\"\n              onClick={onConfirm}\n            />\n          )}\n        </Grid>\n      }\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <Spinner muted />\n            <Box marginTop={3}>\n              <Text align=\"center\" muted size={1}>\n                Looking for referring documents…\n              </Text>\n            </Box>\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import React, {useCallback, useState, useId} from 'react'\nimport {Box, Flex, Button, Dialog, Text, ErrorBoundary} from '@sanity/ui'\nimport {ConfirmDeleteDialog, ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<React.ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header=\"Error\"\n      footer={\n        <Flex paddingX={4} paddingY={3} direction=\"column\">\n          <Button mode=\"ghost\" text=\"Retry\" onClick={handleRetry} />\n        </Flex>\n      }\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text>An error occurred while loading referencing documents.</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {EllipsisVerticalIcon} from '@sanity/icons'\nimport {Box, Button, Label, Menu, MenuButton, MenuDivider, MenuItem, PopoverProps} from '@sanity/ui'\nimport React, {forwardRef, Fragment, useCallback, useMemo, useId} from 'react'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {IntentLink} from 'sanity/router'\n\ninterface PaneContextMenuButtonProps {\n  items: PaneMenuItem[]\n  itemGroups?: PaneMenuItemGroup[]\n  onAction: (action: PaneMenuItem) => void\n}\n\ninterface MenuItemGroup {\n  id: string\n  title?: React.ReactNode\n  items: PaneMenuItem[]\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n  width: 0,\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {items, itemGroups, onAction} = props\n  const id = useId()\n\n  const groups = useMemo(() => {\n    if (!itemGroups || itemGroups.length === 0) {\n      return [{id: '$default', items}]\n    }\n\n    const defaultGroup: MenuItemGroup = {id: '$default', items: []}\n\n    const groupMap = itemGroups.reduce((acc: Record<string, MenuItemGroup>, group) => {\n      acc[group.id] = {id: group.id, title: group.title, items: []}\n      return acc\n    }, {})\n\n    for (const item of items) {\n      const group = groupMap[item.group || '$default'] || defaultGroup\n\n      group.items.push(item)\n    }\n\n    return Object.values(groupMap)\n      .concat([defaultGroup])\n      .filter((g) => g.items.length > 0)\n  }, [items, itemGroups])\n\n  return (\n    <MenuButton\n      button={<Button icon={EllipsisVerticalIcon} mode=\"bleed\" padding={3} title=\"Show menu\" />}\n      id={id}\n      menu={\n        <Menu>\n          {groups.map((group, groupIndex) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Fragment key={groupIndex}>\n              {groupIndex > 0 && <MenuDivider />}\n              {group.title && (\n                <Box paddingX={3} paddingTop={3} paddingBottom={2}>\n                  <Label muted>{group.title}</Label>\n                </Box>\n              )}\n              {group.items.map((item, itemIndex) => (\n                <PaneContextMenuItem\n                  item={item}\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${itemIndex}-${item.title}`}\n                  onAction={onAction}\n                />\n              ))}\n            </Fragment>\n          ))}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n\nfunction PaneContextMenuItem(props: {\n  item: PaneMenuItem\n  onAction: (action: PaneMenuItem) => void\n}) {\n  const {item, onAction} = props\n\n  const handleClick = useCallback(() => {\n    onAction(item)\n  }, [item, onAction])\n\n  const hotkeys = useMemo(() => {\n    if (!item.shortcut) return undefined\n\n    return item.shortcut.split('+')\n  }, [item])\n\n  const IntentButtonOrActionButton = forwardRef((linkProps, linkRef: React.ForwardedRef<never>) =>\n    item.intent ? (\n      <IntentLink\n        {...linkProps}\n        intent={item.intent.type}\n        params={item.intent.params}\n        ref={linkRef}\n      />\n    ) : (\n      <MenuItem {...linkProps} pressed={item.selected} />\n    )\n  )\n\n  IntentButtonOrActionButton.displayName = 'Link'\n\n  return (\n    <MenuItem\n      as={IntentButtonOrActionButton}\n      data-as={item.intent ? 'a' : 'button'}\n      hotkeys={hotkeys}\n      icon={item.icon}\n      onClick={handleClick}\n      padding={0}\n      text={item.title}\n    />\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {createContext} from 'react'\nimport {PaneContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(null)\n","import {createContext} from 'react'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport styled from 'styled-components'\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize]\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, CardProps, Code, Flex, useForwardedRef} from '@sanity/ui'\nimport React, {forwardRef, useMemo, useState, useCallback, useEffect} from 'react'\nimport styled from 'styled-components'\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneContext} from './PaneContext'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneProps {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const forwardedRef = useForwardedRef(ref)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  const setRef = useCallback(\n    (refValue: HTMLDivElement | null) => {\n      setRootElement(refValue)\n      forwardedRef.current = refValue\n    },\n    [forwardedRef]\n  )\n\n  useEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement]\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement]\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth]\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <Root\n            data-testid=\"pane\"\n            tone=\"inherit\"\n            hidden={hidden}\n            id={id}\n            overflow={layoutCollapsed ? undefined : 'hidden'}\n            {...restProps}\n            data-pane-collapsed={collapsed ? '' : undefined}\n            data-pane-index={paneIndex}\n            data-pane-selected={selected ? '' : undefined}\n            ref={setRef}\n            style={style}\n          >\n            {PANE_DEBUG && (\n              <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                <Code size={1}>\n                  {[\n                    `#${paneIndex}`,\n                    `collapsed=${collapsed}`,\n                    `currentMinWidth=${currentMinWidth}`,\n                    `currentMaxWidth=${currentMaxWidth}`,\n                    `flex=${flex}`,\n                    `minWidth=${minWidth}`,\n                    `maxWidth=${maxWidth}`,\n                  ].join('\\n')}\n                </Code>\n              </Card>\n            )}\n\n            <BoundaryElementProvider element={rootElement}>\n              {!hidden && (\n                <Flex direction=\"column\" height=\"fill\">\n                  {children}\n                </Flex>\n              )}\n            </BoundaryElementProvider>\n          </Root>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {useContext} from 'react'\nimport {PaneContext} from './PaneContext'\nimport {PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {BoxOverflow} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\nimport {Root} from './PaneContent.styles'\n\ninterface PaneContentProps {\n  as?: React.ElementType | keyof JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","import {Card, Layer} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneFooterProps {\n  children?: React.ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Box, Flex, Layer, rgba, TextSkeleton, Text, Theme, Card} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  line-height: 0;\n  position: sticky;\n  top: 0;\n\n  &:not([data-collapsed]):after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n\nexport const TabsBox = styled(Box)(({theme}: {theme: Theme}) => {\n  const {color, space} = theme.sanity\n\n  return css`\n    overflow: hidden;\n    overflow: clip;\n    position: relative;\n\n    & > div {\n      white-space: nowrap;\n      overflow: auto;\n      /* Hide scrollbars */\n      scrollbar-width: none;\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    /* right padding */\n    & > div:after {\n      content: '';\n      display: inline-block;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      width: ${space[3]}px;\n      height: 1px;\n    }\n\n    /* Gradient that makes it look like tabs disappear into nothing (looks nicer) */\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(to right, ${rgba(color.base.bg, 0)}, var(--card-bg-color));\n      width: ${space[3]}px;\n      pointer-events: none;\n    }\n  `\n})\n","import {useElementRect, Box, Card, Flex, LayerProvider} from '@sanity/ui'\nimport React, {useMemo, useCallback, forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Layout, Root, TabsBox, TitleCard, TitleTextSkeleton, TitleText} from './PaneHeader.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneHeaderProps {\n  actions?: React.ReactNode\n  backButton?: React.ReactNode\n  contentAfter?: React.ReactNode\n  loading?: boolean\n  subActions?: React.ReactNode\n  tabIndex?: number\n  tabs?: React.ReactNode\n  title: React.ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {actions, backButton, contentAfter, loading, subActions, tabs, tabIndex, title} = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect]\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root data-collapsed={collapsed ? '' : undefined} data-testid=\"pane-header\" ref={ref}>\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout onClick={handleLayoutClick} padding={2} sizing=\"border\" style={layoutStyle}>\n              {backButton}\n\n              <TitleCard\n                __unstable_focusRing\n                flex={1}\n                forwardedAs=\"button\"\n                onClick={handleTitleClick}\n                paddingLeft={backButton ? 1 : 3}\n                paddingY={3}\n                tabIndex={tabIndex}\n              >\n                {loading && <TitleTextSkeleton animated radius={1} />}\n                {!loading && (\n                  <TitleText textOverflow=\"ellipsis\" weight=\"semibold\">\n                    {title}\n                  </TitleText>\n                )}\n              </TitleCard>\n\n              {actions && (\n                <Box hidden={collapsed} paddingLeft={1}>\n                  <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                </Box>\n              )}\n            </Layout>\n\n            {(tabs || subActions) && (\n              <Flex\n                align=\"center\"\n                hidden={collapsed}\n                overflow=\"auto\"\n                paddingBottom={3}\n                paddingX={3}\n                paddingTop={1}\n              >\n                <TabsBox flex={1} marginRight={subActions ? 3 : 0}>\n                  {tabs}\n                </TabsBox>\n\n                {subActions && subActions}\n              </Flex>\n            )}\n\n            {!collapsed && contentAfter && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {Button} from '@sanity/ui'\nimport React, {forwardRef, useMemo} from 'react'\nimport {PaneMenuItem} from '../types'\nimport {IntentLink} from 'sanity/router'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {intent: RouterIntent} & Omit<React.ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: React.ReactNode},\n        linkRef: React.ForwardedRef<HTMLAnchorElement>\n      ) {\n        return (\n          <IntentLink {...linkProps} intent={intent.type} params={intent.params} ref={linkRef} />\n        )\n      }),\n    [intent]\n  )\n\n  return props.disabled ? (\n    <Button {...props} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button\n      {...restProps}\n      as={Link}\n      data-as=\"a\"\n      ref={ref as React.ForwardedRef<HTMLButtonElement>}\n    />\n  )\n})\n","import {Tooltip, Text, Box} from '@sanity/ui'\nimport React from 'react'\nimport {useCurrentUser, InsufficientPermissionsMessage} from 'sanity'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  loading: boolean\n  children: React.ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          <Box padding={2}>\n            <Text>Loading…</Text>\n          </Box>\n        ) : (\n          <InsufficientPermissionsMessage currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {ComposeIcon} from '@sanity/icons'\nimport React, {useMemo, forwardRef} from 'react'\nimport {Box, Button, Label, Menu, MenuButton, MenuItem, PopoverProps} from '@sanity/ui'\nimport {Schema} from '@sanity/types'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\nimport {IntentLink} from 'sanity/router'\nimport {\n  useTemplatePermissions,\n  TemplatePermissionsResult,\n  Template,\n  InitialValueTemplateItem,\n  useSchema,\n  useTemplates,\n} from 'sanity'\n\nexport type PaneHeaderIntentProps = React.ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  schema: Schema,\n  templates: Template[],\n  item: InitialValueTemplateItem\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const schema = useSchema()\n  const templates = useTemplates()\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {}\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip reveal loading={isTemplatePermissionsLoading}>\n        <Button\n          aria-label=\"Insufficient permissions\"\n          icon={ComposeIcon}\n          mode=\"bleed\"\n          disabled\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(schema, templates, firstItem)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n      >\n        <IntentButton\n          aria-label={firstItem.title}\n          icon={firstItem.icon || ComposeIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={ComposeIcon}\n          mode=\"bleed\"\n          padding={3}\n          data-testid=\"multi-action-intent-button\"\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          <Box paddingX={3} paddingTop={3} paddingBottom={2}>\n            <Label muted>Create</Label>\n          </Box>\n\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(schema, templates, item)\n            const template = templates.find((t) => t.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: React.ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  ref={linkRef}\n                />\n              )\n            )\n\n            Link.displayName = 'Link'\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={item.title || template.title}\n                  aria-label={disabled ? 'Insufficient permissions' : item.title || template.title}\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {UnknownIcon} from '@sanity/icons'\nimport {Box, Button, Inline, Text, Tooltip} from '@sanity/ui'\nimport {partition, uniqBy} from 'lodash'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport {DeskToolPaneActionHandler, PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {IntentButton} from '../IntentButton'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\nimport {useTemplates, InitialValueTemplateItem} from 'sanity'\n\n// to preserve memory references\nconst emptyArray: never[] = []\nconst emptyObject = {}\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, DeskToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(\n  ({\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = emptyArray,\n    menuItems = emptyArray,\n    menuItemGroups = emptyArray,\n    actionHandlers = emptyObject,\n  }: PaneHeaderActionsProps) => {\n    const templates = useTemplates()\n\n    const handleAction = useCallback(\n      (item: PaneMenuItem) => {\n        if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n          console.warn('No handler for action:', item.action)\n          return false\n        }\n\n        const handler =\n          // eslint-disable-next-line no-nested-ternary\n          typeof item.action === 'function'\n            ? item.action\n            : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n        if (handler) {\n          handler(item.params as Record<string, string>)\n          return true\n        }\n\n        return false\n      },\n      [actionHandlers]\n    )\n\n    const [actionMenuItems, contextMenuItems] = useMemo(() => {\n      const nonCreateMenuItem = menuItems\n        // remove items with `create` intents because those will get combined\n        // into one action button later\n        .filter((item) => item.intent?.type !== 'create')\n\n      return partition(nonCreateMenuItem, (item) => item.showAsAction)\n    }, [menuItems])\n\n    const initialValueTemplateItemFromMenuItems = useMemo(() => {\n      return menuItems\n        .map((item, menuItemIndex) => {\n          if (item.intent?.type !== 'create') return null\n\n          const {params} = item.intent\n          if (!params) return null\n\n          const intentParams = Array.isArray(params) ? params[0] : params\n          const templateParams = Array.isArray(params) ? params[1] : undefined\n\n          // fallback to the schema type name as the template ID.\n          // by default, the initial template values are populated from every\n          // document type in the schema\n          const templateId = intentParams.template || intentParams.type\n          if (!templateId) return null\n\n          // eslint-disable-next-line max-nested-callbacks\n          const template = templates.find((t) => t.id === templateId)\n          // the template doesn't exist then the action might be disabled\n          if (!template) return null\n\n          const initialDocumentId = intentParams.id\n\n          return {\n            item,\n            template,\n            templateParams,\n            menuItemIndex,\n            initialDocumentId,\n          }\n        })\n        .filter(isNonNullable)\n        .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n          const initialValueTemplateItem: InitialValueTemplateItem = {\n            id: `menuItem${menuItemIndex}`,\n            initialDocumentId,\n            templateId: template.id,\n            type: 'initialValueTemplateItem',\n            title: item.title || template.title,\n            icon: item.icon as InitialValueTemplateItem['icon'],\n            description: template.description,\n            parameters: templateParams,\n            schemaType: template.schemaType,\n          }\n\n          return initialValueTemplateItem\n        })\n    }, [menuItems, templates])\n\n    const combinedInitialValueTemplates = useMemo(() => {\n      // this de-dupes create actions\n      return uniqBy(\n        [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n        (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters])\n      )\n    }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n    return (\n      <Inline space={1}>\n        {[\n          Boolean(combinedInitialValueTemplates.length) && (\n            <PaneHeaderCreateButton\n              key=\"$CreateMenuButton\"\n              templateItems={combinedInitialValueTemplates}\n            />\n          ),\n          //\n          ...actionMenuItems.map((actionItem, actionIndex) => {\n            return (\n              <Tooltip\n                content={\n                  <Box padding={2}>\n                    <Text size={1}>{actionItem.title}</Text>\n                  </Box>\n                }\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${actionIndex}-${actionItem.title}`}\n                placement=\"bottom\"\n              >\n                {actionItem.intent ? (\n                  <IntentButton\n                    intent={actionItem.intent}\n                    aria-label={actionItem.title}\n                    icon={actionItem.icon || UnknownIcon}\n                    mode=\"bleed\"\n                  />\n                ) : (\n                  <Button\n                    aria-label={actionItem.title}\n                    icon={actionItem.icon || UnknownIcon}\n                    mode=\"bleed\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => handleAction(actionItem)}\n                  />\n                )}\n              </Tooltip>\n            )\n          }),\n          //\n          Boolean(contextMenuItems.length) && (\n            <PaneContextMenuButton\n              items={contextMenuItems}\n              itemGroups={menuItemGroups}\n              key=\"$ContextMenu\"\n              onAction={handleAction}\n            />\n          ),\n        ]}\n      </Inline>\n    )\n  }\n)\n\nPaneHeaderActions.displayName = 'PaneHeaderActions'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport React, {useCallback, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DELETE: 'This document doesn’t yet exist or is already deleted',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete}) => {\n  const {delete: deleteOp} = useDocumentOperation(id, type)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: true,\n      label: 'Delete',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"delete this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: TrashIcon,\n    disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n    title:\n      (deleteOp.disabled &&\n        DISABLED_REASON_TITLE[deleteOp.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: isDeleting ? 'Deleting…' : 'Delete',\n    shortcut: 'Ctrl+Alt+D',\n    onHandle: handle,\n    dialog: isConfirmDialogOpen && {\n      type: 'custom',\n      component: (\n        <ConfirmDeleteDialog\n          action=\"delete\"\n          id={draft?._id || id}\n          type={type}\n          onCancel={handleCancel}\n          onConfirm={handleConfirm}\n        />\n      ),\n    },\n  }\n}\n\nDeleteAction.action = 'delete'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {\n  DocumentActionComponent,\n  DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NO_CHANGES: 'This document has no unpublished changes',\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to discard all changes since last published?</>,\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete]\n  )\n\n  if (!published || liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: true,\n      label: 'Discard changes',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"discard changes in this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: ResetIcon,\n    disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n    title:\n      (discardChanges.disabled &&\n        DISABLED_REASON_TITLE[discardChanges.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: 'Discard changes',\n    onHandle: handle,\n    dialog,\n  }\n}\n\nDiscardChangesAction.action = 'discardChanges'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport React, {useCallback, useState} from 'react'\nimport {useRouter} from 'sanity/router'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useDocumentOperation,\n  useCurrentUser,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DUPLICATE: 'This document doesn’t yet exist so there‘s nothing to duplicate',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete}) => {\n  const {duplicate} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'duplicate',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(() => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n    duplicate.execute(dupeId)\n    navigateIntent('edit', {id: dupeId, type})\n    onComplete()\n  }, [duplicate, navigateIntent, onComplete, type])\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      icon: CopyIcon,\n      disabled: true,\n      label: 'Duplicate',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"duplicate this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    icon: CopyIcon,\n    disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n    label: isDuplicating ? 'Duplicating…' : 'Duplicate',\n    title:\n      (duplicate.disabled &&\n        DISABLED_REASON_TITLE[duplicate.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    onHandle: handle,\n  }\n}\n\nDuplicateAction.action = 'duplicate'\n","import {RestoreIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {DocumentActionComponent, DocumentActionDialogProps, useDocumentOperation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({id, type, revision, onComplete}) => {\n  const {restore} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    navigateIntent('edit', {id, type})\n    onComplete()\n  }, [restore, revision, navigateIntent, id, type, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to restore this document?</>,\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete])\n\n  const isRevisionInitialVersion = revision === '@initial'\n  const isRevisionLatestVersion = revision === undefined // undefined means latest version\n\n  if (isRevisionLatestVersion) {\n    return null\n  }\n\n  return {\n    label: 'Restore',\n    color: 'primary',\n    onHandle: handle,\n    title: isRevisionInitialVersion\n      ? \"You can't restore to the initial version\"\n      : 'Restore to this version',\n    icon: RestoreIcon,\n    dialog,\n    disabled: isRevisionInitialVersion,\n  }\n}\n\nHistoryRestoreAction.action = 'restore'\n","import {\n  ValidationMarker,\n  Path,\n  SanityDocument,\n  ObjectSchemaType,\n  SanityDocumentLike,\n} from '@sanity/types'\nimport {createContext} from 'react'\nimport {View} from '../../structureBuilder'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {TimelineMode} from './types'\nimport {\n  DocumentActionComponent,\n  DocumentBadgeComponent,\n  DocumentFormNode,\n  DocumentLanguageFilterComponent,\n  DocumentPermission,\n  EditStateFor,\n  PatchEvent,\n  PermissionCheckResult,\n  StateTree,\n  TimelineStore,\n} from 'sanity'\n\n/** @internal */\nexport interface DocumentPaneContextValue {\n  actions: DocumentActionComponent[] | null\n  activeViewId: string | null\n  badges: DocumentBadgeComponent[] | null\n  changesOpen: boolean\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  compareValue: Partial<SanityDocument> | null\n  connectionState: 'connecting' | 'reconnecting' | 'connected'\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  documentIdRaw: string\n  documentType: string\n  editState: EditStateFor | null\n  focusPath: Path\n  index: number\n  inspectOpen: boolean\n  menuItemGroups: PaneMenuItemGroup[]\n  menuItems: PaneMenuItem[]\n  onBlur: (blurredPath: Path) => void\n  onChange: (event: PatchEvent) => void\n  onFocus: (pathOrEvent: Path) => void\n  onHistoryClose: () => void\n  onHistoryOpen: () => void\n  onInspectClose: () => void\n  onKeyUp: (event: React.KeyboardEvent<HTMLDivElement>) => void\n  onMenuAction: (item: PaneMenuItem) => void\n  onPaneClose: () => void\n  onPaneSplit?: () => void\n  onPathOpen: (path: Path) => void\n  onSetActiveFieldGroup: (path: Path, groupName: string) => void\n  onSetCollapsedPath: (path: Path, expanded: boolean) => void\n  onSetCollapsedFieldSet: (path: Path, expanded: boolean) => void\n  paneKey: string\n  previewUrl?: string | null\n  ready: boolean\n  schemaType: ObjectSchemaType\n  setTimelineMode: (mode: TimelineMode) => void\n  setTimelineRange(since: string | null, rev: string | null): void\n  source?: string\n  timelineError: Error | null\n  timelineMode: TimelineMode\n  timelineStore: TimelineStore\n  title: string | null\n  validation: ValidationMarker[]\n  value: SanityDocumentLike\n  views: View[]\n  formState: DocumentFormNode | null\n  permissions?: PermissionCheckResult | null\n  isPermissionsLoading: boolean\n  unstable_languageFilter: DocumentLanguageFilterComponent[]\n}\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(null)\n","import {useContext} from 'react'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {CheckmarkIcon, PublishIcon} from '@sanity/icons'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport React, {useCallback, useEffect, useState} from 'react'\nimport {TimeAgo} from '../components'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useSyncState,\n  useValidationStatus,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  LIVE_EDIT_ENABLED: 'Cannot publish since liveEdit is enabled for this document type',\n  ALREADY_PUBLISHED: 'Already published',\n  NO_CHANGES: 'No unpublished changes',\n  NOT_READY: 'Operation not ready',\n}\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE,\n  publishedAt: string | undefined\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return (\n      <>\n        <span>\n          Published <TimeAgo time={publishedAt} />\n        </span>\n      </>\n    )\n  }\n  return DISABLED_REASON_TITLE[reason]\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, onHistoryOpen, documentId, documentType} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt) || ''\n    : hasValidationErrors\n    ? 'There are validation errors that need to be fixed before this document can be published'\n    : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n    if (didPublish) {\n      if (changesOpen) {\n        // Re-open the panel\n        onHistoryOpen()\n      }\n    }\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft, onHistoryOpen])\n\n  const handle = useCallback(() => {\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  if (liveEdit) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title:\n        'Live Edit is enabled for this content type and publishing happens automatically as you make changes',\n      disabled: true,\n    }\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"publish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  const disabled = Boolean(\n    publishScheduled ||\n      editState?.transactionSyncLock?.enabled ||\n      publishState === 'publishing' ||\n      publishState === 'published' ||\n      hasValidationErrors ||\n      publish.disabled\n  )\n\n  return {\n    disabled: disabled || isPermissionsLoading,\n    tone: 'positive',\n    label:\n      // eslint-disable-next-line no-nested-ternary\n      publishState === 'published'\n        ? 'Published'\n        : publishScheduled || publishState === 'publishing'\n        ? 'Publishing…'\n        : 'Publish',\n    // @todo: Implement loading state, to show a `<Button loading />` state\n    // loading: publishScheduled || publishState === 'publishing',\n    icon: publishState === 'published' ? CheckmarkIcon : PublishIcon,\n    // eslint-disable-next-line no-nested-ternary\n    title: publishScheduled\n      ? 'Waiting for tasks to finish before publishing'\n      : publishState === 'published' || publishState === 'publishing'\n      ? null\n      : title,\n    shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n    onHandle: handle,\n  }\n}\n\nPublishAction.action = 'publish'\n","import {UnpublishIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useCurrentUser,\n  useDocumentOperation,\n  DocumentActionModalDialogProps,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  if (liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      label: 'Unpublish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"unpublish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: UnpublishIcon,\n    disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n    label: 'Unpublish',\n    title: unpublish.disabled\n      ? DISABLED_REASON_TITLE[unpublish.disabled as keyof typeof DISABLED_REASON_TITLE]\n      : '',\n    onHandle: () => setConfirmDialogOpen(true),\n    dialog,\n  }\n}\n\nUnpublishAction.action = 'unpublish'\n","import {DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEdit} = props\n\n  if (liveEdit) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = {}\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {uuid} from '@sanity/uuid'\nimport {PaneNode, RouterPanes} from './types'\nimport {EMPTY_PARAMS, LOADING_PANE} from './constants'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n  const isTemplate = intent === 'create' && params.template\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = isTemplate ? {template: params.template} : EMPTY_PARAMS\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n","import {omit} from 'lodash'\nimport {RouterPanes, RouterPaneGroup, RouterPaneSibling} from './types'\nimport {route} from 'sanity/router'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayload = (str: string) =>\n  /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n  ? never\n  : T extends 0\n  ? never\n  : T extends 0n\n  ? never\n  : T extends null | undefined\n  ? NonNullable<T>\n  : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  return chunks.reduce(\n    (pane, chunk) => {\n      if (isParam(chunk)) {\n        const key = chunk.slice(0, chunk.indexOf('='))\n        const value = chunk.slice(key.length + 1)\n        pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n      } else if (isPayload(chunk)) {\n        pane.payload = tryParseBase64Payload(chunk)\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unknown pane segment: %s - skipping', chunk)\n      }\n\n      return pane\n    },\n    {...initial, params: EMPTY_PARAMS, payload: undefined}\n  )\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload = typeof payload === 'undefined' ? undefined : btoa(JSON.stringify(payload))\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string) {\n  return data ? tryParsePayload(atob(data)) : undefined\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {router} from './router'\nimport {DeskToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\n/**\n * @hidden\n * @beta */\nexport const deskTool = definePlugin<DeskToolOptions | void>((options) => ({\n  name: '@sanity/desk-tool',\n  document: {\n    actions: (prevActions) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document actions already exist in the Studio config\n      const actions = prevActions.slice(0)\n      for (const action of documentActions) {\n        if (!actions.includes(action)) actions.push(action)\n      }\n      return actions\n    },\n    badges: (prevBadges) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document badges already exist in the Studio config\n      const badges = prevBadges.slice(0)\n      for (const badge of documentBadges) {\n        if (!badges.includes(badge)) badges.push(badge)\n      }\n      return badges\n    },\n  },\n  tools: [\n    {\n      name: options?.name || 'desk',\n      title: options?.title || 'Desk',\n      icon: options?.icon || MasterDetailIcon,\n      component: lazy(() => import('./components/deskTool')),\n      canHandleIntent: (intent, params) => {\n        return Boolean(\n          (intent === 'edit' && params.id) ||\n            (intent === 'create' && params.type) ||\n            (intent === 'create' && params.template)\n        )\n      },\n      getIntentState,\n      options,\n      router,\n    },\n  ],\n}))\n","import {createContext} from 'react'\nimport {DeskToolContextValue} from './types'\n\nexport const DeskToolContext = createContext<DeskToolContextValue | null>(null)\n","import {SerializePath} from './StructureNodes'\n\n/** @internal */\nexport class SerializeError extends Error {\n  public readonly path: SerializePath\n  public helpId?: HELP_URL\n\n  constructor(\n    message: string,\n    parentPath: SerializePath,\n    pathSegment: string | number | undefined,\n    hint?: string\n  ) {\n    super(message)\n    const segment = typeof pathSegment === 'undefined' ? '<unknown>' : `${pathSegment}`\n    this.path = (parentPath || []).concat(hint ? `${segment} (${hint})` : segment)\n  }\n\n  withHelpUrl(id: HELP_URL): SerializeError {\n    this.helpId = id\n    return this\n  }\n}\n\n/** @internal */\nexport enum HELP_URL {\n  ID_REQUIRED = 'structure-node-id-required',\n  TITLE_REQUIRED = 'structure-title-required',\n  FILTER_REQUIRED = 'structure-filter-required',\n  INVALID_LIST_ITEM = 'structure-invalid-list-item',\n  COMPONENT_REQUIRED = 'structure-view-component-required',\n  DOCUMENT_ID_REQUIRED = 'structure-document-id-required',\n  DOCUMENT_TYPE_REQUIRED = 'structure-document-type-required',\n  SCHEMA_TYPE_REQUIRED = 'structure-schema-type-required',\n  SCHEMA_TYPE_NOT_FOUND = 'structure-schema-type-not-found',\n  LIST_ITEMS_MUST_BE_ARRAY = 'structure-list-items-must-be-array',\n  QUERY_PROVIDED_FOR_FILTER = 'structure-query-provided-for-filter',\n  ACTION_OR_INTENT_REQUIRED = 'structure-action-or-intent-required',\n  LIST_ITEM_IDS_MUST_BE_UNIQUE = 'structure-list-item-ids-must-be-unique',\n  ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE = 'structure-action-and-intent-mutually-exclusive',\n}\n","import {SchemaType, SortOrderingItem} from '@sanity/types'\n\nconst IMPLICIT_FIELDS = ['_id', '_type', '_createdAt', '_updatedAt', '_rev']\n\n// Takes a path array and a schema type and builds a GROQ join every time it enters a reference field\nfunction joinReferences(schemaType: SchemaType, path: string[]): string {\n  const [head, ...tail] = path\n\n  if (!('fields' in schemaType)) {\n    return ''\n  }\n\n  const schemaField = schemaType.fields.find((field) => field.name === head)\n  if (!schemaField) {\n    if (!IMPLICIT_FIELDS.includes(head)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The current ordering config targeted the nonexistent field \"%s\" on schema type \"%s\". It should be one of %o',\n        head,\n        schemaType.name,\n        schemaType.fields.map((field) => field.name)\n      )\n    }\n    return ''\n  }\n\n  if ('to' in schemaField.type && schemaField.type.name === 'reference') {\n    const refTypes = schemaField.type.to\n    return `${head}->{${refTypes.map((refType) => joinReferences(refType, tail)).join(',')}}`\n  }\n\n  const tailFields = tail.length > 0 && joinReferences(schemaField.type, tail)\n  const tailWrapper = tailFields ? `{${tailFields}}` : ''\n  return tail.length > 0 ? `${head}${tailWrapper}` : head\n}\n\nexport function getExtendedProjection(schemaType: SchemaType, orderBy: SortOrderingItem[]): string {\n  return orderBy.map((ordering) => joinReferences(schemaType, ordering.field.split('.'))).join(', ')\n}\n","import {SortOrdering} from '@sanity/types'\n\nexport const ORDER_BY_UPDATED_AT: SortOrdering = {\n  title: 'Last edited',\n  name: 'lastEditedDesc',\n  by: [{field: '_updatedAt', direction: 'desc'}],\n}\n\nexport const ORDER_BY_CREATED_AT: SortOrdering = {\n  title: 'Created',\n  name: 'lastCreatedDesc',\n  by: [{field: '_createdAt', direction: 'desc'}],\n}\n\nexport const DEFAULT_SELECTED_ORDERING_OPTION = ORDER_BY_UPDATED_AT\n\nexport const DEFAULT_ORDERING_OPTIONS: SortOrdering[] = [\n  ORDER_BY_UPDATED_AT, // _updatedAt\n  ORDER_BY_CREATED_AT, // _createdAt\n]\n","import {SchemaType, SortOrdering, SortOrderingItem} from '@sanity/types'\nimport {SortIcon} from '@sanity/icons'\nimport {getExtendedProjection} from './util/getExtendedProjection'\nimport {Intent} from './Intent'\nimport {DEFAULT_ORDERING_OPTIONS} from './Sort'\nimport {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItem(\n  item: MenuItem | MenuItemBuilder,\n  index: number,\n  path: SerializePath\n): MenuItem {\n  return item instanceof MenuItemBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * @hidden\n * @beta */\nexport type MenuItemActionType =\n  | string\n  | ((params: Record<string, string> | undefined, scope?: any) => void)\n\n/**\n * @hidden\n * @beta */\nexport type MenuItemParamsType = Record<string, string | unknown | undefined>\n\n/**\n * @hidden\n * @beta */\nexport interface MenuItem {\n  title: string\n  action?: MenuItemActionType\n  intent?: Intent\n  group?: string\n  // TODO: align these with TemplateResponse['icon']\n  icon?: React.ComponentType | React.ReactNode\n  params?: MenuItemParamsType\n  showAsAction?: boolean\n}\n\n/**\n * @hidden\n * @beta */\nexport type PartialMenuItem = Partial<MenuItem>\n\n/**\n * @hidden\n * @beta */\nexport class MenuItemBuilder implements Serializable<MenuItem> {\n  protected spec: PartialMenuItem\n\n  constructor(protected _context: StructureContext, spec?: MenuItem) {\n    this.spec = spec ? spec : {}\n  }\n\n  action(action: MenuItemActionType): MenuItemBuilder {\n    return this.clone({action})\n  }\n\n  getAction(): PartialMenuItem['action'] {\n    return this.spec.action\n  }\n\n  intent(intent: Intent): MenuItemBuilder {\n    return this.clone({intent})\n  }\n\n  getIntent(): PartialMenuItem['intent'] {\n    return this.spec.intent\n  }\n\n  title(title: string): MenuItemBuilder {\n    return this.clone({title})\n  }\n\n  getTitle(): string | undefined {\n    return this.spec.title\n  }\n\n  group(group: string): MenuItemBuilder {\n    return this.clone({group})\n  }\n\n  getGroup(): PartialMenuItem['group'] {\n    return this.spec.group\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): MenuItemBuilder {\n    return this.clone({icon})\n  }\n\n  getIcon(): PartialMenuItem['icon'] {\n    return this.spec.icon\n  }\n\n  params(params: MenuItemParamsType): MenuItemBuilder {\n    return this.clone({params})\n  }\n\n  getParams(): PartialMenuItem['params'] {\n    return this.spec.params\n  }\n\n  showAsAction(showAsAction = true): MenuItemBuilder {\n    return this.clone({showAsAction: Boolean(showAsAction)})\n  }\n\n  getShowAsAction(): PartialMenuItem['showAsAction'] {\n    return this.spec.showAsAction\n  }\n\n  serialize(options: SerializeOptions = {path: []}): MenuItem {\n    const {title, action, intent} = this.spec\n    if (!title) {\n      const hint = typeof action === 'string' ? `action: \"${action}\"` : undefined\n      throw new SerializeError(\n        '`title` is required for menu item',\n        options.path,\n        options.index,\n        hint\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    if (!action && !intent) {\n      throw new SerializeError(\n        `\\`action\\` or \\`intent\\` required for menu item with title ${this.spec.title}`,\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_OR_INTENT_REQUIRED)\n    }\n\n    if (intent && action) {\n      throw new SerializeError(\n        'cannot set both `action` AND `intent`',\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE)\n    }\n\n    return {...this.spec, title}\n  }\n\n  clone(withSpec?: PartialMenuItem): MenuItemBuilder {\n    const builder = new MenuItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport interface SortMenuItem extends MenuItem {\n  params: {\n    by: SortOrderingItem[]\n  }\n}\n\n/** @internal */\nexport function getOrderingMenuItem(\n  context: StructureContext,\n  ordering: SortOrdering,\n  extendedProjection?: string\n): MenuItemBuilder {\n  return new MenuItemBuilder(context)\n    .group('sorting')\n    .title(`Sort by ${ordering.title}`)\n    .icon(SortIcon)\n    .action('setSortOrder')\n    .params({by: ordering.by, extendedProjection})\n}\n\n/** @internal */\nexport function getOrderingMenuItemsForSchemaType(\n  context: StructureContext,\n  typeName: SchemaType | string\n): MenuItemBuilder[] {\n  const {schema} = context\n  const type = typeof typeName === 'string' ? schema.get(typeName) : typeName\n  if (!type || !('orderings' in type)) {\n    return []\n  }\n\n  return (\n    type.orderings ? type.orderings.concat(DEFAULT_ORDERING_OPTIONS) : DEFAULT_ORDERING_OPTIONS\n  ).map((ordering: SortOrdering) =>\n    getOrderingMenuItem(context, ordering, getExtendedProjection(type, ordering.by))\n  )\n}\n","import {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItemGroup(\n  item: MenuItemGroup | MenuItemGroupBuilder,\n  index: number,\n  path: SerializePath\n): MenuItemGroup {\n  return item instanceof MenuItemGroupBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * @hidden\n * @beta */\nexport interface MenuItemGroup {\n  id: string\n  title: string\n}\n\n/**\n * @hidden\n * @beta */\nexport class MenuItemGroupBuilder implements Serializable<MenuItemGroup> {\n  protected _id: string\n  protected _title: string\n\n  constructor(protected _context: StructureContext, spec?: MenuItemGroup) {\n    this._id = spec ? spec.id : ''\n    this._title = spec ? spec.title : ''\n  }\n\n  id(id: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id, title: this._title})\n  }\n\n  getId(): string {\n    return this._id\n  }\n\n  title(title: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id: this._id, title})\n  }\n\n  getTitle(): string {\n    return this._title\n  }\n\n  serialize(options: SerializeOptions = {path: []}): MenuItemGroup {\n    const {_id, _title} = this\n    if (!_id) {\n      throw new SerializeError(\n        '`id` is required for a menu item group',\n        options.path,\n        options.index,\n        _title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!_title) {\n      throw new SerializeError(\n        '`title` is required for a menu item group',\n        options.path,\n        _id\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: _id,\n      title: _title,\n    }\n  }\n}\n","import {SerializeError} from '../SerializeError'\nimport {SerializePath} from '../StructureNodes'\n\nexport const disallowedPattern = /([^A-Za-z0-9-_.])/\n\nexport function validateId(\n  id: string,\n  parentPath: SerializePath,\n  pathSegment: string | number | undefined\n): string {\n  if (typeof id !== 'string') {\n    throw new SerializeError(\n      `Structure node id must be of type string, got ${typeof id}`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  const [disallowedChar] = id.match(disallowedPattern) || []\n  if (disallowedChar) {\n    throw new SerializeError(\n      `Structure node id cannot contain character \"${disallowedChar}\"`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  if (id.startsWith('__edit__')) {\n    throw new SerializeError(\n      `Structure node id cannot start with __edit__`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  return id\n}\n","import {camelCase} from 'lodash'\nimport getSlug from 'speakingurl'\nimport {disallowedPattern} from './validateId'\n\nexport function getStructureNodeId(title: string, id?: string): string {\n  if (id) {\n    return id\n  }\n\n  const camelCased = camelCase(title)\n\n  return disallowedPattern.test(camelCased) ? camelCase(getSlug(title)) : camelCased\n}\n","import {SerializeOptions, StructureNode, Serializable, Child} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {validateId} from './util/validateId'\nimport {UserComponent} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/**\n * @hidden\n * @beta */\n// TODO: rename to `StructureComponent` since it clashes with React?\nexport interface Component extends StructureNode {\n  component: UserComponent\n  child?: Child\n  menuItems: MenuItem[]\n  menuItemGroups: MenuItemGroup[]\n  options: {[key: string]: unknown}\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ComponentInput extends StructureNode {\n  component: UserComponent\n  child?: Child\n  options?: {[key: string]: unknown}\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * @hidden\n * @beta */\nexport interface BuildableComponent extends Partial<StructureNode> {\n  component?: UserComponent\n  child?: Child\n  options?: {[key: string]: unknown}\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * @hidden\n * @beta */\nexport class ComponentBuilder implements Serializable<Component> {\n  protected spec: BuildableComponent\n\n  constructor(spec?: ComponentInput) {\n    this.spec = {options: {}, ...(spec ? spec : {})}\n  }\n\n  id(id: string): ComponentBuilder {\n    return this.clone({id})\n  }\n\n  getId(): BuildableComponent['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ComponentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): BuildableComponent['title'] {\n    return this.spec.title\n  }\n\n  child(child: Child): ComponentBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): BuildableComponent['child'] {\n    return this.spec.child\n  }\n\n  component(component: UserComponent): ComponentBuilder {\n    return this.clone({component})\n  }\n\n  getComponent(): BuildableComponent['component'] {\n    return this.spec.component\n  }\n\n  options(options: {[key: string]: unknown}): ComponentBuilder {\n    return this.clone({options})\n  }\n\n  getOptions(): NonNullable<BuildableComponent['options']> {\n    return this.spec.options || {}\n  }\n\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[]): ComponentBuilder {\n    return this.clone({menuItems})\n  }\n\n  getMenuItems(): BuildableComponent['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ComponentBuilder {\n    return this.clone({menuItemGroups})\n  }\n\n  getMenuItemGroups(): BuildableComponent['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  serialize(options: SerializeOptions = {path: []}): Component {\n    const {id, title, child, options: componentOptions, component} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!component) {\n      throw new SerializeError(\n        '`component` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      type: 'component',\n      child,\n      component,\n      options: componentOptions || {},\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, options.path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, options.path)\n      ),\n    }\n  }\n\n  clone(withSpec?: BuildableComponent): ComponentBuilder {\n    const builder = new ComponentBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import type {SanityClient} from '@sanity/client'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  getDraftId,\n  getPublishedId,\n  type SourceClientOptions,\n} from 'sanity'\n\nexport async function resolveTypeForDocument(\n  getClient: (options: SourceClientOptions) => SanityClient,\n  id: string\n): Promise<string | undefined> {\n  const query = '*[_id in [$documentId, $draftId]]._type'\n  const documentId = getPublishedId(id)\n  const draftId = getDraftId(id)\n\n  const types = await getClient(DEFAULT_STUDIO_CLIENT_OPTIONS).fetch(\n    query,\n    {documentId, draftId},\n    {tag: 'structure.resolve-type'}\n  )\n\n  return types[0]\n}\n","import {kebabCase} from 'lodash'\nimport {Serializable, SerializeOptions, SerializePath} from '../StructureNodes'\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {validateId} from '../util/validateId'\nimport {View} from '../types'\nimport {ComponentViewBuilder} from './ComponentView'\nimport {FormViewBuilder} from './FormView'\n\n/**\n * @hidden\n * @beta */\nexport interface BaseView {\n  id: string\n  title: string\n  icon?: React.ComponentType | React.ReactNode\n}\n\n/**\n * @hidden\n * @beta */\nexport abstract class GenericViewBuilder<TView extends Partial<BaseView>, ConcreteImpl>\n  implements Serializable<BaseView>\n{\n  protected spec: TView = {} as TView\n\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  getId(): TView['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: this.spec.id || kebabCase(title)})\n  }\n\n  getTitle(): TView['title'] {\n    return this.spec.title\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): ConcreteImpl {\n    return this.clone({icon})\n  }\n\n  getIcon(): TView['icon'] {\n    return this.spec.icon\n  }\n\n  serialize(options: SerializeOptions = {path: []}): BaseView {\n    const {id, title, icon} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!title) {\n      throw new SerializeError(\n        '`title` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      icon,\n    }\n  }\n\n  abstract clone(withSpec?: Partial<BaseView>): ConcreteImpl\n}\n\nfunction isSerializable(view: BaseView | Serializable<BaseView>): view is Serializable<BaseView> {\n  return typeof (view as Serializable<BaseView>).serialize === 'function'\n}\n\n/** @internal */\nexport function maybeSerializeView(\n  item: View | Serializable<View>,\n  index: number,\n  path: SerializePath\n): View {\n  return isSerializable(item) ? item.serialize({path, index}) : item\n}\n\n/**\n * @hidden\n * @beta */\nexport type ViewBuilder = ComponentViewBuilder | FormViewBuilder\n","import {SerializeOptions} from '../StructureNodes'\nimport {SerializeError, HELP_URL} from '../SerializeError'\nimport type {UserViewComponent} from '../types'\nimport {BaseView, GenericViewBuilder} from './View'\nimport {isRecord} from 'sanity'\n\n/**\n * @hidden\n * @beta */\nexport interface ComponentView<TOptions = Record<string, any>> extends BaseView {\n  type: 'component'\n  component: UserViewComponent\n  options: TOptions\n}\n\nconst isComponentSpec = (spec: unknown): spec is ComponentView =>\n  isRecord(spec) && spec.type === 'component'\n\n/**\n * @hidden\n * @beta */\nexport class ComponentViewBuilder extends GenericViewBuilder<\n  Partial<ComponentView>,\n  ComponentViewBuilder\n> {\n  protected spec: Partial<ComponentView>\n\n  constructor(componentOrSpec?: UserViewComponent | Partial<ComponentView>) {\n    const spec = isComponentSpec(componentOrSpec) ? {...componentOrSpec} : {options: {}}\n\n    super()\n    this.spec = spec\n\n    const userComponent =\n      typeof componentOrSpec === 'function' ? componentOrSpec : this.spec.component\n\n    if (userComponent) {\n      // Because we're cloning, this'll return a new instance, so grab the spec from it\n      this.spec = this.component(userComponent).spec\n    }\n  }\n\n  component(component: UserViewComponent): ComponentViewBuilder {\n    return this.clone({component})\n  }\n\n  getComponent(): Partial<ComponentView>['component'] {\n    return this.spec.component\n  }\n\n  options(options: {[key: string]: any}): ComponentViewBuilder {\n    return this.clone({options})\n  }\n\n  getOptions(): ComponentView['options'] {\n    return this.spec.options || {}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): ComponentView {\n    const base = super.serialize(options)\n\n    const component = this.spec.component\n    if (typeof component !== 'function') {\n      throw new SerializeError(\n        '`component` is required and must be a function for `component()` view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.COMPONENT_REQUIRED)\n    }\n\n    return {\n      ...base,\n      component,\n      options: this.spec.options || {},\n      type: 'component',\n    }\n  }\n\n  clone(withSpec?: Partial<ComponentView>): ComponentViewBuilder {\n    const builder = new ComponentViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SerializeOptions} from '../StructureNodes'\nimport {BaseView, GenericViewBuilder} from './View'\n\n/**\n * @hidden\n * @beta */\nexport interface FormView extends BaseView {\n  type: 'form'\n}\n\n/**\n * @hidden\n * @beta */\nexport class FormViewBuilder extends GenericViewBuilder<Partial<BaseView>, FormViewBuilder> {\n  protected spec: Partial<FormView>\n\n  constructor(spec?: Partial<FormView>) {\n    super()\n    this.spec = {id: 'editor', title: 'Editor', ...(spec ? spec : {})}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): FormView {\n    return {\n      ...super.serialize(options),\n      type: 'form',\n    }\n  }\n\n  clone(withSpec?: Partial<FormView>): FormViewBuilder {\n    const builder = new FormViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import type {UserViewComponent} from '../types'\nimport {ComponentView, ComponentViewBuilder} from './ComponentView'\nimport {FormView, FormViewBuilder} from './FormView'\n\nexport * from './FormView'\nexport * from './ComponentView'\nexport * from './View'\n\n/** @internal */\nexport const form = (spec?: Partial<FormView>): FormViewBuilder => new FormViewBuilder(spec)\n\n/** @internal */\nexport const component = (\n  componentOrSpec?: UserViewComponent | Partial<ComponentView>\n): ComponentViewBuilder => new ComponentViewBuilder(componentOrSpec)\n","import {uniq} from 'lodash'\nimport {SchemaType} from '@sanity/types'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {ChildResolver} from './ChildResolver'\nimport {SerializeOptions, Serializable, Child, DocumentNode, EditorNode} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {validateId} from './util/validateId'\nimport {ViewBuilder, maybeSerializeView} from './views/View'\nimport {form} from './views'\nimport type {StructureContext, View} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\nconst createDocumentChildResolver =\n  ({resolveDocumentNode, getClient}: StructureContext): ChildResolver =>\n  async (itemId, {params, path}) => {\n    let type = params.type\n\n    const parentPath = path.slice(0, path.length - 1)\n    const currentSegment = path[path.length - 1]\n\n    if (!type) {\n      type = await resolveTypeForDocument(getClient, itemId)\n    }\n\n    if (!type) {\n      throw new SerializeError(\n        `Failed to resolve document, and no type provided in parameters.`,\n        parentPath,\n        currentSegment\n      )\n    }\n\n    return resolveDocumentNode({documentId: itemId, schemaType: type})\n  }\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentOptions {\n  id: string\n  type: string\n  template?: string\n  templateParameters?: Record<string, unknown>\n}\n\n/**\n * @hidden\n * @beta */\nexport type PartialDocumentNode = {\n  id?: string\n  title?: string\n  child?: Child\n  views?: (View | ViewBuilder)[]\n  options?: Partial<DocumentOptions>\n}\n\n/**\n * @hidden\n * @beta */\nexport class DocumentBuilder implements Serializable<DocumentNode> {\n  protected spec: PartialDocumentNode\n\n  constructor(protected _context: StructureContext, spec?: PartialDocumentNode) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): DocumentBuilder {\n    return this.clone({id})\n  }\n\n  getId(): PartialDocumentNode['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): DocumentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): PartialDocumentNode['title'] {\n    return this.spec.title\n  }\n\n  child(child: Child): DocumentBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): PartialDocumentNode['child'] {\n    return this.spec.child\n  }\n\n  documentId(documentId: string): DocumentBuilder {\n    // Let's try to be a bit helpful and assign an ID from document ID if none is specified\n    const paneId = this.spec.id || documentId\n    return this.clone({\n      id: paneId,\n      options: {\n        ...(this.spec.options || {}),\n        id: documentId,\n      },\n    })\n  }\n\n  getDocumentId(): Partial<DocumentOptions>['id'] {\n    return this.spec.options?.id\n  }\n\n  schemaType(documentType: SchemaType | string): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        type: typeof documentType === 'string' ? documentType : documentType.name,\n      },\n    })\n  }\n\n  getSchemaType(): Partial<DocumentOptions>['type'] {\n    return this.spec.options?.type\n  }\n\n  initialValueTemplate(templateId: string, parameters?: Record<string, unknown>): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        template: templateId,\n        templateParameters: parameters,\n      },\n    })\n  }\n\n  getInitialValueTemplate(): Partial<DocumentOptions>['template'] {\n    return this.spec.options?.template\n  }\n\n  getInitialValueTemplateParameters(): Partial<DocumentOptions>['templateParameters'] {\n    return this.spec.options?.templateParameters\n  }\n\n  views(views: (View | ViewBuilder)[]): DocumentBuilder {\n    return this.clone({views})\n  }\n\n  getViews(): (View | ViewBuilder)[] {\n    return this.spec.views || []\n  }\n\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): DocumentNode {\n    const urlId = path[index || path.length - 1]\n\n    // Try to grab document ID / editor ID from URL if not defined\n    const id = this.spec.id || (urlId && `${urlId}`) || ''\n    const options: Partial<DocumentOptions> = {\n      id,\n      type: undefined,\n      template: undefined,\n      templateParameters: undefined,\n      ...this.spec.options,\n    }\n\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for document nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options || !options.id) {\n      throw new SerializeError(\n        'document id (`id`) is required for document nodes',\n        path,\n        id,\n        hint\n      ).withHelpUrl(HELP_URL.DOCUMENT_ID_REQUIRED)\n    }\n\n    if (!options || !options.type) {\n      throw new SerializeError(\n        'document type (`schemaType`) is required for document nodes',\n        path,\n        id,\n        hint\n      )\n    }\n\n    const views = (this.spec.views && this.spec.views.length > 0 ? this.spec.views : [form()]).map(\n      (item, i) => maybeSerializeView(item, i, path)\n    )\n\n    const viewIds = views.map((view) => view.id)\n    const dupes = uniq(viewIds.filter((viewId, i) => viewIds.includes(viewId, i + 1)))\n    if (dupes.length > 0) {\n      throw new SerializeError(\n        `document node has views with duplicate IDs: ${dupes.join(',  ')}`,\n        path,\n        id,\n        hint\n      )\n    }\n\n    return {\n      ...this.spec,\n      child: this.spec.child || createDocumentChildResolver(this._context),\n      id: validateId(id, path, index),\n      type: 'document',\n      options: getDocumentOptions(options),\n      views,\n    }\n  }\n\n  clone(withSpec: PartialDocumentNode = {}): DocumentBuilder {\n    const builder = new DocumentBuilder(this._context)\n    const options = {...(this.spec.options || {}), ...(withSpec.options || {})}\n    builder.spec = {...this.spec, ...withSpec, options}\n    return builder\n  }\n}\n\nfunction getDocumentOptions(spec: Partial<DocumentOptions>): DocumentOptions {\n  const opts: DocumentOptions = {\n    id: spec.id || '',\n    type: spec.type || '*',\n  }\n\n  if (spec.template) {\n    opts.template = spec.template\n  }\n\n  if (spec.templateParameters) {\n    opts.templateParameters = spec.templateParameters\n  }\n\n  return opts\n}\n\n/** @internal */\nexport function documentFromEditor(context: StructureContext, spec?: EditorNode): DocumentBuilder {\n  let doc = spec?.type\n    ? // Use user-defined document fragment as base if possible\n      context.resolveDocumentNode({schemaType: spec.type})\n    : // Fall back to plain old document builder\n      new DocumentBuilder(context)\n\n  if (!spec) return doc\n\n  const {id, type, template, templateParameters} = spec.options\n  doc = doc.id(spec.id).documentId(id)\n\n  if (type) {\n    doc = doc.schemaType(type)\n  }\n  if (template) {\n    doc = doc.initialValueTemplate(template, templateParameters)\n  }\n  if (spec.child) {\n    doc = doc.child(spec.child)\n  }\n\n  return doc\n}\n\n/** @internal */\nexport function documentFromEditorWithInitialValue(\n  {resolveDocumentNode, templates}: StructureContext,\n  templateId: string,\n  parameters?: Record<string, unknown>\n): DocumentBuilder {\n  const template = templates.find((t) => t.id === templateId)\n\n  if (!template) {\n    throw new Error(`Template with ID \"${templateId}\" not defined`)\n  }\n\n  return resolveDocumentNode({schemaType: template.schemaType}).initialValueTemplate(\n    templateId,\n    parameters\n  )\n}\n","export const layoutOptions = ['default', 'card', 'media', 'detail', 'block']\n","import {PartialDocumentList, getTypeNamesFromFilter} from './DocumentList'\nimport {StructureNode} from './StructureNodes'\n\n/**\n * @hidden\n * @beta */\nexport type IntentJsonParams = {[key: string]: any}\n\n/**\n * @hidden\n * @beta */\nexport type BaseIntentParams = {\n  type?: string\n  id?: string\n  template?: string\n}\n\n/** @internal */\nexport const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent')\n\n/**\n * @hidden\n * @beta */\nexport type IntentParams = BaseIntentParams | [BaseIntentParams, IntentJsonParams]\n\n/**\n * @hidden\n * @beta */\n// TODO: intents should be unified somewhere\nexport interface Intent {\n  type: string\n  params?: IntentParams\n}\n\n/**\n * @hidden\n * @beta */\nexport interface IntentChecker {\n  (\n    intentName: string,\n    params: {[key: string]: any},\n    context: {pane: StructureNode; index: number}\n  ): boolean\n  identity?: symbol\n}\n\n/** @internal */\nexport const defaultIntentChecker: IntentChecker = (intentName, params, {pane}): boolean => {\n  const isEdit = intentName === 'edit'\n  const isCreate = intentName === 'create'\n  const typedSpec = pane as PartialDocumentList\n  const paneFilter = typedSpec.options?.filter || ''\n  const paneParams = typedSpec.options?.params || {}\n  const typeNames = typedSpec.schemaTypeName\n    ? [typedSpec.schemaTypeName]\n    : getTypeNamesFromFilter(paneFilter, paneParams)\n\n  const initialValueTemplates = typedSpec.initialValueTemplates || []\n\n  if (isCreate && params.template) {\n    return initialValueTemplates.some((tpl) => tpl.templateId === params.template)\n  }\n\n  return (\n    (isEdit && params.id && typeNames.includes(params.type)) ||\n    (isCreate && typeNames.includes(params.type))\n  )\n}\n\ndefaultIntentChecker.identity = DEFAULT_INTENT_HANDLER\n","import {pickBy} from 'lodash'\nimport {ComposeIcon} from '@sanity/icons'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {Serializable, SerializeOptions, SerializePath} from './StructureNodes'\nimport {MenuItemBuilder, MenuItem} from './MenuItem'\nimport {IntentParams} from './Intent'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\n/**\n * @hidden\n * @beta */\nexport class InitialValueTemplateItemBuilder implements Serializable<InitialValueTemplateItem> {\n  protected spec: Partial<InitialValueTemplateItem>\n\n  constructor(protected _context: StructureContext, spec?: Partial<InitialValueTemplateItem>) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): InitialValueTemplateItemBuilder {\n    return this.clone({id})\n  }\n\n  getId(): Partial<InitialValueTemplateItem>['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): InitialValueTemplateItemBuilder {\n    return this.clone({title})\n  }\n\n  getTitle(): Partial<InitialValueTemplateItem>['title'] {\n    return this.spec.title\n  }\n\n  description(description: string): InitialValueTemplateItemBuilder {\n    return this.clone({description})\n  }\n\n  getDescription(): Partial<InitialValueTemplateItem>['description'] {\n    return this.spec.description\n  }\n\n  templateId(templateId: string): InitialValueTemplateItemBuilder {\n    // Let's try to be a bit helpful and assign an ID from template ID if none is specified\n    const paneId = this.spec.id || templateId\n    return this.clone({\n      id: paneId,\n      templateId,\n    })\n  }\n\n  getTemplateId(): Partial<InitialValueTemplateItem>['templateId'] {\n    return this.spec.templateId\n  }\n\n  parameters(parameters: {[key: string]: any}): InitialValueTemplateItemBuilder {\n    return this.clone({parameters})\n  }\n\n  getParameters(): Partial<InitialValueTemplateItem>['parameters'] {\n    return this.spec.parameters\n  }\n\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): InitialValueTemplateItem {\n    const {spec, _context} = this\n    const {templates} = _context\n\n    if (typeof spec.id !== 'string' || !spec.id) {\n      throw new SerializeError(\n        '`id` is required for initial value template item nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!spec.templateId) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const template = templates.find((t) => t.id === spec.templateId)\n\n    if (!template) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: spec.id,\n      templateId: spec.id,\n      schemaType: template.schemaType,\n      type: 'initialValueTemplateItem',\n      description: spec.description || template.description,\n      title: spec.title || template.title,\n      subtitle: spec.subtitle,\n      icon: spec.icon || template.icon,\n      initialDocumentId: spec.initialDocumentId,\n      parameters: spec.parameters,\n    }\n  }\n\n  clone(withSpec: Partial<InitialValueTemplateItem> = {}): InitialValueTemplateItemBuilder {\n    const builder = new InitialValueTemplateItemBuilder(this._context)\n    builder.spec = {...this.spec, ...withSpec}\n    return builder\n  }\n}\n\n/** @internal */\nexport function defaultInitialValueTemplateItems(\n  context: StructureContext\n): InitialValueTemplateItemBuilder[] {\n  const {schema, getStructureBuilder, templates} = context\n\n  // Sort templates by their schema type, in order or definition\n  const typeNames = schema.getTypeNames()\n  const ordered = templates\n    // Don't list templates that require parameters\n    // TODO: this should use the new-document template items instead maybe?\n    .filter((tpl) => !tpl.parameters?.length)\n    .sort((a, b) => typeNames.indexOf(a.schemaType) - typeNames.indexOf(b.schemaType))\n\n  // Create actual template items out of the templates\n  return ordered.map((tpl) => getStructureBuilder().initialValueTemplateItem(tpl.id))\n}\n\n/** @internal */\nexport function maybeSerializeInitialValueTemplateItem(\n  item: InitialValueTemplateItem | InitialValueTemplateItemBuilder,\n  index: number,\n  path: SerializePath\n): InitialValueTemplateItem {\n  return item instanceof InitialValueTemplateItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @internal */\nexport function menuItemsFromInitialValueTemplateItems(\n  context: StructureContext,\n  templateItems: InitialValueTemplateItem[]\n): MenuItem[] {\n  const {schema, templates} = context\n  return templateItems.map((item) => {\n    const template = templates.find((t) => t.id === item.templateId)\n    const title = item.title || template?.title || 'Create new'\n    const params = pickBy(\n      {type: template && template.schemaType, template: item.templateId},\n      Boolean\n    )\n    const intentParams: IntentParams = item.parameters ? [params, item.parameters] : params\n    const schemaType = template && schema.get(template.schemaType)\n\n    return new MenuItemBuilder(context)\n      .title(title)\n      .icon((template && template.icon) || schemaType?.icon || ComposeIcon)\n      .intent({type: 'create', params: intentParams})\n      .serialize()\n  })\n}\n","import {Child, Serializable, SerializeOptions, StructureNode} from './StructureNodes'\nimport {layoutOptions} from './Layout'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {IntentChecker, defaultIntentChecker} from './Intent'\nimport {SerializeError} from './SerializeError'\nimport {\n  InitialValueTemplateItemBuilder,\n  maybeSerializeInitialValueTemplateItem,\n} from './InitialValueTemplateItem'\nimport {validateId} from './util/validateId'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {PreviewLayoutKey, InitialValueTemplateItem} from 'sanity'\n\nfunction noChildResolver() {\n  return undefined\n}\n\n/** @internal */\nexport const shallowIntentChecker: IntentChecker = (intentName, params, {pane, index}): boolean => {\n  return index <= 1 && defaultIntentChecker(intentName, params, {pane, index})\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ListDisplayOptions {\n  showIcons?: boolean\n}\n\n/**\n * @hidden\n * @beta */\nexport interface BaseGenericList extends StructureNode {\n  defaultLayout?: PreviewLayoutKey\n  canHandleIntent?: IntentChecker\n  displayOptions?: ListDisplayOptions\n  child: Child\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n}\n\n/**\n * @hidden\n * @beta */\n// \"POJO\"/verbatim-version - end result\nexport interface GenericList extends BaseGenericList {\n  type: string\n  menuItems: MenuItem[]\n  menuItemGroups: MenuItemGroup[]\n}\n\n/**\n * @hidden\n * @beta */\n// Used internally in builder classes to make everything optional\nexport interface BuildableGenericList extends Partial<BaseGenericList> {\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * @hidden\n * @beta */\n// Input version, allows builders and only requires things not inferrable\nexport interface GenericListInput extends StructureNode {\n  id: string\n  title: string\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n  defaultLayout?: PreviewLayoutKey\n  canHandleIntent?: IntentChecker\n  child?: Child\n}\n\n/**\n * @hidden\n * @beta */\nexport abstract class GenericListBuilder<TList extends BuildableGenericList, ConcreteImpl>\n  implements Serializable<GenericList>\n{\n  protected initialValueTemplatesSpecified = false\n  protected spec: TList = {} as TList\n\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  getId(): TList['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): TList['title'] {\n    return this.spec.title\n  }\n\n  defaultLayout(defaultLayout: PreviewLayoutKey): ConcreteImpl {\n    return this.clone({defaultLayout})\n  }\n\n  getDefaultLayout(): TList['defaultLayout'] {\n    return this.spec.defaultLayout\n  }\n\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[] | undefined): ConcreteImpl {\n    return this.clone({menuItems})\n  }\n\n  getMenuItems(): TList['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ConcreteImpl {\n    return this.clone({menuItemGroups})\n  }\n\n  getMenuItemGroups(): TList['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  child(child: Child): ConcreteImpl {\n    return this.clone({child})\n  }\n\n  getChild(): TList['child'] {\n    return this.spec.child\n  }\n\n  canHandleIntent(canHandleIntent: IntentChecker): ConcreteImpl {\n    return this.clone({canHandleIntent})\n  }\n\n  getCanHandleIntent(): TList['canHandleIntent'] {\n    return this.spec.canHandleIntent\n  }\n\n  showIcons(enabled = true): ConcreteImpl {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcons: enabled},\n    })\n  }\n\n  getShowIcons(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcons : undefined\n  }\n\n  initialValueTemplates(\n    templates:\n      | InitialValueTemplateItem\n      | InitialValueTemplateItemBuilder\n      | Array<InitialValueTemplateItem | InitialValueTemplateItemBuilder>\n  ): ConcreteImpl {\n    this.initialValueTemplatesSpecified = true\n    return this.clone({initialValueTemplates: Array.isArray(templates) ? templates : [templates]})\n  }\n\n  getInitialValueTemplates(): TList['initialValueTemplates'] {\n    return this.spec.initialValueTemplates\n  }\n\n  serialize(options: SerializeOptions = {path: []}): GenericList {\n    const id = this.spec.id || ''\n    const path = options.path\n\n    const defaultLayout = this.spec.defaultLayout\n    if (defaultLayout && !layoutOptions.includes(defaultLayout)) {\n      throw new SerializeError(\n        `\\`layout\\` must be one of ${layoutOptions.map((item) => `\"${item}\"`).join(', ')}`,\n        path,\n        id || options.index,\n        this.spec.title\n      )\n    }\n\n    const initialValueTemplates = (this.spec.initialValueTemplates || []).map((item, i) =>\n      maybeSerializeInitialValueTemplateItem(item, i, path)\n    )\n\n    return {\n      id: validateId(id, options.path, id || options.index),\n      title: this.spec.title,\n      type: 'genericList',\n      defaultLayout,\n      child: this.spec.child || noChildResolver,\n      canHandleIntent: this.spec.canHandleIntent || shallowIntentChecker,\n      displayOptions: this.spec.displayOptions,\n      initialValueTemplates,\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, path)\n      ),\n    }\n  }\n\n  abstract clone(_withSpec?: object): ConcreteImpl\n}\n","import {SchemaType, SortOrderingItem} from '@sanity/types'\nimport {ComposeIcon} from '@sanity/icons'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {SerializeOptions, Child} from './StructureNodes'\nimport {ChildResolver, ChildResolverOptions, ItemChild} from './ChildResolver'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n} from './GenericList'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\nconst validateFilter = (spec: PartialDocumentList, options: SerializeOptions) => {\n  const filter = spec.options?.filter.trim() || ''\n\n  if (['*', '{'].includes(filter[0])) {\n    throw new SerializeError(\n      `\\`filter\\` cannot start with \\`${filter[0]}\\` - looks like you are providing a query, not a filter`,\n      options.path,\n      spec.id,\n      spec.title\n    ).withHelpUrl(HELP_URL.QUERY_PROVIDED_FOR_FILTER)\n  }\n\n  return filter\n}\n\nconst createDocumentChildResolverForItem =\n  (context: StructureContext): ChildResolver =>\n  (itemId: string, options: ChildResolverOptions): ItemChild | Promise<ItemChild> | undefined => {\n    const parentItem = options.parent as DocumentList\n    const template = options.params?.template\n      ? context.templates.find((tpl) => tpl.id === options.params.template)\n      : undefined\n    const type = template\n      ? template.schemaType\n      : parentItem.schemaTypeName || resolveTypeForDocument(context.getClient, itemId)\n\n    return Promise.resolve(type).then((schemaType) =>\n      schemaType\n        ? context.resolveDocumentNode({schemaType, documentId: itemId})\n        : new DocumentBuilder(context).id('editor').documentId(itemId).schemaType('')\n    )\n  }\n\n/**\n * @hidden\n * @beta */\nexport interface PartialDocumentList extends BuildableGenericList {\n  options?: DocumentListOptions\n  schemaTypeName?: string\n}\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentListInput extends GenericListInput {\n  options: DocumentListOptions\n}\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentList extends GenericList {\n  type: 'documentList'\n  options: DocumentListOptions\n  child: Child\n  schemaTypeName?: string\n}\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentListOptions {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n  defaultOrdering?: SortOrderingItem[]\n}\n\n/**\n * @hidden\n * @beta */\nexport class DocumentListBuilder extends GenericListBuilder<\n  PartialDocumentList,\n  DocumentListBuilder\n> {\n  protected spec: PartialDocumentList\n\n  constructor(protected _context: StructureContext, spec?: DocumentListInput) {\n    super()\n    this.spec = spec || {}\n    this.initialValueTemplatesSpecified = Boolean(spec?.initialValueTemplates)\n  }\n\n  apiVersion(apiVersion: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {filter: ''}), apiVersion}})\n  }\n\n  getApiVersion(): string | undefined {\n    return this.spec.options?.apiVersion\n  }\n\n  filter(filter: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {}), filter}})\n  }\n\n  getFilter(): string | undefined {\n    return this.spec.options?.filter\n  }\n\n  schemaType(type: SchemaType | string): DocumentListBuilder {\n    const schemaTypeName = typeof type === 'string' ? type : type.name\n    return this.clone({schemaTypeName})\n  }\n\n  getSchemaType(): string | undefined {\n    return this.spec.schemaTypeName\n  }\n\n  params(params: Record<string, unknown>): DocumentListBuilder {\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), params},\n    })\n  }\n\n  getParams(): Record<string, unknown> | undefined {\n    return this.spec.options?.params\n  }\n\n  defaultOrdering(ordering: SortOrderingItem[]): DocumentListBuilder {\n    if (!Array.isArray(ordering)) {\n      throw new Error('`defaultOrdering` must be an array of order clauses')\n    }\n\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), defaultOrdering: ordering},\n    })\n  }\n\n  getDefaultOrdering(): SortOrderingItem[] | undefined {\n    return this.spec.options?.defaultOrdering\n  }\n\n  serialize(options: SerializeOptions = {path: []}): DocumentList {\n    if (typeof this.spec.id !== 'string' || !this.spec.id) {\n      throw new SerializeError(\n        '`id` is required for document lists',\n        options.path,\n        options.index,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!this.spec.options || !this.spec.options.filter) {\n      throw new SerializeError(\n        '`filter` is required for document lists',\n        options.path,\n        this.spec.id,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.FILTER_REQUIRED)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'documentList',\n      schemaTypeName: this.spec.schemaTypeName,\n      child: this.spec.child || createDocumentChildResolverForItem(this._context),\n      options: {\n        ...this.spec.options,\n        apiVersion:\n          this.spec.options.apiVersion ||\n          // If this is a simple type filter, use modern API version - otherwise default to v1\n          (this.spec.options?.filter === '_type == $type' ? '2021-06-07' : '1'),\n        filter: validateFilter(this.spec, options),\n      },\n    }\n  }\n\n  clone(withSpec?: PartialDocumentList): DocumentListBuilder {\n    const builder = new DocumentListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n\n    if (!this.initialValueTemplatesSpecified) {\n      builder.spec.initialValueTemplates = inferInitialValueTemplates(this._context, builder.spec)\n    }\n\n    if (!builder.spec.schemaTypeName) {\n      builder.spec.schemaTypeName = inferTypeName(builder.spec)\n    }\n\n    return builder\n  }\n\n  getSpec(): PartialDocumentList {\n    return this.spec\n  }\n}\n\nfunction inferInitialValueTemplates(\n  context: StructureContext,\n  spec: PartialDocumentList\n): InitialValueTemplateItem[] | undefined {\n  const {document} = context\n  const {schemaTypeName, options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = schemaTypeName\n    ? [schemaTypeName]\n    : Array.from(new Set(getTypeNamesFromFilter(filter, params)))\n\n  if (typeNames.length === 0) {\n    return undefined\n  }\n\n  return typeNames\n    .flatMap((schemaType) =>\n      document.resolveNewDocumentOptions({\n        type: 'structure',\n        schemaType,\n      })\n    )\n    .map((option) => ({...option, icon: ComposeIcon}))\n}\n\nfunction inferTypeName(spec: PartialDocumentList): string | undefined {\n  const {options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = getTypeNamesFromFilter(filter, params)\n  return typeNames.length === 1 ? typeNames[0] : undefined\n}\n\n/** @internal */\nexport function getTypeNamesFromFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  let typeNames = getTypeNamesFromEqualityFilter(filter, params)\n\n  if (typeNames.length === 0) {\n    typeNames = getTypeNamesFromInTypesFilter(filter, params)\n  }\n\n  return typeNames\n}\n\n// From _type == \"movie\" || _type == $otherType\nfunction getTypeNamesFromEqualityFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern =\n    /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type/g\n  const matches: string[] = []\n  let match\n  while ((match = pattern.exec(filter)) !== null) {\n    matches.push(match[1] || match[2])\n  }\n\n  return matches\n    .map((candidate) => {\n      const typeName = candidate[0] === '$' ? params[candidate.slice(1)] : candidate\n      const normalized = ((typeName as string) || '').trim().replace(/^[\"']|[\"']$/g, '')\n      return normalized\n    })\n    .filter(Boolean)\n}\n\n// From _type in [\"dog\", \"cat\", $otherSpecies]\nfunction getTypeNamesFromInTypesFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern = /\\b_type\\s+in\\s+\\[(.*?)\\]/\n  const matches = filter.match(pattern)\n  if (!matches) {\n    return []\n  }\n\n  return matches[1]\n    .split(/,\\s*/)\n    .map((match) => match.trim().replace(/^[\"']+|[\"']+$/g, ''))\n    .map((item) => (item[0] === '$' ? params[item.slice(1)] : item))\n    .filter(Boolean) as string[]\n}\n","import {find} from 'lodash'\nimport {SerializePath, SerializeOptions, Divider} from './StructureNodes'\nimport {ChildResolverOptions, ChildResolver} from './ChildResolver'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListItem, ListItemBuilder} from './ListItem'\nimport {IntentChecker} from './Intent'\nimport {isDocumentListItem} from './DocumentListItem'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n  shallowIntentChecker,\n} from './GenericList'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\nconst getArgType = (thing: ListItem) => {\n  if (thing instanceof ListBuilder) {\n    return 'ListBuilder'\n  }\n\n  if (isPromise<ListItem>(thing)) {\n    return 'Promise'\n  }\n\n  return Array.isArray(thing) ? 'array' : typeof thing\n}\n\nconst isListItem = (item: ListItem | Divider): item is ListItem => {\n  return item.type === 'listItem'\n}\n\nconst defaultCanHandleIntent: IntentChecker = (intentName: string, params, context) => {\n  const pane = context.pane as List\n  const items = pane.items || []\n  return (\n    items\n      .filter(isDocumentListItem)\n      .some((item) => item.schemaType.name === params.type && item._id === params.id) ||\n    shallowIntentChecker(intentName, params, context)\n  )\n}\n\nconst resolveChildForItem: ChildResolver = (itemId: string, options: ChildResolverOptions) => {\n  const parentItem = options.parent as List\n  const items = parentItem.items.filter(isListItem)\n  const target = (items.find((item) => item.id === itemId) || {child: undefined}).child\n\n  if (!target || typeof target !== 'function') {\n    return target\n  }\n\n  return typeof target === 'function' ? target(itemId, options) : target\n}\n\nfunction maybeSerializeListItem(\n  item: ListItem | ListItemBuilder | Divider,\n  index: number,\n  path: SerializePath\n): ListItem | Divider {\n  if (item instanceof ListItemBuilder) {\n    return item.serialize({path, index})\n  }\n\n  const listItem = item as ListItem\n  if (listItem && listItem.type === 'divider') {\n    return item as Divider\n  }\n\n  if (!listItem || listItem.type !== 'listItem') {\n    const gotWhat = (listItem && listItem.type) || getArgType(listItem)\n    const helpText = gotWhat === 'array' ? ' - did you forget to spread (...moreItems)?' : ''\n    throw new SerializeError(\n      `List items must be of type \"listItem\", got \"${gotWhat}\"${helpText}`,\n      path,\n      index\n    ).withHelpUrl(HELP_URL.INVALID_LIST_ITEM)\n  }\n\n  return item\n}\n\nfunction isPromise<T>(thing: unknown): thing is PromiseLike<T> {\n  return isRecord(thing) && typeof thing.then === 'function'\n}\n\n/**\n * @hidden\n * @beta */\nexport interface List extends GenericList {\n  type: 'list'\n  items: (ListItem | Divider)[]\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ListInput extends GenericListInput {\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * @hidden\n * @beta */\nexport interface BuildableList extends BuildableGenericList {\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * @hidden\n * @beta */\nexport class ListBuilder extends GenericListBuilder<BuildableList, ListBuilder> {\n  protected spec: BuildableList\n\n  constructor(protected _context: StructureContext, spec?: ListInput) {\n    super()\n    this.spec = spec ? spec : {}\n    this.initialValueTemplatesSpecified = Boolean(spec && spec.initialValueTemplates)\n  }\n\n  items(items: (ListItemBuilder | ListItem | Divider)[]): ListBuilder {\n    return this.clone({items})\n  }\n\n  getItems(): BuildableList['items'] {\n    return this.spec.items\n  }\n\n  serialize(options: SerializeOptions = {path: []}): List {\n    const id = this.spec.id\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for lists',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const items = typeof this.spec.items === 'undefined' ? [] : this.spec.items\n    if (!Array.isArray(items)) {\n      throw new SerializeError(\n        '`items` must be an array of items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEMS_MUST_BE_ARRAY)\n    }\n\n    const path = (options.path || []).concat(id)\n    const serializedItems = items.map((item, index) => maybeSerializeListItem(item, index, path))\n    const dupes = serializedItems.filter((val, i) => find(serializedItems, {id: val.id}, i + 1))\n\n    if (dupes.length > 0) {\n      const dupeIds = dupes.map((item) => item.id).slice(0, 5)\n      const dupeDesc = dupes.length > 5 ? `${dupeIds.join(', ')}...` : dupeIds.join(', ')\n      throw new SerializeError(\n        `List items with same ID found (${dupeDesc})`,\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEM_IDS_MUST_BE_UNIQUE)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'list',\n      canHandleIntent: this.spec.canHandleIntent || defaultCanHandleIntent,\n      child: this.spec.child || resolveChildForItem,\n      items: serializedItems,\n    }\n  }\n\n  clone(withSpec?: BuildableList): ListBuilder {\n    const builder = new ListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {Observable} from 'rxjs'\nimport {SerializeOptions, Serializable, Collection, CollectionBuilder} from './StructureNodes'\nimport {ChildResolver, ItemChild} from './ChildResolver'\nimport {DocumentListBuilder} from './DocumentList'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListBuilder} from './List'\nimport {DocumentBuilder} from './Document'\nimport {ComponentBuilder} from './Component'\nimport {validateId} from './util/validateId'\nimport {StructureContext} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/**\n * @hidden\n * @beta */\nexport type UnserializedListItemChild =\n  | Collection\n  | CollectionBuilder\n  | ChildResolver\n  | Observable<ItemChild>\n\n/**\n * @hidden\n * @beta */\nexport type ListItemChild = Collection | ChildResolver | Observable<ItemChild> | undefined\n\n/**\n * @hidden\n * @beta */\nexport interface ListItemSerializeOptions extends SerializeOptions {\n  titleIsOptional?: boolean\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ListItemDisplayOptions {\n  showIcon?: boolean\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ListItemInput {\n  id: string\n  title?: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: ListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType | string\n}\n\n/**\n * @hidden\n * @beta */\nexport interface ListItem {\n  id: string\n  type: string\n  title?: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: ListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType\n}\n\n/**\n * @hidden\n * @beta */\nexport interface UnserializedListItem {\n  id: string\n  title: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: UnserializedListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType | string\n}\n\n/**\n * @hidden\n * @beta */\nexport type PartialListItem = Partial<UnserializedListItem>\n\n/**\n * @hidden\n * @beta */\nexport class ListItemBuilder implements Serializable<ListItem> {\n  protected spec: PartialListItem\n\n  constructor(protected _context: StructureContext, spec?: ListItemInput) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): ListItemBuilder {\n    return this.clone({id})\n  }\n\n  getId(): PartialListItem['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ListItemBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): PartialListItem['title'] {\n    return this.spec.title\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): ListItemBuilder {\n    return this.clone({icon})\n  }\n\n  showIcon(enabled = true): ListItemBuilder {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcon: enabled},\n    })\n  }\n\n  getShowIcon(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcon : undefined\n  }\n\n  getIcon(): PartialListItem['icon'] {\n    return this.spec.icon\n  }\n\n  child(child: UnserializedListItemChild): ListItemBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): PartialListItem['child'] {\n    return this.spec.child\n  }\n\n  schemaType(schemaType: SchemaType | string): ListItemBuilder {\n    return this.clone({schemaType})\n  }\n\n  getSchemaType(): PartialListItem['schemaType'] {\n    const schemaType = this.spec.schemaType\n\n    if (typeof schemaType === 'string') {\n      return this._context.schema.get(schemaType)\n    }\n\n    return this.spec.schemaType\n  }\n\n  serialize(options: ListItemSerializeOptions = {path: []}): ListItem {\n    const {id, title, child} = this.spec\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options.titleIsOptional && (typeof title !== 'string' || !title)) {\n      throw new SerializeError('`title` is required for list items', options.path, id).withHelpUrl(\n        HELP_URL.TITLE_REQUIRED\n      )\n    }\n\n    let schemaType = this.spec.schemaType\n    if (typeof schemaType === 'string') {\n      const type = this._context.schema.get(schemaType)\n      if (!type) {\n        throw new SerializeError(\n          `Could not find type \"${schemaType}\" in schema`,\n          options.path,\n          id\n        ).withHelpUrl(HELP_URL.SCHEMA_TYPE_NOT_FOUND)\n      }\n\n      schemaType = type\n    }\n\n    const serializeOptions = {path: options.path.concat(id), hint: 'child'}\n    let listChild =\n      child instanceof ComponentBuilder ||\n      child instanceof DocumentListBuilder ||\n      child instanceof DocumentBuilder ||\n      child instanceof ListBuilder\n        ? child.serialize(serializeOptions)\n        : child\n\n    // In the case of a function, create a bound version that will pass the correct serialize\n    // context, so we may lazily resolve it at some point in the future without losing context\n    if (typeof listChild === 'function') {\n      const originalChild = listChild\n      listChild = (itemId, childOptions) => {\n        return originalChild(itemId, {...childOptions, serializeOptions})\n      }\n    }\n\n    return {\n      ...this.spec,\n      id: validateId(id, options.path, options.index),\n      schemaType,\n      child: listChild,\n      title,\n      type: 'listItem',\n    }\n  }\n\n  clone(withSpec?: PartialListItem): ListItemBuilder {\n    const builder = new ListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {SerializeOptions} from './StructureNodes'\nimport {ListItemBuilder, ListItem, UnserializedListItem, ListItemInput} from './ListItem'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentListItemInput extends ListItemInput {\n  schemaType: SchemaType | string\n}\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentListItem extends ListItem {\n  schemaType: SchemaType\n  _id: string\n}\n\n/**\n * @hidden\n * @beta */\nexport type PartialDocumentListItem = Partial<UnserializedListItem>\n\nconst createDefaultChildResolver =\n  (context: StructureContext, spec: PartialDocumentListItem) => (documentId: string) => {\n    const schemaType =\n      spec.schemaType &&\n      (typeof spec.schemaType === 'string' ? spec.schemaType : spec.schemaType.name)\n\n    return schemaType\n      ? context.resolveDocumentNode({schemaType, documentId})\n      : new DocumentBuilder(context).id('documentEditor').documentId(documentId)\n  }\n\n/**\n * @hidden\n * @beta */\nexport class DocumentListItemBuilder extends ListItemBuilder {\n  protected spec: PartialDocumentListItem\n\n  constructor(protected _context: StructureContext, spec?: DocumentListItemInput) {\n    super(_context, spec)\n    this.spec = spec ? spec : {}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): DocumentListItem {\n    const spec = super.serialize({...options, titleIsOptional: true})\n\n    if (!spec.schemaType) {\n      throw new SerializeError(\n        '`schemaType` is required for document list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.SCHEMA_TYPE_REQUIRED)\n    }\n\n    const child = spec.child || createDefaultChildResolver(this._context, spec)\n    return {...spec, child, schemaType: spec.schemaType, _id: spec.id}\n  }\n\n  clone(withSpec?: PartialDocumentListItem): DocumentListItemBuilder {\n    const builder = new DocumentListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport function isDocumentListItem(item: unknown): item is DocumentListItem {\n  return isRecord(item) && typeof item.schemaType !== 'undefined' && typeof item._id === 'string'\n}\n","import {SchemaType} from '@sanity/types'\nimport {DocumentListBuilder, DocumentListInput, PartialDocumentList} from './DocumentList'\nimport {Child} from './StructureNodes'\nimport {DEFAULT_INTENT_HANDLER} from './Intent'\nimport {GenericListInput} from './GenericList'\nimport {StructureContext} from './types'\n\n/**\n * @hidden\n * @beta */\nexport interface DocumentTypeListInput extends Partial<GenericListInput> {\n  schemaType: SchemaType | string\n}\n\n/**\n * @hidden\n * @beta */\nexport class DocumentTypeListBuilder extends DocumentListBuilder {\n  protected spec: PartialDocumentList\n\n  constructor(protected _context: StructureContext, spec?: DocumentListInput) {\n    super(_context)\n    this.spec = spec ? spec : {}\n  }\n\n  child(child: Child): DocumentTypeListBuilder {\n    return this.cloneWithoutDefaultIntentHandler({child})\n  }\n\n  clone(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    builder.spec = {...this.spec, ...parent.getSpec(), ...(withSpec || {})}\n    return builder\n  }\n\n  cloneWithoutDefaultIntentHandler(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    const canHandleIntent = this.spec.canHandleIntent\n    const shouldOverride = canHandleIntent && canHandleIntent.identity === DEFAULT_INTENT_HANDLER\n    const override = shouldOverride ? {canHandleIntent: undefined} : {}\n    builder.spec = {\n      ...parent.getSpec(),\n      ...this.spec,\n      ...(withSpec || {}),\n      ...override,\n    }\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {startCase} from 'lodash'\nimport {StackCompactIcon, StackIcon} from '@sanity/icons'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType} from './MenuItem'\nimport {DEFAULT_SELECTED_ORDERING_OPTION} from './Sort'\nimport {DocumentListBuilder} from './DocumentList'\nimport {ListItemBuilder, ListItem} from './ListItem'\nimport {DocumentTypeListBuilder, DocumentTypeListInput} from './DocumentTypeList'\nimport {defaultIntentChecker} from './Intent'\nimport {List} from './List'\nimport {Collection} from './StructureNodes'\nimport {StructureContext} from './types'\n\nfunction shouldShowIcon(schemaType: SchemaType): boolean {\n  const preview = schemaType.preview\n  return Boolean(preview && (preview.prepare || (preview.select && preview.select.media)))\n}\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\nfunction isBundledDocType(typeName: string) {\n  return BUNDLED_DOC_TYPES.includes(typeName)\n}\n\nfunction isDocumentType(schemaType: SchemaType) {\n  return schemaType.type?.name === 'document'\n}\n\nfunction isList(collection: Collection): collection is List {\n  return collection.type === 'list'\n}\n\nexport function getDocumentTypes({schema}: StructureContext): string[] {\n  return schema\n    .getTypeNames()\n    .filter((n) => {\n      const schemaType = schema.get(n)\n      return schemaType && isDocumentType(schemaType)\n    })\n    .filter((n) => !isBundledDocType(n))\n}\n\nexport function getDocumentTypeListItems(context: StructureContext): ListItemBuilder[] {\n  const types = getDocumentTypes(context)\n  return types.map((typeName) => getDocumentTypeListItem(context, typeName))\n}\n\nexport function getDocumentTypeListItem(\n  context: StructureContext,\n  typeName: string\n): ListItemBuilder {\n  const {schema} = context\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new ListItemBuilder(context)\n    .id(typeName)\n    .title(title)\n    .schemaType(type)\n    .child((id, childContext) => {\n      const parent = childContext.parent as Collection\n      const parentItem = isList(parent)\n        ? (parent.items.find((item) => item.id === id) as ListItem)\n        : null\n\n      let list = getDocumentTypeList(context, typeName)\n      if (parentItem && parentItem.title) {\n        list = list.title(parentItem.title)\n      }\n\n      return list\n    })\n}\n\nexport function getDocumentTypeList(\n  context: StructureContext,\n  typeNameOrSpec: string | DocumentTypeListInput\n): DocumentListBuilder {\n  const {schema, resolveDocumentNode} = context\n\n  const schemaType = typeof typeNameOrSpec === 'string' ? typeNameOrSpec : typeNameOrSpec.schemaType\n  const typeName = typeof schemaType === 'string' ? schemaType : schemaType.name\n  const spec: DocumentTypeListInput =\n    typeof typeNameOrSpec === 'string' ? {schemaType} : typeNameOrSpec\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n  const showIcons = shouldShowIcon(type)\n\n  return new DocumentTypeListBuilder(context)\n    .id(spec.id || typeName)\n    .title(spec.title || title)\n    .filter('_type == $type')\n    .params({type: typeName})\n    .schemaType(type)\n    .showIcons(showIcons)\n    .defaultOrdering(DEFAULT_SELECTED_ORDERING_OPTION.by)\n    .menuItemGroups(\n      spec.menuItemGroups || [\n        {id: 'sorting', title: 'Sort'},\n        {id: 'layout', title: 'Layout'},\n        {id: 'actions', title: 'Actions'},\n      ]\n    )\n    .child(\n      spec.child ||\n        ((documentId: string) => resolveDocumentNode({schemaType: typeName, documentId}))\n    )\n    .canHandleIntent(spec.canHandleIntent || defaultIntentChecker)\n    .menuItems(\n      spec.menuItems || [\n        // Create new (from action button) will be added in serialization step of GenericList\n\n        // Sort by <Y>\n        ...getOrderingMenuItemsForSchemaType(context, type),\n\n        // Display as <Z>\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Compact view')\n          .icon(StackCompactIcon)\n          .action('setLayout')\n          .params({layout: 'default'}),\n\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Detailed view')\n          .icon(StackIcon)\n          .action('setLayout')\n          .params({layout: 'detail'}),\n\n        // Create new (from menu) will be added in serialization step of GenericList\n      ]\n    )\n}\n","import {uniqueId} from 'lodash'\nimport type {SchemaType} from '@sanity/types'\nimport {isValidElementType} from 'react-is'\nimport {ListBuilder} from './List'\nimport {\n  getDocumentTypeListItems,\n  getDocumentTypeListItem,\n  getDocumentTypeList,\n} from './documentTypeListItems'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType, getOrderingMenuItem} from './MenuItem'\nimport {ListItemBuilder} from './ListItem'\nimport {MenuItemGroupBuilder} from './MenuItemGroup'\nimport {DocumentListBuilder} from './DocumentList'\nimport type {Divider} from './StructureNodes'\nimport {DocumentBuilder, documentFromEditor, documentFromEditorWithInitialValue} from './Document'\nimport {ComponentInput, ComponentBuilder} from './Component'\nimport {DocumentListItemBuilder} from './DocumentListItem'\nimport * as views from './views'\nimport {\n  InitialValueTemplateItemBuilder,\n  defaultInitialValueTemplateItems,\n  menuItemsFromInitialValueTemplateItems,\n} from './InitialValueTemplateItem'\nimport type {\n  StructureBuilder,\n  UserComponent,\n  StructureContext,\n  DefaultDocumentNodeResolver,\n} from './types'\nimport {Source, getConfigContextFromSource, getPublishedId} from 'sanity'\n\n/** @internal */\nexport interface StructureBuilderOptions {\n  source: Source\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n}\n\nfunction hasIcon(schemaType?: SchemaType | string): boolean {\n  if (!schemaType || typeof schemaType === 'string') {\n    return false\n  }\n\n  return Boolean(schemaType.icon)\n}\n\nfunction getDefaultStructure(context: StructureContext): ListBuilder {\n  const items = getDocumentTypeListItems(context)\n  return new ListBuilder(context)\n    .id('__root__')\n    .title('Content')\n    .items(items)\n    .showIcons(items.some((item) => hasIcon(item.getSchemaType())))\n}\n\n/** @internal */\nexport function createStructureBuilder({\n  defaultDocumentNode,\n  source,\n}: StructureBuilderOptions): StructureBuilder {\n  const configContext = getConfigContextFromSource(source)\n  const context: StructureContext = {\n    ...source,\n    getStructureBuilder: () => structureBuilder,\n    resolveDocumentNode: (options) => {\n      let builder =\n        defaultDocumentNode?.(structureBuilder, {...options, ...configContext}) ||\n        new DocumentBuilder(context)\n\n      if (!builder.getId()) {\n        builder = builder.id('documentEditor')\n      }\n\n      if (options.documentId) {\n        builder = builder.documentId(getPublishedId(options.documentId))\n      }\n\n      return builder.schemaType(options.schemaType)\n    },\n  }\n\n  const structureBuilder: StructureBuilder = {\n    defaults: () => getDefaultStructure(context),\n    documentTypeList: (...args) => getDocumentTypeList(context, ...args),\n    documentTypeListItem: (...args) => getDocumentTypeListItem(context, ...args),\n    documentTypeListItems: (...args) => getDocumentTypeListItems(context, ...args),\n    document: (...args) => new DocumentBuilder(context, ...args),\n    documentWithInitialValueTemplate: (...args) =>\n      documentFromEditorWithInitialValue(context, ...args),\n    defaultDocument: context.resolveDocumentNode,\n\n    list: (...args) => new ListBuilder(context, ...args),\n    listItem: (...args) => new ListItemBuilder(context, ...args),\n\n    menuItem: (...args) => new MenuItemBuilder(context, ...args),\n    menuItemGroup: (...args) => new MenuItemGroupBuilder(context, ...args),\n    menuItemsFromInitialValueTemplateItems: (...args) =>\n      menuItemsFromInitialValueTemplateItems(context, ...args),\n\n    documentList: (...args) => new DocumentListBuilder(context, ...args),\n    documentListItem: (...args) => new DocumentListItemBuilder(context, ...args),\n\n    orderingMenuItem: (...args) => getOrderingMenuItem(context, ...args),\n    orderingMenuItemsForType: (...args) => getOrderingMenuItemsForSchemaType(context, ...args),\n\n    editor: (...args) => documentFromEditor(context, ...args),\n\n    defaultInitialValueTemplateItems: (...args) =>\n      defaultInitialValueTemplateItems(context, ...args),\n\n    initialValueTemplateItem: (\n      templateId: string,\n      parameters?: Record<string, unknown>\n    ): InitialValueTemplateItemBuilder =>\n      new InitialValueTemplateItemBuilder(context, {\n        id: templateId,\n        parameters,\n        templateId,\n      }),\n\n    component: (spec?: ComponentInput | UserComponent) => {\n      return isValidElementType(spec)\n        ? new ComponentBuilder().component(spec as UserComponent)\n        : new ComponentBuilder(spec as ComponentInput)\n    },\n\n    divider: (): Divider => ({id: uniqueId('__divider__'), type: 'divider'}),\n\n    view: views,\n    context,\n  }\n\n  return structureBuilder\n}\n","import React, {useMemo, useState} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {createStructureBuilder, DefaultDocumentNodeResolver} from './structureBuilder'\nimport {StructureResolver, UnresolvedPaneNode} from './types'\nimport {useConfigContextFromSource, useDocumentStore, useSource} from 'sanity'\n\n/** @internal */\nexport interface DeskToolProviderProps {\n  structure?: StructureResolver\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n  children: React.ReactNode\n}\n\n/** @internal */\nexport function DeskToolProvider({\n  defaultDocumentNode,\n  structure: resolveStructure,\n  children,\n}: DeskToolProviderProps): React.ReactElement {\n  const [layoutCollapsed, setLayoutCollapsed] = useState(false)\n  const source = useSource()\n  const configContext = useConfigContextFromSource(source)\n  const documentStore = useDocumentStore()\n\n  const S = useMemo(() => {\n    return createStructureBuilder({\n      defaultDocumentNode,\n      source,\n    })\n  }, [defaultDocumentNode, source])\n\n  const rootPaneNode = useMemo(() => {\n    // TODO: unify types and remove cast\n    if (resolveStructure)\n      return resolveStructure(S, {\n        ...configContext,\n        documentStore,\n      }) as UnresolvedPaneNode\n    return S.defaults() as UnresolvedPaneNode\n  }, [S, resolveStructure, configContext, documentStore])\n\n  return (\n    <DeskToolContext.Provider\n      value={useMemo(() => {\n        return {\n          features: {\n            backButton: layoutCollapsed,\n            reviewChanges: !layoutCollapsed,\n            splitPanes: !layoutCollapsed,\n            splitViews: !layoutCollapsed,\n          },\n          layoutCollapsed,\n          setLayoutCollapsed,\n          rootPaneNode,\n          structureContext: S.context,\n        }\n      }, [layoutCollapsed, rootPaneNode, S.context])}\n    >\n      {children}\n    </DeskToolContext.Provider>\n  )\n}\n"],"names":["DocTitle","props","document","documentValue","schema","useSchema","schemaType","get","_type","error","value","useValuePreview","children","jsxs","Fragment","message","jsx","title","style","color","TimeAgo","_ref","time","timeAgo","useTimeAgo","isClientError","e","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","pipe","startWith","map","visibilityState","distinctUntilChanged","switchMap","visible","timer","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","documentId","_ref2","versionedClient","draftId","getDraftId","publishedId","getPublishedId","requestOptions","uri","getDataUrl","concat","json","query","excludeContent","tag","observable","request","_ref3","omitted","nonExistant","filter","doc","reason","length","some","id","fetchCrossDatasetReferences","context","checkDocumentId","of","totalCount","references","currentDataset","config","dataset","url","catchError","statusCode","useInternalReferences","createHookFromObservableFactory","_ref4","documentStore","referencesClause","totalClause","fetchQuery","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","_ref5","useReferringDocuments","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","useDocumentStore","internalReferences","isInternalReferencesLoading","useMemo","crossDatasetReferences","isCrossDatasetReferencesLoading","projectIds","Array","from","Set","crossDatasetReference","projectId","Boolean","sort","datasetNames","datasetName","hasUnknownDatasetNames","isLoading","PublishedStatus","updatedAt","_updatedAt","Tooltip","portal","content","Box","padding","Text","size","TextWithTone","tone","dimmed","muted","PublishIcon","DraftStatus","EditIcon","PaneItemPreview","icon","layout","presence","isRecord","isValidElement","isString","isNumber","draft","published","useMemoObservable","getPreviewStateObservable","documentPreviewStore","_id","status","Inline","space","DocumentPreviewPresence","SanityDefaultPreview","getPreviewValueWithFallback","isPlaceholder","missingContext","Error","PaneRouterContext","createContext","index","groupIndex","siblingIndex","payload","params","hasGroupSiblings","groupLength","routerPanesState","BackLink","ChildLink","ReferenceChildLink","handleEditReference","ParameterizedLink","replaceCurrent","closeCurrent","duplicateCurrent","setView","setParams","setPayload","navigateIntent","forwardRef","ref","useContext","panes","slice","state","StateLink","childId","childPayload","childParameters","rest","documentType","parentRefPath","template","type","pathToString","currentPanes","nextParams","useUnique","nextPayload","nextState","currentGroup","currentSibling","nextSibling","nextGroup","nextPanes","usePaneRouter","EMPTY_ARRAY","ReferencePreviewLink","onClick","documentPresence","useDocumentPresence","useDocumentPreviewStore","Link","useCallback","LinkComponent","linkProps","name","PreviewCard","__unstable_focusRing","as","radius","ChevronWrapper","styled","_templateObject","_taggedTemplateLiteral","CrossDatasetReferencesDetails","details","_templateObject2","CrossDatasetReferencesSummary","summary","_templateObject3","TableContainer","attrs","paddingX","paddingBottom","_templateObject4","Table","table","_templateObject5","_ref7","theme","rem","sanity","_ref8","_ref9","DocumentIdFlex","Flex","_templateObject6","ReferencesCard","Card","shadow","marginBottom","flex","_templateObject7","OtherReferenceCount","difference","placement","Container","width","InfoOutlineIcon","ConfirmDeleteDialogBody","_ref10","documentTitle","action","onReferenceLinkClick","toast","useToast","renderPreviewItem","item","UnknownIcon","subtitle","documentCount","toLocaleString","normalizedDatasetNames","datasetsCount","datasetNameList","join","WarningOutlineIcon","marginLeft","direction","height","Stack","overflow","borderTop","align","marginRight","DocumentsIcon","textOverflow","ChevronDownIcon","Label","reference","_ref11","gap","justify","CopyToClipboard","text","onCopy","push","Button","mode","ClipboardIcon","fontSize","DialogBody","_templateObject8","LoadingContainer","_templateObject9","ConfirmDeleteDialog","_ref12","onCancel","onConfirm","dialogId","useId","capitalizedAction","substring","toUpperCase","showConfirmButton","Dialog","header","footer","Grid","columns","paddingY","onClose","onClickOutside","Spinner","marginTop","ConfirmDeleteDialogContainer","setError","useState","handleRetry","ErrorBoundary","onCatch","CONTEXT_MENU_POPOVER_PROPS","constrainSize","PaneContextMenuButton","items","itemGroups","onAction","groups","defaultGroup","groupMap","reduce","acc","group","Object","values","g","MenuButton","button","EllipsisVerticalIcon","menu","Menu","MenuDivider","paddingTop","itemIndex","PaneContextMenuItem","popover","handleClick","hotkeys","shortcut","split","IntentButtonOrActionButton","linkRef","intent","IntentLink","MenuItem","pressed","selected","displayName","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","PaneContext","PaneLayoutContext","usePaneLayout","pane","Root","Layer","_templateObject10","PaneDivider","_ref13","disabled","element","resize","dragging","setDragging","handleMouseDown","event","preventDefault","startX","pageX","handleMouseMove","deltaX","handleMouseUp","window","removeEventListener","addEventListener","onMouseDown","_templateObject11","Pane","_a","_b","_c","currentMinWidth","currentMinWidthProp","currentMaxWidth","currentMaxWidthProp","flexProp","minWidth","minWidthProp","maxWidth","maxWidthProp","restProps","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","find","p","paneIndex","indexOf","nextPane","isLast","nextCollapsed","forwardedRef","useForwardedRef","setRef","refValue","current","useEffect","handleCollapse","handleExpand","contextValue","hidden","divider","LegacyLayerProvider","zOffset","Infinity","Provider","BoundaryElementProvider","usePane","_templateObject12","PaneContent","forwardedAs","_templateObject13","RootCard","_templateObject14","PaneFooter","_templateObject15","Layout","_templateObject16","TitleCard","_ref14","fg","bg","card","enabled","css","_templateObject17","TitleTextSkeleton","TextSkeleton","_templateObject18","TitleText","_templateObject19","TabsBox","_ref15","_templateObject20","rgba","base","PaneHeader","actions","backButton","contentAfter","loading","subActions","tabs","tabIndex","paneElement","paneRect","useElementRect","layoutStyle","innerHeight","handleTitleClick","handleLayoutClick","LayerProvider","sizing","paddingLeft","animated","weight","_templateObject21","IntentButton","Link2","role","InsufficientPermissionsMessageTooltip","_ref16","reveal","currentUser","useCurrentUser","InsufficientPermissionsMessage","POPOVER_PROPS","getIntent","templates","typeName","t","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","_ref17","templateItems","useTemplates","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","nothingGranted","every","permission","granted","permissionsById","ComposeIcon","firstItem","permissions","emptyArray","emptyObject","isNonNullable","hashObject","sortObject","v","isArray","entries","_ref18","_ref19","keyA","keyB","localeCompare","normalize","JSON","parse","stringify","PaneHeaderActions","memo","_ref20","initialValueTemplateItems","initialValueTemplateItemsFromStructure","menuItems","menuItemGroups","actionHandlers","handleAction","console","warn","handler","actionMenuItems","contextMenuItems","nonCreateMenuItem","partition","showAsAction","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","templateParams","_ref21","initialValueTemplateItem","description","combinedInitialValueTemplates","uniqBy","actionItem","actionIndex","DISABLED_REASON_TITLE","NOTHING_TO_DELETE","DeleteAction","_ref22","onComplete","delete","deleteOp","useDocumentOperation","isDeleting","setIsDeleting","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","execute","handle","isPermissionsLoading","useDocumentPairPermissions","TrashIcon","label","operationLabel","onHandle","dialog","component","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","_ref23","liveEdit","discardChanges","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","_ref24","duplicate","useRouter","isDuplicating","setDuplicating","dupeId","uuid","CopyIcon","HistoryRestoreAction","_ref25","revision","restore","isRevisionInitialVersion","isRevisionLatestVersion","RestoreIcon","DocumentPaneContext","useDocumentPane","documentPane","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","NOT_READY","getDisabledReason","publishedAt","PublishAction","publishState","setPublishState","publish","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","onHistoryOpen","editState","useEditState","_rev","hasValidationErrors","validation","isValidationErrorMarker","publishScheduled","setPublishScheduled","isSyncing","isValidating","hasDraft","doPublish","validationComplete","didPublish","delay","setTimeout","clearTimeout","transactionSyncLock","CheckmarkIcon","UnpublishAction","_ref26","unpublish","UnpublishIcon","LiveEditBadge","_DEBUG","EMPTY_PARAMS","LOADING_PANE","Symbol","DOCUMENT_PANEL_PORTAL_ELEMENT","activePanes","setActivePanes","getIntentState","routerState","editDocumentId","isTemplate","i","canHandleIntent","call","schemaTypeName","options","paneParams","legacyEditParamsToState","decodeURIComponent","err","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","router","route","create","intents","path","transform","panePattern","isParam","str","test","isPayload","exclusiveParams","isTruthy","parseChunks","chunks","initial","chunk","key","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","btoa","encodedParams","entry","valueFromFirstSibling","includes","_ref27","flat","parseOldPanesSegment","restOfSiblings","segment","sibling","omit","buffer","match","payloadChunk","tryParsePayload","data","atob","documentActions","documentBadges","deskTool","definePlugin","prevActions","badges","prevBadges","badge","tools","MasterDetailIcon","lazy","DeskToolContext","SerializeError","constructor","parentPath","hint","withHelpUrl","helpId","HELP_URL","IMPLICIT_FIELDS","joinReferences","head","tail","schemaField","fields","field","refTypes","to","refType","tailFields","tailWrapper","getExtendedProjection","orderBy","ordering","ORDER_BY_UPDATED_AT","by","ORDER_BY_CREATED_AT","DEFAULT_SELECTED_ORDERING_OPTION","DEFAULT_ORDERING_OPTIONS","maybeSerializeMenuItem","MenuItemBuilder","serialize","_context","spec","clone","getAction","getTitle","getGroup","getIcon","getParams","getShowAsAction","arguments","undefined","TITLE_REQUIRED","ACTION_OR_INTENT_REQUIRED","ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE","withSpec","builder","getOrderingMenuItem","extendedProjection","SortIcon","getOrderingMenuItemsForSchemaType","orderings","maybeSerializeMenuItemGroup","MenuItemGroupBuilder","_title","getId","ID_REQUIRED","disallowedPattern","validateId","disallowedChar","startsWith","getStructureNodeId","camelCased","camelCase","getSlug","ComponentBuilder","child","getChild","getComponent","getOptions","getMenuItems","getMenuItemGroups","componentOptions","resolveTypeForDocument","getClient","types","GenericViewBuilder","kebabCase","isSerializable","view","maybeSerializeView","isComponentSpec","ComponentViewBuilder","componentOrSpec","userComponent","COMPONENT_REQUIRED","FormViewBuilder","form","createDocumentChildResolver","_ref28","resolveDocumentNode","itemId","_ref29","currentSegment","DocumentBuilder","paneId","getDocumentId","getSchemaType","initialValueTemplate","templateParameters","getInitialValueTemplate","getInitialValueTemplateParameters","views","getViews","urlId","DOCUMENT_ID_REQUIRED","viewIds","dupes","uniq","viewId","getDocumentOptions","opts","documentFromEditor","documentFromEditorWithInitialValue","_ref30","layoutOptions","DEFAULT_INTENT_HANDLER","defaultIntentChecker","intentName","_ref31","isEdit","isCreate","typedSpec","paneFilter","typeNames","getTypeNamesFromFilter","initialValueTemplates","tpl","identity","InitialValueTemplateItemBuilder","getDescription","getTemplateId","getParameters","defaultInitialValueTemplateItems","getStructureBuilder","getTypeNames","ordered","a","b","maybeSerializeInitialValueTemplateItem","menuItemsFromInitialValueTemplateItems","pickBy","noChildResolver","shallowIntentChecker","_ref32","GenericListBuilder","initialValueTemplatesSpecified","defaultLayout","getDefaultLayout","getCanHandleIntent","showIcons","displayOptions","getShowIcons","getInitialValueTemplates","validateFilter","trim","QUERY_PROVIDED_FOR_FILTER","createDocumentChildResolverForItem","parentItem","parent","Promise","resolve","then","DocumentListBuilder","apiVersion","getApiVersion","getFilter","defaultOrdering","getDefaultOrdering","FILTER_REQUIRED","inferInitialValueTemplates","inferTypeName","getSpec","flatMap","resolveNewDocumentOptions","option","getTypeNamesFromEqualityFilter","getTypeNamesFromInTypesFilter","pattern","matches","exec","candidate","normalized","replace","getArgType","thing","ListBuilder","isPromise","isListItem","defaultCanHandleIntent","isDocumentListItem","resolveChildForItem","target","maybeSerializeListItem","ListItemBuilder","listItem","gotWhat","helpText","INVALID_LIST_ITEM","getItems","LIST_ITEMS_MUST_BE_ARRAY","serializedItems","val","dupeIds","dupeDesc","LIST_ITEM_IDS_MUST_BE_UNIQUE","showIcon","getShowIcon","titleIsOptional","SCHEMA_TYPE_NOT_FOUND","serializeOptions","listChild","originalChild","childOptions","createDefaultChildResolver","DocumentListItemBuilder","SCHEMA_TYPE_REQUIRED","DocumentTypeListBuilder","cloneWithoutDefaultIntentHandler","shouldOverride","override","shouldShowIcon","preview","prepare","select","media","BUNDLED_DOC_TYPES","isBundledDocType","isDocumentType","isList","collection","getDocumentTypes","_ref33","n","getDocumentTypeListItems","getDocumentTypeListItem","startCase","childContext","list","getDocumentTypeList","typeNameOrSpec","StackCompactIcon","StackIcon","hasIcon","getDefaultStructure","createStructureBuilder","_ref34","defaultDocumentNode","source","configContext","getConfigContextFromSource","structureBuilder","defaults","documentTypeList","_len","args","_key","documentTypeListItem","_len2","_key2","documentTypeListItems","_len3","_key3","_len4","_key4","documentWithInitialValueTemplate","_len5","_key5","defaultDocument","_len6","_key6","_len7","_key7","menuItem","_len8","_key8","menuItemGroup","_len9","_key9","_len10","_key10","documentList","_len11","_key11","documentListItem","_len12","_key12","orderingMenuItem","_len13","_key13","orderingMenuItemsForType","_len14","_key14","editor","_len15","_key15","_len16","_key16","isValidElementType","uniqueId","DeskToolProvider","_ref35","structure","resolveStructure","setLayoutCollapsed","useSource","useConfigContextFromSource","S","rootPaneNode","features","reviewChanges","splitPanes","splitViews","structureContext"],"mappings":"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"}