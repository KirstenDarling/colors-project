{"version":3,"file":"index-37eb7c2e.js","sources":["../../src/desk/components/Delay.tsx","../../src/desk/components/RenderActionCollectionState.tsx","../../src/desk/components/RenderBadgeCollectionState.tsx","../../src/desk/components/paneRouter/PaneRouterProvider.tsx","../../src/desk/components/pane/helpers/_calcPaneResize.ts","../../src/desk/components/pane/helpers/_getDOMPath.ts","../../src/desk/components/pane/helpers/_sortElements.ts","../../src/desk/components/pane/paneLayoutController.ts","../../src/desk/components/pane/PaneLayout.tsx","../../src/desk/structureResolvers/PaneResolutionError.ts","../../src/desk/structureResolvers/assignId.ts","../../src/desk/structureResolvers/memoBind.ts","../../src/desk/structureResolvers/createPaneResolver.ts","../../src/desk/structureResolvers/resolveIntent.ts","../../src/desk/useDeskTool.ts","../../src/desk/structureResolvers/createResolvedPaneNodeStream.ts","../../src/desk/structureResolvers/useResolvedPanes.ts","../../src/desk/components/deskTool/intentResolver/utils.ts","../../src/desk/components/deskTool/intentResolver/IntentResolver.tsx","../../src/desk/components/deskTool/StructureError.tsx","../../src/desk/panes/unknown/UnknownPaneType.tsx","../../src/desk/panes/loading/getWaitMessages.ts","../../src/desk/panes/loading/LoadingPane.tsx","../../src/desk/panes/DeskToolPane.tsx","../../src/desk/panes/error/ErrorPane.tsx","../../src/desk/panes/document/DocumentOperationResults.tsx","../../src/desk/panes/document/menuItems.ts","../../src/desk/panes/document/usePreviewUrl.ts","../../src/desk/panes/document/getInitialValueTemplateOpts.ts","../../src/desk/panes/document/DocumentPaneProvider.tsx","../../src/desk/panes/document/timeline/constants.ts","../../src/desk/panes/document/timeline/helpers.ts","../../src/desk/panes/document/timeline/userAvatarStack.tsx","../../src/desk/panes/document/timeline/timelineItem.styled.tsx","../../src/desk/panes/document/timeline/timelineItem.tsx","../../src/desk/panes/document/timeline/timeline.styled.tsx","../../src/desk/panes/document/timeline/timeline.tsx","../../src/desk/panes/document/changesPanel/content/TimelineError.tsx","../../src/desk/panes/document/timeline/timelineMenu.tsx","../../src/desk/panes/document/changesPanel/content/LoadingContent.tsx","../../src/desk/panes/document/changesPanel/helpers.ts","../../src/desk/panes/document/changesPanel/ChangesPanel.tsx","../../src/desk/useDeskToolSetting.ts","../../src/desk/panes/document/inspectDialog/constants.ts","../../src/desk/panes/document/inspectDialog/helpers.ts","../../src/desk/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/desk/panes/document/inspectDialog/Search.tsx","../../src/desk/panes/document/inspectDialog/InspectDialog.tsx","../../src/desk/panes/document/documentPanel/ReferenceChangedBanner.tsx","../../src/desk/panes/document/documentPanel/PermissionCheckBanner.tsx","../../src/desk/panes/document/documentPanel/documentViews/useConditionalToast.ts","../../src/desk/panes/document/documentPanel/documentViews/FormView.tsx","../../src/desk/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/desk/panes/document/documentPanel/header/ValidationMenu.tsx","../../src/desk/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/desk/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/desk/panes/document/documentPanel/DocumentPanel.tsx","../../src/desk/panes/document/statusBar/dialogs/constants.ts","../../src/desk/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/desk/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/desk/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/desk/panes/document/statusBar/ActionStateDialog.tsx","../../src/desk/panes/document/statusBar/ActionMenuButton.tsx","../../src/desk/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/desk/panes/document/statusBar/sparkline/DocumentBadges.tsx","../../src/desk/panes/document/statusBar/sparkline/PublishStatus.tsx","../../src/desk/panes/document/statusBar/sparkline/ReviewChangesButton/AnimatedStatusIcon.tsx","../../src/desk/panes/document/statusBar/sparkline/ReviewChangesButton/ReviewChangesButton.tsx","../../src/desk/panes/document/statusBar/sparkline/DocumentSparkline.tsx","../../src/desk/panes/document/statusBar/DocumentStatusBar.tsx","../../src/desk/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/desk/panes/document/DocumentPane.tsx","../../src/desk/components/deskTool/NoDocumentTypesScreen.tsx","../../src/desk/components/deskTool/DeskTool.tsx","../../src/desk/components/deskTool/DeskToolBoundary.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.ReactElement | (() => React.ReactElement)\n  ms?: number\n}): React.ReactElement {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","import React from 'react'\nimport {\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: DocumentActionProps\n  children: (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderActionCollectionState = (props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete} = props\n\n  return (\n    <GetHookCollectionState onReset={onActionComplete} hooks={actions} args={actionProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n","import React from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = (props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps, ...rest} = props\n\n  return (\n    <GetHookCollectionState {...rest} hooks={badges} args={badgeProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n","import {omit} from 'lodash'\nimport React, {useCallback, useMemo} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {RouterPaneGroup, RouterPanes, RouterPaneSibling} from '../../types'\nimport {ChildLink} from './ChildLink'\nimport {BackLink} from './BackLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {PaneRouterContextValue} from './types'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: React.ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent} = useRouter()\n  const routerState = useRouterState()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes]\n  )\n\n  const groupIndex = index - 1\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...(routerState || {}), panes: nextPanes}\n\n      setTimeout(() => navigate(nextRouterState), 0)\n\n      return nextRouterState\n    },\n    [groupIndex, navigate, routerPaneGroups, routerState, siblingIndex]\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex]\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex]\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {template: template.id, parentRefPath: pathToString(parentRefPath), type},\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups]\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      BackLink,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings\n        )\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      handleEditReference,\n      modifyCurrentGroup,\n      navigateIntent,\n      params,\n      payload,\n      routerPaneGroups,\n      setParams,\n      setPayload,\n      siblingIndex,\n    ]\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {PaneConfigOpts, PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {PaneConfigOpts, PaneData, PaneResizeCache, PaneResizeData} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  // eslint-disable-next-line complexity\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {CardProps, useElementRect} from '@sanity/ui'\nimport React, {useMemo, useState, useEffect} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, PaneLayoutState} from './paneLayoutController'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const controller = useMemo(() => createPaneLayoutController(), [])\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing]\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","import {RouterPaneSiblingContext} from '../types'\n\nexport interface PaneResolutionErrorOptions {\n  message: string\n  context?: RouterPaneSiblingContext\n  helpId?: string\n  cause?: Error\n}\n\n/**\n * An error thrown during pane resolving. This error is meant to be bubbled up\n * through react and handled in an error boundary. It includes a `cause`\n * property which is the original error caught\n */\nexport class PaneResolutionError extends Error {\n  cause: Error | undefined\n  context: RouterPaneSiblingContext | undefined\n  helpId: string | undefined\n\n  constructor({message, context, helpId, cause}: PaneResolutionErrorOptions) {\n    super(message)\n    this.context = context\n    this.helpId = helpId\n    this.cause = cause\n  }\n}\n","import {nanoid} from 'nanoid'\n\n// `WeakMap`s require the first type param to extend `object`\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst randomIdCache = new WeakMap<object, string>()\n\n/**\n * given an object, this function randomly generates an ID and returns it. this\n * result is then saved in a WeakMap so subsequent requests for the same object\n * will receive the same ID\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function assignId(obj: object): string {\n  const cachedValue = randomIdCache.get(obj)\n  if (cachedValue) return cachedValue\n\n  const id = nanoid()\n  randomIdCache.set(obj, id)\n  return id\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n\n// `WeakMap`s require the first type param to extend `object`\nconst bindCache = new WeakMap<object, Map<string, Function>>()\n\n/**\n * An alternative to `obj.method.bind(obj)` that utilizes a weakmap to return\n * the same memory reference for sequent binds.\n */\nexport function memoBind<\n  T extends object,\n  K extends keyof {[P in keyof T]: T[P] extends Function ? T[P] : never}\n>(obj: T, methodKey: K): T[K]\nexport function memoBind(obj: Record<string, unknown>, methodKey: string): Function {\n  const boundMethods = bindCache.get(obj) || new Map<string, Function>()\n  if (boundMethods) {\n    const bound = boundMethods.get(methodKey)\n    if (bound) return bound\n  }\n\n  const method = obj[methodKey]\n\n  if (typeof method !== 'function') {\n    throw new Error(\n      `Expected property \\`${methodKey}\\` to be a function but got ${typeof method} instead.`\n    )\n  }\n\n  const bound = method.bind(obj)\n  boundMethods.set(methodKey, bound)\n  bindCache.set(obj, boundMethods)\n\n  return bound\n}\n","import {from, isObservable, Observable, of as observableOf, Subscribable} from 'rxjs'\n\nimport {publishReplay, refCount, switchMap} from 'rxjs/operators'\n\nimport {PaneNode, RouterPaneSiblingContext, UnresolvedPaneNode} from '../types'\nimport {PaneResolutionError} from './PaneResolutionError'\nimport {isRecord} from 'sanity'\n\ninterface Serializable {\n  serialize: (...args: never[]) => unknown\n}\n\nconst isPromise = (thing: any): thing is PromiseLike<unknown> => {\n  return !!thing && typeof thing?.then === 'function'\n}\nconst isSerializable = (thing: unknown): thing is Serializable => {\n  if (!isRecord(thing)) return false\n  return typeof thing.serialize === 'function'\n}\n\n/**\n * The signature of the function used to take an `UnresolvedPaneNode` and turn\n * it into an `Observable<PaneNode>`.\n */\nexport type PaneResolver = (\n  unresolvedPane: UnresolvedPaneNode | undefined,\n  context: RouterPaneSiblingContext,\n  flatIndex: number\n) => Observable<PaneNode>\n\nexport type PaneResolverMiddleware = (paneResolveFn: PaneResolver) => PaneResolver\n\nconst rethrowWithPaneResolutionErrors: PaneResolverMiddleware =\n  (next) => (unresolvedPane, context, flatIndex) => {\n    try {\n      return next(unresolvedPane, context, flatIndex)\n    } catch (e) {\n      // re-throw errors that are already `PaneResolutionError`s\n      if (e instanceof PaneResolutionError) {\n        throw e\n      }\n\n      // anything else, wrap with `PaneResolutionError` and set the underlying\n      // error as a the `cause`\n      throw new PaneResolutionError({\n        message: typeof e?.message === 'string' ? e.message : '',\n        context,\n        cause: e,\n      })\n    }\n  }\n\nconst wrapWithPublishReplay: PaneResolverMiddleware =\n  (next) =>\n  (...args) => {\n    return next(...args).pipe(\n      // need to add publishReplay + refCount to ensure new subscribers always\n      // get an emission. without this, memoized observables may get stuck\n      // waiting for their first emissions resulting in a loading pane\n      publishReplay(1),\n      refCount()\n    )\n  }\n\nexport function createPaneResolver(middleware: PaneResolverMiddleware): PaneResolver {\n  // note: this API includes a middleware/wrapper function because the function\n  // is recursive. we want to call the wrapped version of the function always\n  // (even inside of nested calls) so the identifier invoked for the recursion\n  // should be the wrapped version\n  const resolvePane = rethrowWithPaneResolutionErrors(\n    wrapWithPublishReplay(\n      middleware((unresolvedPane, context, flatIndex) => {\n        if (!unresolvedPane) {\n          throw new PaneResolutionError({\n            message: 'Pane returned no child',\n            context,\n            helpId: 'structure-item-returned-no-child',\n          })\n        }\n\n        if (isPromise(unresolvedPane) || isObservable(unresolvedPane)) {\n          return from(unresolvedPane).pipe(\n            switchMap((result) => resolvePane(result, context, flatIndex))\n          )\n        }\n\n        if (isSerializable(unresolvedPane)) {\n          return resolvePane(unresolvedPane.serialize(context), context, flatIndex)\n        }\n\n        if (typeof unresolvedPane === 'function') {\n          return resolvePane(unresolvedPane(context.id, context), context, flatIndex)\n        }\n\n        return observableOf(unresolvedPane)\n      })\n    )\n  )\n\n  return resolvePane\n}\n","import {omit} from 'lodash'\nimport {firstValueFrom, Observable} from 'rxjs'\nimport {PaneNode, RouterPanes, RouterPaneSiblingContext, UnresolvedPaneNode} from '../types'\nimport {StructureContext} from '../structureBuilder'\nimport {assignId} from './assignId'\nimport {memoBind} from './memoBind'\nimport {createPaneResolver, PaneResolverMiddleware} from './createPaneResolver'\n\ninterface TraverseOptions {\n  unresolvedPane: UnresolvedPaneNode | undefined\n  intent: string\n  params: {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n  parent: PaneNode | null\n  path: string[]\n  currentId: string\n  flatIndex: number\n  levelIndex: number\n  structureContext: StructureContext\n}\n\nexport interface ResolveIntentOptions {\n  rootPaneNode?: UnresolvedPaneNode\n  intent: string\n  params: {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n  structureContext: StructureContext\n}\n\n/**\n * Resolves an intent request using breadth first search. If a match is not\n * found, the intent will resolve to the fallback editor.\n *\n * A match is found if:\n * 1. the `PaneNode` is of type `document` and the its ID matches the intent ID\n * 2. the `PaneNode` is of type `documentList` and the `schemaTypeName` matches\n * 3. the `PaneNode`'s `canHandleIntent` method returns true\n *\n * If a `PaneNode` of type `list` is found, it will be searched for a match.\n *\n * @see PaneNode\n */\nexport async function resolveIntent(options: ResolveIntentOptions): Promise<RouterPanes> {\n  const resolvedPaneCache = new Map<string, Observable<PaneNode>>()\n\n  // this is a simple version of the memoizer in `createResolvedPaneNodeStream`\n  const memoize: PaneResolverMiddleware = (nextFn) => (unresolvedPane, context, flatIndex) => {\n    const key = unresolvedPane && `${assignId(unresolvedPane)}-${context.path.join('__')}`\n    const cachedResolvedPane = key && resolvedPaneCache.get(key)\n    if (cachedResolvedPane) return cachedResolvedPane\n\n    const result = nextFn(unresolvedPane, context, flatIndex)\n    if (key) resolvedPaneCache.set(key, result)\n    return result\n  }\n\n  const resolvePane = createPaneResolver(memoize)\n\n  const fallbackEditorPanes: RouterPanes = [\n    [\n      {\n        id: `__edit__${options.params.id}`,\n        params: {...omit(options.params, ['id']), type: options.params.type},\n        payload: options.payload,\n      },\n    ],\n  ]\n\n  async function traverse({\n    currentId,\n    flatIndex,\n    intent,\n    params,\n    parent,\n    path,\n    payload,\n    unresolvedPane,\n    levelIndex,\n    structureContext,\n  }: TraverseOptions): Promise<\n    Array<{panes: RouterPanes; depthIndex: number; levelIndex: number}>\n  > {\n    if (!unresolvedPane) return []\n\n    const {id: targetId, type: schemaTypeName, ...otherParams} = params\n    const context: RouterPaneSiblingContext = {\n      id: currentId,\n      splitIndex: 0,\n      parent,\n      path,\n      index: flatIndex,\n      params: {},\n      payload: undefined,\n      structureContext,\n    }\n    const resolvedPane = await firstValueFrom(resolvePane(unresolvedPane, context, flatIndex))\n\n    // if the resolved pane is a document pane and the pane's ID matches then\n    // resolve the intent to the current path\n    if (resolvedPane.type === 'document' && resolvedPane.id === targetId) {\n      return [\n        {\n          panes: [\n            ...path.slice(0, path.length - 1).map((i) => [{id: i}]),\n            [{id: targetId, params: otherParams, payload}],\n          ],\n          depthIndex: path.length,\n          levelIndex,\n        },\n      ]\n    }\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `getIntentState.ts`\n    if (\n      // if the resolve pane's `canHandleIntent` returns true, then resolve\n      resolvedPane.canHandleIntent?.(intent, params, {\n        pane: resolvedPane,\n        index: flatIndex,\n      }) ||\n      // if the pane's `canHandleIntent` did not return true, then match against\n      // this default case. we will resolve the intent if:\n      (resolvedPane.type === 'documentList' &&\n        // 1. the schema type matches (this required for the document to render)\n        resolvedPane.schemaTypeName === schemaTypeName &&\n        // 2. the filter is the default filter.\n        //\n        // NOTE: this case is to prevent false positive matches where the user\n        // has configured a more specific filter for a particular type. In that\n        // case, the user can implement their own `canHandleIntent` function\n        resolvedPane.options.filter === '_type == $type')\n    ) {\n      return [\n        {\n          panes: [\n            // map the current path to router panes\n            ...path.map((id) => [{id}]),\n            // then augment with the intents IDs and params\n            [{id: params.id, params: otherParams, payload}],\n          ],\n          depthIndex: path.length,\n          levelIndex,\n        },\n      ]\n    }\n\n    if (resolvedPane.type === 'list' && resolvedPane.child && resolvedPane.items) {\n      return (\n        await Promise.all(\n          resolvedPane.items.map((item, nextLevelIndex) => {\n            if (item.type === 'divider') return Promise.resolve([])\n\n            return traverse({\n              currentId: item._id || item.id,\n              flatIndex: flatIndex + 1,\n              intent,\n              params,\n              parent: resolvedPane,\n              path: [...path, item.id],\n              payload,\n              unresolvedPane:\n                typeof resolvedPane.child === 'function'\n                  ? memoBind(resolvedPane, 'child')\n                  : resolvedPane.child,\n              levelIndex: nextLevelIndex,\n              structureContext,\n            })\n          })\n        )\n      ).flat()\n    }\n\n    return []\n  }\n\n  const matchingPanes = await traverse({\n    currentId: 'root',\n    flatIndex: 0,\n    levelIndex: 0,\n    intent: options.intent,\n    params: options.params,\n    parent: null,\n    path: [],\n    payload: options.payload,\n    unresolvedPane: options.rootPaneNode,\n    structureContext: options.structureContext,\n  })\n\n  const closestPaneToRoot = matchingPanes.sort((a, b) => {\n    // break ties with the level index\n    if (a.depthIndex === b.depthIndex) return a.levelIndex - b.levelIndex\n    return a.depthIndex - b.depthIndex\n  })[0]\n\n  if (closestPaneToRoot) {\n    return closestPaneToRoot.panes\n  }\n\n  return fallbackEditorPanes\n}\n","import {useContext} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {DeskToolContextValue} from './types'\n\nexport function useDeskTool(): DeskToolContextValue {\n  const deskTool = useContext(DeskToolContext)\n\n  if (!deskTool) throw new Error(`DeskTool: missing context value`)\n\n  return deskTool\n}\n","import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {isEqual} from 'lodash'\nimport {Observable, NEVER, of as observableOf, concat} from 'rxjs'\nimport {switchMap, map, scan, distinctUntilChanged, pairwise, startWith} from 'rxjs/operators'\nimport {\n  DocumentPaneNode,\n  PaneNode,\n  RouterPaneSiblingContext,\n  RouterPanes,\n  RouterPaneSibling,\n  PaneNodeResolver,\n  UnresolvedPaneNode,\n} from '../types'\nimport {StructureContext} from '../structureBuilder'\nimport {assignId} from './assignId'\nimport {createPaneResolver, PaneResolver, PaneResolverMiddleware} from './createPaneResolver'\nimport {memoBind} from './memoBind'\nimport {PaneResolutionError} from './PaneResolutionError'\n\n/**\n * the fallback editor child that is implicitly inserted into the structure tree\n * if the id starts with `__edit__`\n */\nconst fallbackEditorChild: PaneNodeResolver = (nodeId, context): DocumentPaneNode => {\n  const id = nodeId.replace(/^__edit__/, '')\n  const {\n    params,\n    payload,\n    structureContext: {resolveDocumentNode},\n  } = context\n  const {type, template} = params\n\n  if (!type) {\n    throw new Error(\n      `Document type for document with ID ${id} was not provided in the router params.`\n    )\n  }\n\n  let defaultDocumentBuilder = resolveDocumentNode({schemaType: type, documentId: id})\n\n  defaultDocumentBuilder = defaultDocumentBuilder.id('editor').title('Editor')\n\n  if (template) {\n    defaultDocumentBuilder = defaultDocumentBuilder.initialValueTemplate(\n      template,\n      payload as {[key: string]: unknown}\n    )\n  }\n\n  return defaultDocumentBuilder.serialize() as DocumentPaneNode\n}\n\n/**\n * takes in a `RouterPaneSiblingContext` and returns a normalized string\n * representation that can be used for comparisons\n */\nfunction hashContext(context: RouterPaneSiblingContext): string {\n  return `contextHash(${JSON.stringify({\n    id: context.id,\n    parentId: parent && assignId(parent),\n    path: context.path,\n    index: context.index,\n    splitIndex: context.splitIndex,\n    serializeOptionsIndex: context.serializeOptions?.index,\n    serializeOptionsPath: context.serializeOptions?.path,\n  })})`\n}\n\n/**\n * takes in `ResolvedPaneMeta` and returns a normalized string representation\n * that can be used for comparisons\n */\nconst hashResolvedPaneMeta = (meta: ResolvedPaneMeta): string => {\n  const normalized = {\n    type: meta.type,\n    id: meta.routerPaneSibling.id,\n    params: meta.routerPaneSibling.params || {},\n    payload: meta.routerPaneSibling.payload || null,\n    flatIndex: meta.flatIndex,\n    groupIndex: meta.groupIndex,\n    siblingIndex: meta.siblingIndex,\n    path: meta.path,\n    paneNode: meta.type === 'resolvedMeta' ? assignId(meta.paneNode) : null,\n  }\n\n  return `metaHash(${JSON.stringify(normalized)})`\n}\n\n/**\n * Represents one flattened \"router pane\", including the source group and\n * sibling indexes.\n *\n * @see RouterPanes\n */\ninterface FlattenedRouterPane {\n  routerPaneSibling: RouterPaneSibling\n  flatIndex: number\n  groupIndex: number\n  siblingIndex: number\n}\n\n/**\n * The state of the accumulator used to store and manage memo cache state\n */\ninterface CacheState {\n  /**\n   * Holds the memoization results keyed by a combination of `assignId` and a\n   * context hash.\n   */\n  resolvedPaneCache: Map<string, Observable<PaneNode>>\n  /**\n   * Acts as a dictionary that stores cache keys by their flat index. This is\n   * used to clean up the cache between different branches in the pane\n   * structure.\n   *\n   * @see createResolvedPaneNodeStream look inside the `scan` where `wrapFn` is\n   * defined\n   */\n  cacheKeysByFlatIndex: Array<Set<string>>\n  /**\n   * The resulting memoized `PaneResolver` function. This function closes over\n   * the `resolvedPaneCache`.\n   */\n  resolvePane: PaneResolver\n  flattenedRouterPanes: FlattenedRouterPane[]\n}\n\nexport interface CreateResolvedPaneNodeStreamOptions {\n  /**\n   * an input stream of `RouterPanes`\n   * @see RouterPanes\n   */\n  routerPanesStream: Observable<RouterPanes>\n  /**\n   * any `UnresolvedPaneNode` (could be an observable, promise, pane resolver etc)\n   */\n  rootPaneNode: UnresolvedPaneNode\n  /** used primarily for testing */\n  initialCacheState?: CacheState\n\n  structureContext: StructureContext\n}\n\n/**\n * The result of pane resolving\n */\nexport type ResolvedPaneMeta = {\n  groupIndex: number\n  siblingIndex: number\n  flatIndex: number\n  routerPaneSibling: RouterPaneSibling\n  path: string[]\n} & ({type: 'loading'; paneNode: null} | {type: 'resolvedMeta'; paneNode: PaneNode})\n\ninterface ResolvePaneTreeOptions {\n  resolvePane: PaneResolver\n  flattenedRouterPanes: FlattenedRouterPane[]\n  unresolvedPane: UnresolvedPaneNode | undefined\n  parent: PaneNode | null\n  path: string[]\n  structureContext: StructureContext\n}\n\n/**\n * A recursive pane resolving function. Starts at one unresolved pane node and\n * continues until there is no more flattened router panes that can be used as\n * input to the unresolved panes.\n */\nfunction resolvePaneTree({\n  unresolvedPane,\n  flattenedRouterPanes,\n  parent,\n  path,\n  resolvePane,\n  structureContext,\n}: ResolvePaneTreeOptions): Observable<ResolvedPaneMeta[]> {\n  const [current, ...rest] = flattenedRouterPanes\n  const next = rest[0] as FlattenedRouterPane | undefined\n\n  const context: RouterPaneSiblingContext = {\n    id: current.routerPaneSibling.id,\n    splitIndex: current.siblingIndex,\n    parent,\n    path: [...path, current.routerPaneSibling.id],\n    index: current.flatIndex,\n    params: current.routerPaneSibling.params || {},\n    payload: current.routerPaneSibling.payload,\n    structureContext,\n  }\n\n  try {\n    return resolvePane(unresolvedPane, context, current.flatIndex).pipe(\n      // this switch map receives a resolved pane\n      switchMap((paneNode) => {\n        // we can create a `resolvedMeta` type using it\n        const resolvedPaneMeta: ResolvedPaneMeta = {\n          type: 'resolvedMeta',\n          ...current,\n          paneNode: paneNode,\n          path: context.path,\n        }\n\n        // for the other unresolved panes, we can create \"loading panes\"\n        const loadingPanes = rest.map((i, restIndex) => {\n          const loadingPanePath = [\n            ...context.path,\n            ...rest.slice(restIndex).map((_, currentIndex) => `[${i.flatIndex + currentIndex}]`),\n          ]\n\n          const loadingPane: ResolvedPaneMeta = {\n            type: 'loading',\n            path: loadingPanePath,\n            paneNode: null,\n            ...i,\n          }\n\n          return loadingPane\n        })\n\n        if (!rest.length) {\n          return observableOf([resolvedPaneMeta])\n        }\n\n        let nextStream\n\n        if (\n          // the fallback editor case\n          next?.routerPaneSibling.id.startsWith('__edit__')\n        ) {\n          nextStream = resolvePaneTree({\n            unresolvedPane: fallbackEditorChild,\n            flattenedRouterPanes: rest,\n            parent,\n            path: context.path,\n            resolvePane,\n            structureContext,\n          })\n        } else if (current.groupIndex === next?.groupIndex) {\n          // if the next flattened router pane has the same group index as the\n          // current flattened router pane, then the next flattened router pane\n          // belongs to the same group (i.e. it is a split pane)\n          nextStream = resolvePaneTree({\n            unresolvedPane,\n            flattenedRouterPanes: rest,\n            parent,\n            path,\n            resolvePane,\n            structureContext,\n          })\n        } else {\n          // normal children resolving\n          nextStream = resolvePaneTree({\n            unresolvedPane:\n              typeof paneNode.child === 'function'\n                ? (memoBind(paneNode, 'child') as PaneNodeResolver)\n                : paneNode.child,\n            flattenedRouterPanes: rest,\n            parent: paneNode,\n            path: context.path,\n            resolvePane,\n            structureContext,\n          })\n        }\n\n        return concat(\n          // we emit the loading panes first in a concat (this emits immediately)\n          observableOf([resolvedPaneMeta, ...loadingPanes]),\n          // then whenever the next stream is done, the results will be combined.\n          nextStream.pipe(map((nextResolvedPanes) => [resolvedPaneMeta, ...nextResolvedPanes]))\n        )\n      })\n    )\n  } catch (e) {\n    if (e instanceof PaneResolutionError) {\n      if (e.context) {\n        console.warn(\n          `Pane resolution error at index ${e.context.index}${\n            e.context.splitIndex > 0 ? ` for split pane index ${e.context.splitIndex}` : ''\n          }: ${e.message}${e.helpId ? ` - see ${generateHelpUrl(e.helpId)}` : ''}`,\n          e\n        )\n      }\n\n      if (e.helpId === 'structure-item-returned-no-child') {\n        // returning an observable of an empty array will remove loading panes\n        // note: this one intentionally does not throw\n        return observableOf([])\n      }\n    }\n\n    throw e\n  }\n}\n\n/**\n * Takes in a stream of `RouterPanes` and an unresolved root pane and returns\n * a stream of `ResolvedPaneMeta`\n */\nexport function createResolvedPaneNodeStream({\n  routerPanesStream,\n  rootPaneNode,\n  initialCacheState = {\n    cacheKeysByFlatIndex: [],\n    flattenedRouterPanes: [],\n    resolvedPaneCache: new Map(),\n    resolvePane: () => NEVER,\n  },\n  structureContext,\n}: CreateResolvedPaneNodeStreamOptions): Observable<ResolvedPaneMeta[]> {\n  const resolvedPanes$ = routerPanesStream.pipe(\n    // add in implicit \"root\" router pane\n    map((rawRouterPanes) => [[{id: 'root'}], ...rawRouterPanes]),\n    // create flattened router panes\n    map((routerPanes) => {\n      const flattenedRouterPanes: FlattenedRouterPane[] = routerPanes\n        .flatMap((routerPaneGroup, groupIndex) =>\n          routerPaneGroup.map((routerPaneSibling, siblingIndex) => ({\n            routerPaneSibling,\n            groupIndex,\n            siblingIndex,\n          }))\n        )\n        // add in the flat index\n        .map((i, index) => ({...i, flatIndex: index}))\n\n      return flattenedRouterPanes\n    }),\n    // calculate a \"diffIndex\" used for clearing the memo cache\n    startWith([] as FlattenedRouterPane[]),\n    pairwise(),\n    map(([prev, curr]) => {\n      for (let i = 0; i < curr.length; i++) {\n        const prevValue = prev[i]\n        const currValue = curr[i]\n\n        if (!isEqual(prevValue, currValue)) {\n          return {\n            flattenedRouterPanes: curr,\n            diffIndex: i,\n          }\n        }\n      }\n\n      return {\n        flattenedRouterPanes: curr,\n        diffIndex: curr.length,\n      }\n    }),\n    // create the memoized `resolvePane` function and manage the memo cache\n    scan((acc, next) => {\n      const {cacheKeysByFlatIndex, resolvedPaneCache} = acc\n      const {flattenedRouterPanes, diffIndex} = next\n\n      // use the `cacheKeysByFlatIndex` like a dictionary to find cache keys to\n      // and cache keys to delete\n      const beforeDiffIndex = cacheKeysByFlatIndex.slice(0, diffIndex + 1)\n      const afterDiffIndex = cacheKeysByFlatIndex.slice(diffIndex + 1)\n\n      const keysToKeep = new Set(beforeDiffIndex.flatMap((keySet) => Array.from(keySet)))\n      const keysToDelete = afterDiffIndex\n        .flatMap((keySet) => Array.from(keySet))\n        .filter((key) => !keysToKeep.has(key))\n\n      for (const key of keysToDelete) {\n        resolvedPaneCache.delete(key)\n      }\n\n      // create a memoizing pane resolver middleware that utilizes the cache\n      // maintained above. this keeps the cache from growing indefinitely\n      const memoize: PaneResolverMiddleware = (nextFn) => (unresolvedPane, context, flatIndex) => {\n        const key = unresolvedPane && `${assignId(unresolvedPane)}-${hashContext(context)}`\n        const cachedResolvedPane = key && resolvedPaneCache.get(key)\n        if (cachedResolvedPane) return cachedResolvedPane\n\n        const result = nextFn(unresolvedPane, context, flatIndex)\n        if (!key) return result\n\n        const cacheKeySet = cacheKeysByFlatIndex[flatIndex] || new Set()\n        cacheKeySet.add(key)\n        cacheKeysByFlatIndex[flatIndex] = cacheKeySet\n        resolvedPaneCache.set(key, result)\n        return result\n      }\n\n      return {\n        flattenedRouterPanes,\n        cacheKeysByFlatIndex,\n        resolvedPaneCache,\n        resolvePane: createPaneResolver(memoize),\n      }\n    }, initialCacheState),\n    // run the memoized, recursive resolving\n    switchMap(({flattenedRouterPanes, resolvePane}) =>\n      resolvePaneTree({\n        unresolvedPane: rootPaneNode,\n        flattenedRouterPanes,\n        parent: null,\n        path: [],\n        resolvePane,\n        structureContext,\n      })\n    )\n  )\n\n  // after we've created a stream of `ResolvedPaneMeta[]`, we need to clean up\n  // the results to remove unwanted loading panes and prevent unnecessary\n  // emissions\n  return resolvedPanes$.pipe(\n    // this diffs the previous emission with the current one. if there is a new\n    // loading pane at the same position where a previous pane already had a\n    // resolved value (looking at the IDs to compare), then return the previous\n    // pane instead of the loading pane\n    scan(\n      (prev, next) =>\n        next.map((nextPane, index) => {\n          const prevPane = prev[index] as ResolvedPaneMeta | undefined\n          if (!prevPane) return nextPane\n          if (nextPane.type !== 'loading') return nextPane\n\n          if (prevPane.routerPaneSibling.id === nextPane.routerPaneSibling.id) {\n            return prevPane\n          }\n          return nextPane\n        }),\n      [] as ResolvedPaneMeta[]\n    ),\n    // this prevents duplicate emissions\n    distinctUntilChanged((prev, next) => {\n      if (prev.length !== next.length) return false\n\n      for (let i = 0; i < next.length; i++) {\n        const prevValue = prev[i]\n        const nextValue = next[i]\n        if (hashResolvedPaneMeta(prevValue) !== hashResolvedPaneMeta(nextValue)) {\n          return false\n        }\n      }\n\n      return true\n    })\n  )\n}\n","import {useEffect, useMemo, useState} from 'react'\nimport {ReplaySubject} from 'rxjs'\nimport {map} from 'rxjs/operators'\nimport {LOADING_PANE} from '../constants'\nimport {RouterPanes, PaneNode, RouterPaneGroup} from '../types'\nimport {useDeskTool} from '../useDeskTool'\nimport {createResolvedPaneNodeStream} from './createResolvedPaneNodeStream'\nimport {RouterState, useRouter} from 'sanity/router'\n\ninterface PaneData {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  key: string\n  pane: PaneNode | typeof LOADING_PANE\n  params: Record<string, string | undefined>\n  path: string\n  payload: unknown\n  selected: boolean\n  siblingIndex: number\n}\n\ninterface Panes {\n  paneDataItems: PaneData[]\n  routerPanes: RouterPanes\n  resolvedPanes: (PaneNode | typeof LOADING_PANE)[]\n}\n\nfunction useRouterPanesStream() {\n  const routerStateSubject = useMemo(() => new ReplaySubject<RouterState>(1), [])\n  const routerPanes$ = useMemo(\n    () =>\n      routerStateSubject\n        .asObservable()\n        .pipe(map((_routerState) => (_routerState?.panes || []) as RouterPanes)),\n    [routerStateSubject]\n  )\n  const {state: routerState} = useRouter()\n  useEffect(() => {\n    routerStateSubject.next(routerState)\n  }, [routerState, routerStateSubject])\n\n  return routerPanes$\n}\n\nexport function useResolvedPanes(): Panes {\n  // used to propagate errors from async effect. throwing inside of the render\n  // will bubble the error to react where it can be picked up by standard error\n  // boundaries\n  const [error, setError] = useState<unknown>()\n  if (error) throw error\n\n  const {structureContext, rootPaneNode} = useDeskTool()\n\n  const [data, setData] = useState<Panes>({\n    paneDataItems: [],\n    resolvedPanes: [],\n    routerPanes: [],\n  })\n\n  const routerPanesStream = useRouterPanesStream()\n\n  useEffect(() => {\n    const resolvedPanes$ = createResolvedPaneNodeStream({\n      rootPaneNode,\n      routerPanesStream,\n      structureContext,\n    }).pipe(\n      map((resolvedPanes) => {\n        const routerPanes = resolvedPanes.reduce<RouterPanes>((acc, next) => {\n          const currentGroup = acc[next.groupIndex] || []\n          currentGroup[next.siblingIndex] = next.routerPaneSibling\n          acc[next.groupIndex] = currentGroup\n          return acc\n        }, [])\n\n        const groupsLen = routerPanes.length\n\n        const paneDataItems = resolvedPanes.map((pane) => {\n          const {groupIndex, flatIndex, siblingIndex, routerPaneSibling, path} = pane\n          const itemId = routerPaneSibling.id\n          const nextGroup = routerPanes[groupIndex + 1] as RouterPaneGroup | undefined\n\n          const paneDataItem: PaneData = {\n            active: groupIndex === groupsLen - 2,\n            childItemId: nextGroup?.[0].id ?? null,\n            index: flatIndex,\n            itemId: routerPaneSibling.id,\n            groupIndex,\n            key: `${\n              pane.type === 'loading' ? 'unknown' : pane.paneNode.id\n            }-${itemId}-${siblingIndex}`,\n            pane: pane.type === 'loading' ? LOADING_PANE : pane.paneNode,\n            params: routerPaneSibling.params || {},\n            path: path.join(';'),\n            payload: routerPaneSibling.payload,\n            selected: flatIndex === resolvedPanes.length - 1,\n            siblingIndex,\n          }\n\n          return paneDataItem\n        })\n\n        return {\n          paneDataItems,\n          routerPanes,\n          resolvedPanes: paneDataItems.map((pane) => pane.pane),\n        }\n      })\n    )\n\n    const subscription = resolvedPanes$.subscribe({\n      next: (result) => setData(result),\n      error: (e) => setError(e),\n    })\n\n    return () => subscription.unsubscribe()\n  }, [rootPaneNode, routerPanesStream, structureContext])\n\n  return data\n}\n","import {uuid} from '@sanity/uuid'\nimport {first} from 'rxjs/operators'\nimport {firstValueFrom, Observable} from 'rxjs'\nimport {PaneResolutionError} from '../../../structureResolvers'\nimport {getPublishedId, DocumentStore} from 'sanity'\n\nexport function removeDraftPrefix(documentId: string): string {\n  const publishedId = getPublishedId(documentId)\n\n  if (publishedId !== documentId) {\n    console.warn(\n      'Removed unexpected draft id in document link: All links to documents should have the ' +\n        '`drafts.`-prefix removed and something appears to have made an intent link to `%s`',\n      documentId\n    )\n  }\n\n  return publishedId\n}\n\nexport async function ensureDocumentIdAndType(\n  documentStore: DocumentStore,\n  id: string | undefined,\n  type: string | undefined\n): Promise<{id: string; type: string}> {\n  if (id && type) return {id, type}\n  if (!id && type) return {id: uuid(), type}\n  if (id && !type) {\n    const resolvedType = await firstValueFrom(\n      documentStore.resolveTypeForDocument(id) as Observable<string>\n    )\n\n    return {id, type: resolvedType}\n  }\n\n  throw new PaneResolutionError({\n    message: 'Neither document `id` or `type` was provided when trying to resolve intent.',\n  })\n}\n","import {memo, useCallback, useEffect, useState} from 'react'\nimport {resolveIntent} from '../../../structureResolvers'\nimport {useDeskTool} from '../../../useDeskTool'\nimport {ensureDocumentIdAndType} from './utils'\nimport {useRouter, useRouterState} from 'sanity/router'\nimport {isRecord, useDocumentStore} from 'sanity'\n\nconst EMPTY_RECORD: Record<string, unknown> = {}\n\n/**\n * A component that receives an intent from props and redirects to the resolved\n * intent location (while showing a loading spinner during the process)\n */\nexport const IntentResolver = memo(function IntentResolver() {\n  const {navigate} = useRouter()\n  const maybeIntent = useRouterState(\n    useCallback((routerState) => {\n      const intentName = typeof routerState.intent === 'string' ? routerState.intent : undefined\n      return intentName\n        ? {\n            intent: intentName,\n            params: isRecord(routerState.params) ? routerState.params : EMPTY_RECORD,\n            payload: routerState.payload,\n          }\n        : undefined\n    }, [])\n  )\n  const {rootPaneNode, structureContext} = useDeskTool()\n  const documentStore = useDocumentStore()\n  const [error, setError] = useState<unknown>(null)\n\n  // this re-throws errors so that parent ErrorBoundary's can handle them properly\n  if (error) throw error\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (maybeIntent) {\n      const {intent, params, payload} = maybeIntent\n\n      let cancelled = false\n      // eslint-disable-next-line no-inner-declarations\n      async function effect() {\n        const {id, type} = await ensureDocumentIdAndType(\n          documentStore,\n          typeof params.id === 'string' ? params.id : undefined,\n          typeof params.type === 'string' ? params.type : undefined\n        )\n\n        if (cancelled) return\n\n        const panes = await resolveIntent({\n          intent,\n          params: {...params, id, type},\n          payload,\n          rootPaneNode,\n          structureContext,\n        })\n\n        if (cancelled) return\n\n        navigate({panes}, {replace: true})\n      }\n\n      effect().catch(setError)\n\n      return () => {\n        cancelled = true\n      }\n    }\n  }, [documentStore, maybeIntent, navigate, rootPaneNode, structureContext])\n\n  return null\n})\n","import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {Box, Button, Card, Code, Container, Heading, Label, Stack, Text} from '@sanity/ui'\nimport React, {useCallback} from 'react'\nimport styled from 'styled-components'\nimport {SyncIcon} from '@sanity/icons'\nimport {SerializeError} from '../../structureBuilder'\nimport {PaneResolutionError} from '../../structureResolvers'\n\nconst PathSegment = styled.span`\n  &:not(:last-child)::after {\n    content: ' ➝ ';\n    opacity: 0.5;\n  }\n`\n\nfunction formatStack(stack: string) {\n  return (\n    stack\n      // Prettify builder functions\n      .replace(/\\(\\.\\.\\.\\)\\./g, '(...)\\n  .')\n      // Remove webpack cruft from function names\n      .replace(/__WEBPACK_IMPORTED_MODULE_\\d+_+/g, '')\n      // Remove default export postfix from function names\n      .replace(/___default\\./g, '.')\n      // Replace full host path, leave only path to JS-file\n      .replace(new RegExp(` \\\\(https?:\\\\/\\\\/${window.location.host}`, 'g'), ' (')\n  )\n}\n\ninterface StructureErrorProps {\n  error: unknown\n}\n\nexport function StructureError({error}: StructureErrorProps) {\n  if (!(error instanceof PaneResolutionError)) {\n    throw error\n  }\n  const {cause} = error\n\n  // Serialize errors are well-formatted and should be readable, in these cases a stack trace is\n  // usually not helpful. Build errors in dev (with HMR) usually also contains a bunch of garbage\n  // instead of an actual error message, so make sure we show the message in these cases as well\n  const stack = cause?.stack || error.stack\n  const showStack =\n    stack && !(cause instanceof SerializeError) && !error.message.includes('Module build failed:')\n\n  const path = cause instanceof SerializeError ? cause.path : []\n  const helpId = (cause instanceof SerializeError && cause.helpId) || error.helpId\n\n  const handleReload = useCallback(() => {\n    window.location.reload()\n  }, [])\n\n  return (\n    <Card height=\"fill\" overflow=\"auto\" padding={4} sizing=\"border\" tone=\"critical\">\n      <Container>\n        <Heading as=\"h2\">Encountered an error while reading structure</Heading>\n\n        <Card marginTop={4} padding={4} radius={2} overflow=\"auto\" shadow={1} tone=\"inherit\">\n          {path.length > 0 && (\n            <Stack space={2}>\n              <Label>Structure path</Label>\n              <Code>\n                {/* TODO: it seems like the path is off by one and includes */}\n                {/* `root` twice  */}\n                {path.slice(1).map((segment, i) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <PathSegment key={`${segment}-${i}`}>{segment}</PathSegment>\n                ))}\n              </Code>\n            </Stack>\n          )}\n\n          <Stack marginTop={4} space={2}>\n            <Label>Error</Label>\n            <Code>{showStack ? formatStack(stack) : error.message}</Code>\n          </Stack>\n\n          {helpId && (\n            <Box marginTop={4}>\n              <Text>\n                <a href={generateHelpUrl(helpId)} rel=\"noopener noreferrer\" target=\"_blank\">\n                  View documentation\n                </a>\n              </Text>\n            </Box>\n          )}\n\n          <Box marginTop={4}>\n            <Button text=\"Reload\" icon={SyncIcon} tone=\"primary\" onClick={handleReload} />\n          </Box>\n        </Card>\n      </Container>\n    </Card>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport React from 'react'\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {isRecord} from 'sanity'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title=\"Unknown pane type\" />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              Structure item of type <code>{type}</code> is not a known entity.\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              Structure item is missing required <code>type</code> property.\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {Observable, of, merge} from 'rxjs'\nimport {mapTo, delay} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<string> {\n  const thresholds = [\n    {ms: 300, message: 'Loading…'},\n    {ms: 5000, message: 'Still loading…'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(...thresholds.map(({ms, message}) => src.pipe(mapTo(message), delay(ms))))\n}\n","import {Box, CardTone, Flex, Spinner, Text, _raf2} from '@sanity/ui'\nimport React, {memo, useMemo, useState, useEffect} from 'react'\nimport {Observable} from 'rxjs'\nimport styled from 'styled-components'\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {getWaitMessages} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<string>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE = 'Loading…'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return DEFAULT_MESSAGE\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe === 'function') return undefined\n\n    const sub = resolvedMessage.subscribe(setCurrentMessage)\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <Spinner muted />\n\n      {(title || currentMessage) && (\n        <Box marginTop={3}>\n          <Text align=\"center\" muted size={1}>\n            {title || currentMessage}\n          </Text>\n        </Box>\n      )}\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'LoadingPane'\n","import React, {memo, lazy, Suspense} from 'react'\nimport {isEqual} from 'lodash'\nimport {PaneNode} from '../types'\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {UnknownPane} from './unknown'\nimport {LoadingPane} from './loading'\n\ninterface DeskToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined>\n  payload: unknown\n  path: string\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document')),\n  documentList: lazy(() => import('./documentList')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const DeskToolPane = memo(\n  function DeskToolPane(props: DeskToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      path,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} path={path} selected={selected} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next}\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  }\n)\n","import React from 'react'\nimport {Box, CardTone} from '@sanity/ui'\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {children, flex, minWidth, paneKey, title = 'Error', tone = 'critical'} = props\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} tone={tone}>\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport React, {memo, useEffect, useRef} from 'react'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentOperationEvent} from 'sanity'\n\nfunction getOpErrorTitle(op: string): string {\n  if (op === 'delete') {\n    return `An error occurred while attempting to delete this document.\n      This usually means that there are other documents that refers to it.`\n  }\n  if (op === 'unpublish') {\n    return `An error occurred while attempting to unpublish this document.\n      This usually means that there are other documents that refers to it.`\n  }\n  return `An error occurred during ${op}`\n}\n\nfunction getOpSuccessTitle(op: string): string {\n  if (op === 'publish') {\n    return `The document was published`\n  }\n  if (op === 'unpublish') {\n    return `The document was unpublished. A draft has been created from the latest published version.`\n  }\n  if (op === 'discardChanges') {\n    return `All changes since last publish has now been discarded. The discarded draft can still be recovered from history`\n  }\n  if (op === 'delete') {\n    return `The document was successfully deleted`\n  }\n  return `Successfully performed ${op} on document`\n}\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType} = useDocumentPane()\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: getOpErrorTitle(event.op),\n        description: (\n          <details>\n            <summary>Details</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: getOpSuccessTitle(event.op),\n      })\n    }\n\n    prevEvent.current = event\n  }, [event, pushToast])\n\n  return null\n})\n","import {EarthAmericasIcon, BinaryDocumentIcon, RestoreIcon} from '@sanity/icons'\nimport {DeskToolFeatures, PaneMenuItem} from '../../types'\n\ninterface Params {\n  features: DeskToolFeatures\n  changesOpen: boolean\n  hasValue: boolean\n  previewUrl?: string | null\n}\n\nconst getHistoryMenuItem = (params: Params): PaneMenuItem | null => {\n  const {features, hasValue, changesOpen} = params\n\n  if (!features.reviewChanges) return null\n\n  return {\n    action: 'reviewChanges',\n    title: 'Review changes',\n    icon: RestoreIcon,\n    isDisabled: changesOpen || !hasValue,\n  }\n}\n\nconst getInspectItem = ({hasValue}: Params): PaneMenuItem => ({\n  action: 'inspect',\n  title: 'Inspect',\n  icon: BinaryDocumentIcon,\n  isDisabled: !hasValue,\n  shortcut: 'Ctrl+Alt+I',\n})\n\nexport const getProductionPreviewItem = ({previewUrl}: Params): PaneMenuItem | null => {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    title: 'Open preview',\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport const getMenuItems = (params: Params): PaneMenuItem[] => {\n  const items = [getProductionPreviewItem, getHistoryMenuItem, getInspectItem]\n    .filter(Boolean)\n    .map((fn) => fn(params))\n\n  return items.filter((i) => i !== null) as PaneMenuItem[]\n}\n","import {useEffect, useState} from 'react'\nimport {SanityDocument} from '@sanity/types'\nimport {useAsObservable} from 'react-rx'\nimport {debounceTime, switchMap, catchError} from 'rxjs/operators'\nimport {from, of} from 'rxjs'\nimport {useSource, isRecord} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const [previewUrl, setPreviewUrl] = useState<string | undefined>(undefined)\n  const [error, setError] = useState<unknown>(null)\n  const {resolveProductionUrl} = useSource().document\n  // @todo refactor out of useAsObservable, and instead use `of() + useMemoObservable` like we did for `useLoadableFromCreateLoadable`\n  const value$ = useAsObservable(value)\n\n  if (error) throw error\n\n  useEffect(() => {\n    value$\n      .pipe(\n        // this so that the preview URL isn't fetched on every keystroke\n        debounceTime(500),\n        switchMap((document) =>\n          isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined)\n        ),\n        catchError((e) => {\n          const message = isRecord(e) && typeof e.message === 'string' ? e.message : 'Unknown error'\n          throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n        })\n      )\n      .subscribe({\n        next: setPreviewUrl,\n        error: setError,\n      })\n  }, [resolveProductionUrl, value$])\n\n  return previewUrl\n}\n","import {Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import React, {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {ObjectSchemaType, Path, SanityDocument, SanityDocumentLike} from '@sanity/types'\nimport {omit} from 'lodash'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport isHotkey from 'is-hotkey'\nimport {isActionEnabled} from '@sanity/schema/_internal'\nimport {usePaneRouter} from '../../components'\nimport {PaneMenuItem} from '../../types'\nimport {useDeskTool} from '../../useDeskTool'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\nimport {getMenuItems} from './menuItems'\nimport {DocumentPaneProviderProps} from './types'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\nimport {\n  DocumentPresence,\n  PatchEvent,\n  StateTree,\n  toMutationPatches,\n  getExpandOperations,\n  getPublishedId,\n  setAtPath,\n  useConnectionState,\n  useDocumentOperation,\n  useEditState,\n  useFormState,\n  useInitialValue,\n  usePresenceStore,\n  useSchema,\n  useSource,\n  useTemplates,\n  useUnique,\n  useValidationStatus,\n  getDraftId,\n  useDocumentValuePermissions,\n  useTimelineStore,\n  useTimelineSelector,\n} from 'sanity'\n\nconst emptyObject = {} as Record<string, string | undefined>\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey} = props\n  const schema = useSchema()\n  const templates = useTemplates()\n  const {\n    actions: documentActions,\n    badges: documentBadges,\n    unstable_languageFilter: languageFilterResolver,\n  } = useSource().document\n  const presenceStore = usePresenceStore()\n  const paneRouter = usePaneRouter()\n  const {features} = useDeskTool()\n  const {push: pushToast} = useToast()\n  const {options, menuItemGroups, title = null, views: viewsProp = []} = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const paneParams = useUnique(paneRouter.params)\n  const panePayload = useUnique(paneRouter.payload)\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: paneParams?.template,\n      }),\n    [documentType, paneOptions, paneParams, panePayload, templates]\n  )\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n  })\n  const initialValue = useUnique(initialValueRaw)\n  const {patch}: any = useDocumentOperation(documentId, documentType)\n  const editState = useEditState(documentId, documentType)\n  const {validation: validationRaw} = useValidationStatus(documentId, documentType)\n  const connectionState = useConnectionState(documentId, documentType)\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n  const value: SanityDocumentLike = editState?.draft || editState?.published || initialValue.value\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions({schemaType: documentType, documentId}),\n    [documentActions, documentId, documentType]\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType]\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver]\n  )\n\n  const validation = useUnique(validationRaw)\n  const views = useUnique(viewsProp)\n  const params = paneRouter.params || emptyObject\n  const [focusPath, setFocusPath] = useState<Path>(() =>\n    params.path ? pathFromString(params.path) : []\n  )\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n  const [timelineMode, setTimelineMode] = useState<'since' | 'rev' | 'closed'>('closed')\n  const changesOpen = !!params.since\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n  /**\n   * Create an intermediate store which handles document Timeline + TimelineController\n   * creation, and also fetches pre-requsite document snapshots. Compatible with `useSyncExternalStore`\n   * and made available to child components via DocumentPaneContext.\n   */\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  // Subscribe to external timeline state changes\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(timelineStore, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(timelineStore, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(timelineStore, (state) => state.timelineReady)\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const [presence, setPresence] = useState<DocumentPresence[]>([])\n  useEffect(() => {\n    const subscription = presenceStore.documentPresence(documentId).subscribe((nextPresence) => {\n      setPresence(nextPresence)\n    })\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [documentId, presenceStore])\n\n  const hasValue = Boolean(value)\n  const menuItems = useMemo(\n    () => getMenuItems({features, hasValue, changesOpen, previewUrl}),\n    [changesOpen, features, hasValue, previewUrl]\n  )\n  const inspectOpen = params.inspect === 'on'\n  const compareValue: Partial<SanityDocument> | null = changesOpen\n    ? sinceAttributes\n    : editState?.published || null\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready =\n    connectionState === 'connected' && editState.ready && (timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => (onOlderRevision ? timelineDisplayed || {_id: value._id, _type: value._type} : value),\n    [onOlderRevision, timelineDisplayed, value]\n  )\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      paneRouter.setParams({\n        ...paneRouter.params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [paneRouter]\n  )\n\n  const handleFocus = useCallback(\n    (nextFocusPath: Path) => {\n      setFocusPath(nextFocusPath)\n      presenceStore.setLocation([\n        {\n          type: 'document',\n          documentId,\n          path: nextFocusPath,\n          lastActiveAt: new Date().toISOString(),\n        },\n      ])\n    },\n    [documentId, presenceStore, setFocusPath]\n  )\n\n  const handleBlur = useCallback(\n    (blurredPath: Path) => {\n      setFocusPath([])\n      // note: we're deliberately not syncing presence here since it would make the user avatar disappear when a\n      // user clicks outside a field without focusing another one\n    },\n    [setFocusPath]\n  )\n\n  const patchRef = useRef<(event: PatchEvent) => void>(() => {\n    throw new Error('Nope')\n  })\n\n  patchRef.current = (event: PatchEvent) => {\n    patch.execute(toMutationPatches(event.patches), initialValue.value)\n  }\n\n  const handleChange = useCallback((event: any) => patchRef.current(event), [])\n\n  const handleHistoryClose = useCallback(() => {\n    paneRouter.setParams({...params, since: undefined})\n  }, [paneRouter, params])\n\n  const handleHistoryOpen = useCallback(() => {\n    paneRouter.setParams({...params, since: '@lastPublished'})\n  }, [paneRouter, params])\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const toggleInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        paneRouter.setParams({...params, inspect: 'on'})\n      } else {\n        paneRouter.setParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, paneRouter, params]\n  )\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'inspect') {\n        toggleInspect(true)\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      return false\n    },\n    [handleHistoryOpen, previewUrl, toggleInspect]\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            handleMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [handleMenuAction, menuItems]\n  )\n\n  const handleInspectClose = useCallback(() => toggleInspect(false), [toggleInspect])\n\n  const [openPath, onSetOpenPath] = useState<Path>([])\n  const [fieldGroupState, onSetFieldGroupState] = useState<StateTree<string>>()\n  const [collapsedPaths, onSetCollapsedPath] = useState<StateTree<boolean>>()\n  const [collapsedFieldSets, onSetCollapsedFieldSets] = useState<StateTree<boolean>>()\n\n  const handleOnSetCollapsedPath = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedPath((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleOnSetCollapsedFieldSet = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedFieldSets((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleSetActiveFieldGroup = useCallback(\n    (path: Path, groupName: string) =>\n      onSetFieldGroupState((prevState) => setAtPath(prevState, path, groupName)),\n    []\n  )\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n  const liveEdit = useMemo(() => Boolean(schemaType?.liveEdit), [schemaType?.liveEdit])\n  const docId = value._id ? value._id : 'dummy-id'\n  const docPermissionsInput = useMemo(() => {\n    return {\n      ...value,\n      _id: liveEdit ? getPublishedId(docId) : getDraftId(docId),\n    }\n  }, [liveEdit, value, docId])\n\n  const [permissions, isPermissionsLoading] = useDocumentValuePermissions({\n    document: docPermissionsInput,\n    permission: requiredPermission,\n  })\n\n  const isNonExistent = !value?._id\n\n  const readOnly = useMemo(() => {\n    const hasNoPermission = !isPermissionsLoading && !permissions?.granted\n    const updateActionDisabled = !isActionEnabled(schemaType!, 'update')\n    const createActionDisabled = isNonExistent && !isActionEnabled(schemaType!, 'create')\n    const reconnecting = connectionState === 'reconnecting'\n    const isLocked = editState.transactionSyncLock?.enabled\n\n    return (\n      !ready ||\n      revTime !== null ||\n      hasNoPermission ||\n      updateActionDisabled ||\n      createActionDisabled ||\n      reconnecting ||\n      isLocked\n    )\n  }, [\n    connectionState,\n    isNonExistent,\n    isPermissionsLoading,\n    permissions?.granted,\n    ready,\n    revTime,\n    schemaType,\n    editState.transactionSyncLock,\n  ])\n\n  const formState = useFormState(schemaType!, {\n    value: displayed,\n    readOnly,\n    comparisonValue: compareValue,\n    focusPath,\n    openPath,\n    collapsedPaths,\n    presence,\n    validation,\n    collapsedFieldSets,\n    fieldGroupState,\n    changesOpen,\n  })\n\n  const formStateRef = useRef(formState)\n  formStateRef.current = formState\n\n  const setOpenPath = useCallback(\n    (path: Path) => {\n      const ops = getExpandOperations(formStateRef.current!, path)\n      ops.forEach((op) => {\n        if (op.type === 'expandPath') {\n          onSetCollapsedPath((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'expandFieldSet') {\n          onSetCollapsedFieldSets((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'setSelectedGroup') {\n          onSetFieldGroupState((prevState) => setAtPath(prevState, op.path, op.groupName))\n        }\n      })\n      onSetOpenPath(path)\n    },\n    [formStateRef]\n  )\n\n  const documentPane: DocumentPaneContextValue = {\n    actions,\n    activeViewId,\n    badges,\n    changesOpen,\n    collapsedFieldSets,\n    collapsedPaths,\n    compareValue,\n    connectionState,\n    displayed,\n    documentId,\n    documentIdRaw,\n    documentType,\n    editState,\n    focusPath,\n    menuItems,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onPathOpen: setOpenPath,\n    onHistoryClose: handleHistoryClose,\n    onHistoryOpen: handleHistoryOpen,\n    onInspectClose: handleInspectClose,\n    onKeyUp: handleKeyUp,\n    onMenuAction: handleMenuAction,\n    onPaneClose: handlePaneClose,\n    onPaneSplit: handlePaneSplit,\n    onSetActiveFieldGroup: handleSetActiveFieldGroup,\n    onSetCollapsedPath: handleOnSetCollapsedPath,\n    onSetCollapsedFieldSet: handleOnSetCollapsedFieldSet,\n    index,\n    inspectOpen,\n    validation,\n    menuItemGroups: menuItemGroups || [],\n    paneKey,\n    previewUrl,\n    ready,\n    schemaType: schemaType!,\n    isPermissionsLoading,\n    permissions,\n    setTimelineMode,\n    setTimelineRange,\n    timelineError,\n    timelineMode,\n    timelineStore,\n    title,\n    value,\n    views,\n    formState,\n    unstable_languageFilter: languageFilter,\n  }\n\n  useEffect(() => {\n    if (connectionState === 'reconnecting') {\n      pushToast({\n        id: 'sanity/desk/reconnecting',\n        status: 'warning',\n        title: <>Connection lost. Reconnecting…</>,\n      })\n    }\n  }, [connectionState, pushToast])\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n      const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n      // Reset focus path when url params path changes\n      setFocusPath(pathFromUrl)\n      setOpenPath(pathFromUrl)\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n  }, [params, documentId, setOpenPath, ready, paneRouter])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'DocumentPaneProvider'\n","import {\n  TrashIcon,\n  EditIcon,\n  IconComponent,\n  PublishIcon,\n  UnpublishIcon,\n  CloseIcon,\n  AddCircleIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_LABELS: {[key: string]: string | undefined} = {\n  create: 'created',\n  delete: 'deleted',\n  discardDraft: 'discarded draft',\n  initial: 'created',\n  editDraft: 'edited',\n  editLive: 'live edited',\n  publish: 'published',\n  unpublish: 'unpublished',\n}\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddCircleIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddCircleIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {IconComponent} from '@sanity/icons'\nimport {TIMELINE_ICON_COMPONENTS, TIMELINE_LABELS} from './constants'\nimport {ChunkType} from 'sanity'\n\nexport function formatTimelineEventLabel(type: ChunkType): string | undefined {\n  return TIMELINE_LABELS[type]\n}\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import React from 'react'\nimport {AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n}\n\nexport function UserAvatarStack({maxLength, userIds}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Text, Box, Button, Theme, Flex, rem} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport interface IconWrapperProps {\n  theme: Theme\n}\n\nexport const IconWrapper = styled(Flex)(({theme}: IconWrapperProps) => {\n  const borderColor = theme.sanity.color.base.skeleton?.from\n\n  return css`\n    --timeline-hairline-width: 1px;\n    position: relative;\n    z-index: 2;\n    margin: 0;\n    padding: 0;\n\n    &::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: var(--timeline-hairline-width);\n      background: ${borderColor};\n      top: 0;\n      left: calc((100% - var(--timeline-hairline-width)) / 2);\n      z-index: 1;\n    }\n  `\n})\n\nexport const Root = styled(Button)(({$selected}: {$selected: boolean}) => {\n  return css`\n    position: relative;\n    width: 100%;\n\n    /* Line styling */\n    &[data-first] ${IconWrapper}::before {\n      height: 50%;\n      top: unset;\n      bottom: 0;\n    }\n\n    &[data-last] ${IconWrapper}::before {\n      height: 50%;\n    }\n\n    ${$selected &&\n    css`\n      ${IconWrapper}::before {\n        background: transparent;\n      }\n    `}\n  `\n})\n\nexport const IconBox = styled(Box)`\n  background: var(--card-bg-color);\n  border-radius: 50px;\n  position: relative;\n  z-index: 2;\n`\n\nexport const EventLabel = styled(Text)`\n  text-transform: capitalize;\n`\n\nexport const TimestampBox = styled(Box)`\n  min-width: 1rem;\n  margin-left: ${({theme}) => `-${rem(theme.sanity.space[1])}`};\n`\n","import React, {useCallback, createElement, useMemo} from 'react'\nimport {Box, ButtonTone, Card, Flex, Label, Stack, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {formatTimelineEventLabel, getTimelineEventIconComponent} from './helpers'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {EventLabel, IconBox, IconWrapper, Root, TimestampBox} from './timelineItem.styled'\nimport {ChunkType, Chunk} from 'sanity'\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ButtonTone> = {\n  initial: 'primary',\n  create: 'primary',\n  publish: 'positive',\n  editLive: 'caution',\n  editDraft: 'caution',\n  unpublish: 'critical',\n  discardDraft: 'critical',\n  delete: 'critical',\n  withinSelection: 'primary',\n}\n\ninterface TimelineItemProps {\n  chunk: Chunk\n  isFirst: boolean\n  isLast: boolean\n  isLatest: boolean\n  isSelected: boolean\n  onSelect: (chunk: Chunk) => void\n  timestamp: string\n  type: ChunkType\n}\n\nexport function TimelineItem({\n  chunk,\n  isFirst,\n  isLast,\n  isLatest,\n  isSelected,\n  onSelect,\n  timestamp,\n  type,\n}: TimelineItemProps) {\n  const iconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n\n    return formattedDate\n  }, [timestamp])\n\n  const handleClick = useCallback(\n    (evt: React.MouseEvent<HTMLButtonElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n      onSelect(chunk)\n    },\n    [onSelect, chunk]\n  )\n\n  return (\n    <Root\n      $selected={isSelected}\n      data-chunk-id={chunk.id}\n      data-first={isFirst ? true : undefined}\n      data-last={isLast ? true : undefined}\n      data-ui=\"timelineItem\"\n      mode={isSelected ? 'default' : 'bleed'}\n      onClick={handleClick}\n      padding={0}\n      radius={2}\n      tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n    >\n      <Box paddingX={2}>\n        <Flex align=\"stretch\">\n          <IconWrapper align=\"center\">\n            <IconBox padding={2}>\n              <Text size={2}>{iconComponent && createElement(iconComponent)}</Text>\n            </IconBox>\n          </IconWrapper>\n\n          <Stack space={2} margin={2}>\n            {isLatest && (\n              <Flex>\n                <Card\n                  padding={1}\n                  radius={2}\n                  shadow={1}\n                  tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n                >\n                  <Label muted size={0}>\n                    Latest\n                  </Label>\n                </Card>\n              </Flex>\n            )}\n            <Box>\n              <EventLabel size={1} weight=\"medium\">\n                {formatTimelineEventLabel(type) || <code>{type}</code>}\n              </EventLabel>\n            </Box>\n            <TimestampBox paddingX={1}>\n              <Text size={0} muted>\n                {formattedTimestamp}\n              </Text>\n            </TimestampBox>\n          </Stack>\n          <Flex flex={1} justify=\"flex-end\" align=\"center\">\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} />\n          </Flex>\n        </Flex>\n      </Box>\n    </Root>\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)`\n  max-height: calc(100vh - 198px);\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)(({$visible}: {$visible?: boolean}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\nimport {TimelineItem} from './timelineItem'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {Chunk, CommandList, CommandListRenderItemCallback} from 'sanity'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  disabledBeforeFirstChunk?: boolean\n  firstChunk?: Chunk | null\n  hasMoreChunks: boolean\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n}\n\nexport const Timeline = ({\n  chunks,\n  disabledBeforeFirstChunk,\n  hasMoreChunks,\n  lastChunk,\n  onLoadMore,\n  onSelect,\n  firstChunk,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n\n  const filteredChunks = useMemo(() => {\n    return chunks.filter((c) => {\n      if (disabledBeforeFirstChunk && firstChunk) {\n        return c.index < firstChunk.index\n      }\n      return true\n    })\n  }, [chunks, disabledBeforeFirstChunk, firstChunk])\n\n  const selectedIndex = useMemo(\n    () => (lastChunk?.id ? filteredChunks.findIndex((c) => c.id === lastChunk.id) : -1),\n    [lastChunk?.id, filteredChunks]\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<Chunk>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n      const isLast = (filteredChunks && activeIndex === filteredChunks.length - 1) || false\n      return (\n        <Box paddingBottom={isLast ? 1 : 0} paddingTop={isFirst ? 1 : 0} paddingX={1}>\n          <TimelineItem\n            chunk={chunk}\n            isFirst={isFirst}\n            isLast={isLast}\n            isLatest={activeIndex === 0 && !disabledBeforeFirstChunk}\n            isSelected={activeIndex === selectedIndex}\n            onSelect={onSelect}\n            timestamp={chunk.endTimestamp}\n            type={chunk.type}\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && (\n            <Flex align=\"center\" justify=\"center\" padding={4}>\n              <Spinner muted />\n            </Flex>\n          )}\n        </Box>\n      )\n    },\n    [disabledBeforeFirstChunk, filteredChunks, hasMoreChunks, onSelect, selectedIndex]\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            No document history\n          </Text>\n          <Text muted size={1}>\n            When changing the content of the document, the document versions will appear in this\n            menu.\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\">\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel=\"Document revisions\"\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={40}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport React from 'react'\nimport {TextWithTone} from 'sanity'\n\nexport function TimelineError() {\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"semibold\">\n          An error occurred whilst retrieving document changes.\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          Document history transactions have not been affected.\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {SelectIcon} from '@sanity/icons'\nimport {Button, Placement, Popover, useClickOutside, useGlobalKeyDown, useToast} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {upperFirst} from 'lodash'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport styled from 'styled-components'\nimport {TimelineError} from '../changesPanel/content/TimelineError'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {formatTimelineEventLabel} from './helpers'\nimport {Timeline} from './timeline'\nimport {Chunk, useTimelineSelector} from 'sanity'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, setTimelineMode, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popover, setPopover] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const handleOpen = useCallback(() => {\n    setTimelineMode(mode)\n    setOpen(true)\n  }, [mode, setTimelineMode])\n\n  const handleClose = useCallback(() => {\n    setTimelineMode('closed')\n    setOpen(false)\n  }, [setTimelineMode])\n\n  const handleClickOutside = useCallback(() => {\n    if (open) {\n      handleClose()\n    }\n  }, [handleClose, open])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open]\n  )\n\n  useClickOutside(handleClickOutside, [button, popover])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForRev(revChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: 'Unable to load revision',\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, timelineStore, toast]\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForSince(sinceChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: 'Unable to load revision',\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, timelineStore, toast]\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = timelineError ? (\n    <TimelineError />\n  ) : (\n    <>\n      {mode === 'rev' && (\n        <Timeline\n          chunks={chunks}\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )}\n      {mode === 'since' && (\n        <Timeline\n          chunks={chunks}\n          disabledBeforeFirstChunk\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={sinceTime}\n          onLoadMore={handleLoadMore}\n          onSelect={selectSince}\n        />\n      )}\n    </>\n  )\n\n  const timeLabel = useFormattedTimestamp(chunk?.endTimestamp || '')\n\n  const revLabel = chunk\n    ? `${upperFirst(formatTimelineEventLabel(chunk.type))}: ${timeLabel}`\n    : 'Latest version'\n\n  const sinceLabel = chunk ? `Since: ${timeLabel}` : 'Since: unknown version'\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <Root\n      constrainSize\n      content={open && content}\n      data-ui=\"versionMenu\"\n      open={open}\n      placement={placement}\n      portal\n      ref={setPopover}\n    >\n      <Button\n        disabled={!ready}\n        mode=\"bleed\"\n        fontSize={1}\n        padding={2}\n        iconRight={SelectIcon}\n        onClick={open ? handleClose : handleOpen}\n        ref={setButton}\n        selected={open}\n        text={ready ? buttonLabel : 'Loading history'}\n      />\n    </Root>\n  )\n}\n\nexport function useFormattedTimestamp(time: string): string {\n  const formatted = useMemo(() => {\n    const parsedDate = time ? new Date(time) : new Date()\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n    return formattedDate\n  }, [time])\n\n  return formatted\n}\n","import React from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\nimport {Delay} from '../../../../components'\n\nexport function LoadingContent() {\n  return (\n    <Delay ms={300}>\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\" paddingTop={3}>\n        <Spinner muted />\n        <Box marginTop={3}>\n          <Text align=\"center\" muted size={1}>\n            Loading changes\n          </Text>\n        </Box>\n      </Flex>\n    </Delay>\n  )\n}\n","import {AnnotationDetails, visitDiff, Diff} from 'sanity'\n\nexport function collectLatestAuthorAnnotations(diff: Diff): AnnotationDetails[] {\n  const authorMap = new Map<string, AnnotationDetails>()\n  visitDiff(diff, (child) => {\n    if (child.action === 'unchanged' || !('annotation' in child) || !child.annotation) {\n      return true\n    }\n\n    const {author, timestamp} = child.annotation\n    const previous = authorMap.get(author)\n    if (!previous || previous.timestamp < timestamp) {\n      authorMap.set(author, child.annotation)\n    }\n\n    return true\n  })\n\n  return Array.from(authorMap.values()).sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n}\n","import {ObjectDiff} from '@sanity/diff'\nimport {CloseIcon} from '@sanity/icons'\nimport {AvatarStack, BoundaryElementProvider, Box, Button, Flex} from '@sanity/ui'\nimport React, {useRef} from 'react'\nimport styled from 'styled-components'\nimport {PaneContent, PaneHeader, usePane} from '../../../components'\nimport {TimelineMenu} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {LoadingContent} from './content/LoadingContent'\nimport {collectLatestAuthorAnnotations} from './helpers'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  DiffTooltip,\n  DocumentChangeContext,\n  DocumentChangeContextInstance,\n  NoChanges,\n  ScrollContainer,\n  UserAvatar,\n  useTimelineSelector,\n} from 'sanity'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function ChangesPanel(): React.ReactElement | null {\n  const {documentId, onHistoryClose, schemaType, timelineError, timelineStore, value} =\n    useDocumentPane()\n  const {collapsed} = usePane()\n  const scrollRef = useRef<HTMLDivElement | null>(null)\n\n  // Subscribe to external timeline state changes\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  const documentContext: DocumentChangeContextInstance = React.useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value]\n  )\n\n  const changeAnnotations = React.useMemo(\n    () => (diff ? collectLatestAuthorAnnotations(diff) : []),\n    [diff]\n  )\n\n  if (collapsed) {\n    return null\n  }\n\n  return (\n    <Flex\n      direction=\"column\"\n      flex={1}\n      style={{\n        borderLeft: '1px dashed var(--card-border-color)',\n        overflow: 'hidden',\n        minWidth: 320,\n      }}\n      data-testid=\"review-changes-pane\"\n    >\n      <PaneHeader\n        actions={\n          <Button\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onHistoryClose}\n            padding={3}\n            title=\"Hide changes panel\"\n          />\n        }\n        subActions={\n          changeAnnotations.length > 0 && (\n            <Box paddingRight={1}>\n              <DiffTooltip\n                annotations={changeAnnotations}\n                description=\"Changes by\"\n                placement=\"bottom-end\"\n              >\n                <AvatarStack maxLength={4}>\n                  {changeAnnotations.map(({author}) => (\n                    <UserAvatar key={author} user={author} />\n                  ))}\n                </AvatarStack>\n              </DiffTooltip>\n            </Box>\n          )\n        }\n        tabs={<TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />}\n        title=\"Changes\"\n      />\n\n      <PaneContent>\n        <BoundaryElementProvider element={scrollRef.current}>\n          <Scroller data-ui=\"Scroller\" ref={scrollRef}>\n            <Box flex={1} padding={4}>\n              <Content\n                diff={diff}\n                documentContext={documentContext}\n                error={timelineError}\n                loading={loading}\n              />\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </PaneContent>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n}) {\n  const {schemaType} = useDocumentPane()\n\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingContent />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {useSettingsStore} from 'sanity'\n\n/**\n * @internal\n */\nexport function useDeskToolSetting<ValueType>(\n  namespace: string | null,\n  key: string,\n  defaultValue?: ValueType\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const settingsStore = useSettingsStore()\n  const [value, setValue] = useState<ValueType | undefined>(defaultValue)\n\n  const deskToolSettings = useMemo(() => settingsStore.forNamespace('desk-tool'), [settingsStore])\n\n  const settings = useMemo(() => {\n    if (namespace) {\n      return deskToolSettings.forNamespace(namespace).forKey(key)\n    }\n\n    return deskToolSettings.forKey(key)\n  }, [deskToolSettings, namespace, key])\n\n  useEffect(() => {\n    const sub = settings.listen(defaultValue).subscribe({\n      next: setValue as any,\n    })\n\n    return () => sub?.unsubscribe()\n  }, [defaultValue, key, namespace, settings])\n\n  const set = useCallback(\n    (newValue: ValueType) => {\n      setValue(newValue)\n      settings.set(newValue as any)\n    },\n    [settings]\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'Parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'Raw JSON'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {SanityDocumentLike} from '@sanity/types'\nimport HLRU from 'hashlru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = HLRU(1000)\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport React, {useCallback} from 'react'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange]\n  )\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder=\"Search\"\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {SanityDocument} from '@sanity/types'\nimport {Card, Code, Dialog, Flex, Tab, TabList, TabPanel} from '@sanity/ui'\nimport React, {useCallback} from 'react'\nimport JSONInspector from '@rexxars/react-json-inspector'\nimport {DocTitle} from '../../../components'\nimport {useDeskToolSetting} from '../../../useDeskToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useDeskToolSetting(\n    'desk-tool',\n    `inspect-view-preferred-view-mode-${paneKey}`,\n    'parsed'\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  return (\n    <Dialog\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <>\n            Inspecting{' '}\n            <em>\n              <DocTitle document={value} />\n            </em>\n          </>\n        ) : (\n          <em>No value</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      width={3}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card padding={3} shadow={1} style={{position: 'sticky', bottom: 0, zIndex: 3}}>\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              fontSize={1}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={VIEW_MODE_PARSED.title}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              fontSize={1}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={VIEW_MODE_RAW.title}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JSONInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, Button, Card, Container, Flex, Text} from '@sanity/ui'\nimport {WarningOutlineIcon, SyncIcon, CloseIcon} from '@sanity/icons'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport styled from 'styled-components'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {KeyedSegment, Reference} from '@sanity/types'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {concat, Observable, of} from 'rxjs'\nimport {useMemoObservable} from 'react-rx'\nimport {RouterPaneGroup} from '../../../types'\nimport {usePaneRouter} from '../../../components'\nimport {DocumentAvailability, useDocumentPreviewStore, getPublishedId} from 'sanity'\n\nconst Root = styled(Card)`\n  position: relative;\n  z-index: 50;\n`\n\nconst TextOneLine = styled(Text)`\n  & > * {\n    overflow: hidden;\n    overflow: clip;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n`\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {draft: DocumentAvailability; published: DocumentAvailability}\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfo = useMemoObservable(\n    (): Observable<ParentReferenceInfo> => {\n      const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n      // short-circuit: this document pane is not a child reference pane\n      if (!parentId || !parentRefPathSegment || !parentRefPath) {\n        return of({loading: false})\n      }\n\n      const publishedId = getPublishedId(parentId)\n      const path = pathFromString(parentRefPathSegment)\n\n      // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n      const keyedSegmentIndex = path.findIndex(\n        (p): p is KeyedSegment => typeof p == 'object' && '_key' in p\n      )\n\n      return concat(\n        // emit a loading state instantly\n        of({loading: true}),\n        // then emit the values from watching the published ID's path\n        documentPreviewStore\n          .unstable_observePathsDocumentPair(\n            publishedId,\n            (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][]\n          )\n          .pipe(\n            // this debounce time is needed to prevent flashing banners due to\n            // the router state updating faster than the content-lake state. we\n            // debounce to wait for more emissions because the value pulled\n            // initially could be stale.\n            debounceTime(750),\n            map(\n              ({draft, published}): ParentReferenceInfo => ({\n                loading: false,\n                result: {\n                  availability: {\n                    draft: draft.availability,\n                    published: published.availability,\n                  },\n                  refValue: pathGet<Reference>(draft.snapshot || published.snapshot, parentRefPath)\n                    ?._ref,\n                },\n              })\n            )\n          )\n      )\n    },\n    [documentPreviewStore, parentId, parentRefPath],\n    {loading: true}\n  )\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Root shadow={1} tone=\"caution\" data-testid=\"reference-changed-banner\">\n      <Container paddingX={4} paddingY={2} sizing=\"border\" width={1}>\n        <Flex align=\"center\">\n          <Text size={1}>\n            <WarningOutlineIcon />\n          </Text>\n\n          {referenceInfo.result?.refValue ? (\n            <>\n              <Box flex={1} marginLeft={3}>\n                <TextOneLine title=\"This reference has changed since you opened it.\" size={1}>\n                  This reference has changed since you opened it.\n                </TextOneLine>\n              </Box>\n              <Box marginLeft={3}>\n                <Button\n                  onClick={handleReloadReference}\n                  icon={SyncIcon}\n                  fontSize={1}\n                  mode=\"ghost\"\n                  padding={2}\n                  space={2}\n                  text=\"Reload reference\"\n                />\n              </Box>\n            </>\n          ) : (\n            <>\n              <Box flex={1} marginLeft={3}>\n                <TextOneLine title=\"This reference has been removed since you opened it.\" size={1}>\n                  This reference has been removed since you opened it.\n                </TextOneLine>\n              </Box>\n              <Box marginLeft={3}>\n                <Button\n                  as={BackLink}\n                  icon={CloseIcon}\n                  fontSize={1}\n                  mode=\"ghost\"\n                  padding={2}\n                  space={2}\n                  text=\"Close reference\"\n                />\n              </Box>\n            </>\n          )}\n        </Flex>\n      </Container>\n    </Root>\n  )\n})\n\nReferenceChangedBanner.displayName = 'ReferenceChangedBanner'\n","import React from 'react'\nimport {Box, Card, Container, Flex, Text} from '@sanity/ui'\nimport {ReadOnlyIcon} from '@sanity/icons'\nimport styled from 'styled-components'\nimport {useCurrentUser} from 'sanity'\n\nconst Root = styled(Card)`\n  position: relative;\n  z-index: 50;\n`\n\ninterface PermissionCheckBannerProps {\n  granted: boolean\n  requiredPermission: string\n}\n\nexport function PermissionCheckBanner({granted, requiredPermission}: PermissionCheckBannerProps) {\n  const currentUser = useCurrentUser()\n  const plural = currentUser?.roles?.length !== 1\n\n  const roles = join(\n    currentUser?.roles?.map((r) => <code key={r.name}>{r.title}</code>) || [],\n    ', '\n  )\n\n  if (granted) return null\n\n  return (\n    <Root data-testid=\"permission-check-banner\" shadow={1} tone=\"transparent\">\n      <Container paddingX={4} paddingY={3} sizing=\"border\" width={1}>\n        <Flex align=\"flex-start\">\n          <Text size={1}>\n            <ReadOnlyIcon />\n          </Text>\n\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              Your role{plural && 's'} {roles} {plural ? 'do' : 'does'} not have permissions to{' '}\n              {requiredPermission} this document.\n            </Text>\n          </Box>\n        </Flex>\n      </Container>\n    </Root>\n  )\n}\n\nfunction join<T, S>(array: Array<T>, sep: S): Array<T | S> | null {\n  return array.reduce((result: Array<T | S> | null, item: T | S) => {\n    if (result === null) {\n      return [item]\n    }\n\n    return result.concat([sep, item])\n  }, null)\n}\n","import {useEffect, useRef} from 'react'\nimport {ToastParams, useToast} from '@sanity/ui'\n\nfunction usePrevious<T>(value: T) {\n  const ref = useRef<T>()\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n  return ref.current\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * Workaround to support conditional toast (e.g. a toast that is visible as long as a condition holds true)\n */\nexport function useConditionalToast(params: ToastParams & {id: string; enabled?: boolean}) {\n  const toast = useToast()\n\n  const wasEnabled = usePrevious(params.enabled)\n  // note1: there's a `duration || 0` in Sanity UI's pushToast(), so make it non-falsey\n  // note2: cannot use `Infinity` as duration, since it exceeds setTimeout's maximum delay value\n  useEffect(() => {\n    if (!wasEnabled && params.enabled) {\n      toast.push({...params, duration: LONG_ENOUGH_BUT_NOT_TOO_LONG})\n    }\n    if (wasEnabled && !params.enabled) {\n      toast.push({\n        ...params,\n        // Note: @sanity/ui fallbacks to the default duration of 4s in case of falsey values\n        duration: 0.01,\n      })\n    }\n  }, [params, toast, wasEnabled])\n}\n","/* eslint-disable no-nested-ternary */\n\nimport {Box, Container, Flex, Spinner, Text, focusFirstDescendant} from '@sanity/ui'\nimport React, {useEffect, useMemo, useRef} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Delay} from '../../../../components/Delay'\nimport {useConditionalToast} from './useConditionalToast'\nimport {\n  DocumentMutationEvent,\n  DocumentRebaseEvent,\n  FormBuilder,\n  PatchMsg,\n  PresenceOverlay,\n  createPatchChannel,\n  fromMutationPatches,\n  useDocumentPresence,\n  useDocumentStore,\n} from 'sanity'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: React.FormEvent) => ev.preventDefault()\n\nexport function FormView(props: FormViewProps) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n  } = useDocumentPane()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const patchChannel = useMemo(() => createPatchChannel(), [])\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n\n  useConditionalToast({\n    id: `sync-lock-${documentId}`,\n    status: 'warning',\n    enabled: isLocked,\n    title: `Syncing document…`,\n    description: `Please hold tight while the document is synced. This usually happens right after the document has been published, and it shouldn't take more than a few seconds`,\n  })\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        })\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel])\n\n  const hasRev = Boolean(value?._rev)\n  useEffect(() => {\n    if (hasRev) {\n      // this is a workaround for an issue that caused the document pushed to withDocument to get\n      // stuck at the first initial value.\n      // This effect is triggered only when the document goes from not having a revision, to getting one\n      // so it will kick in as soon as the document is received from the backend\n      patchChannel.publish({\n        type: 'mutation',\n        patches: [],\n        snapshot: value,\n      })\n    }\n    // React to changes in hasRev only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasRev])\n\n  const formRef = useRef<null | HTMLDivElement>(null)\n\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (ready && !formState?.focusPath.length) {\n      focusFirstDescendant(formRef.current!)\n    }\n    // We only want to run it on first mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ready])\n\n  // const after = useMemo(\n  //   () =>\n  //     Array.isArray(afterEditorComponents) &&\n  //     afterEditorComponents.map(\n  //       (AfterEditorComponent: React.ComponentType<{documentId: string}>, idx: number) => (\n  //         <AfterEditorComponent key={String(idx)} documentId={documentId} />\n  //       )\n  //     ),\n  //   [documentId]\n  // )\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box as=\"form\" onSubmit={preventDefault} ref={formRef}>\n          {ready ? (\n            formState === null ? (\n              <Box padding={2}>\n                <Text>This form is hidden</Text>\n              </Box>\n            ) : (\n              <FormBuilder\n                __internal_patchChannel={patchChannel}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focusPath={formState.focusPath}\n                changed={formState.changed}\n                focused={formState.focused}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                presence={presence}\n                readOnly={formState.readOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={formState.value}\n              />\n            )\n          ) : (\n            <Delay ms={300}>\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    Loading document\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n}\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches)\n    ),\n  }\n}\n","import React, {useCallback} from 'react'\nimport {Tab, TabList} from '@sanity/ui'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {usePaneRouter} from '../../../../components'\n\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          key={view.id}\n          label={<>{view.title}</>}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : view.id ?? null}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: React.ComponentType | React.ReactNode\n  id: string\n  isActive: boolean\n  label: React.ReactNode\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {isActive, tabPanelId, viewId} = props\n  const {ready} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...props} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready}\n      fontSize={1}\n      selected={isActive}\n      onClick={handleClick}\n    />\n  )\n}\n","import {ErrorOutlineIcon, InfoOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {\n  isValidationInfoMarker,\n  isValidationWarningMarker,\n  isValidationErrorMarker,\n  Path,\n} from '@sanity/types'\nimport {Button, ButtonProps, Menu, MenuButton} from '@sanity/ui'\nimport React, {useCallback, useMemo, useId} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {ValidationList} from 'sanity'\n\nexport interface ValidationMenuProps {\n  boundaryElement: HTMLDivElement | null\n  isOpen: boolean\n  setOpen: (val: boolean) => void\n}\n\nconst BUTTON_PROPS: Record<'error' | 'warning' | 'info', ButtonProps> = {\n  error: {\n    tone: 'critical',\n    icon: ErrorOutlineIcon,\n  },\n  warning: {\n    tone: 'caution',\n    icon: WarningOutlineIcon,\n  },\n  info: {\n    tone: 'primary',\n    icon: InfoOutlineIcon,\n  },\n}\n\nexport function ValidationMenu(props: ValidationMenuProps) {\n  const {boundaryElement, isOpen, setOpen} = props\n  const {onFocus, onPathOpen, schemaType, validation} = useDocumentPane()\n  const id = useId()\n  const hasValidationMarkers = validation.length > 0\n  const hasErrorMarkers = validation.some(isValidationErrorMarker)\n  const hasWarningMarkers = validation.some(isValidationWarningMarker)\n  const hasInfoMarkers = validation.some(isValidationInfoMarker)\n\n  const buttonProps = useMemo(() => {\n    if (hasErrorMarkers) return BUTTON_PROPS.error\n    if (hasWarningMarkers) return BUTTON_PROPS.warning\n    if (hasInfoMarkers) return BUTTON_PROPS.info\n    return undefined\n  }, [hasErrorMarkers, hasInfoMarkers, hasWarningMarkers])\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen]\n  )\n\n  const handleClose = useCallback(() => setOpen(false), [setOpen])\n\n  if (!hasValidationMarkers) return null\n\n  return (\n    <MenuButton\n      id={id || ''}\n      button={\n        <Button\n          {...buttonProps}\n          title=\"Show validation issues\"\n          mode=\"bleed\"\n          data-testid=\"validation-list-button\"\n        />\n      }\n      menu={\n        <Menu open={isOpen}>\n          <ValidationList\n            documentType={schemaType}\n            validation={validation}\n            onClose={handleClose}\n            onFocus={handleOpen}\n          />\n        </Menu>\n      }\n      popover={{\n        portal: true,\n        boundaryElement: boundaryElement,\n        constrainSize: true,\n        preventOverflow: true,\n        width: 0,\n      }}\n      placement=\"bottom\"\n    />\n  )\n}\n","import React, {ReactElement} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport function DocumentHeaderTitle(): ReactElement {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue) && connectionState === 'connected'\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState !== 'connected') {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return <>New {schemaType?.title || schemaType?.name}</>\n  }\n\n  if (error) {\n    return <>Error: {error.message}</>\n  }\n\n  return <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n}\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Button, Inline} from '@sanity/ui'\nimport {negate} from 'lodash'\nimport React, {createElement, memo, forwardRef, useMemo} from 'react'\nimport {PaneMenuItem} from '../../../../types'\nimport {PaneHeader, PaneContextMenuButton, usePaneRouter, usePane} from '../../../../components'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDeskTool} from '../../../../useDeskTool'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {ValidationMenu} from './ValidationMenu'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {useTimelineSelector} from 'sanity'\n\nexport interface DocumentPanelHeaderProps {\n  // TODO:\n  // eslint-disable-next-line react/no-unused-prop-types\n  rootElement: HTMLDivElement | null\n}\n\nconst isActionButton = (item: PaneMenuItem) => Boolean(item.showAsAction)\nconst isMenuButton = negate(isActionButton)\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(({rootElement}: DocumentPanelHeaderProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {\n      onMenuAction,\n      onPaneClose,\n      onPaneSplit,\n      validation,\n      menuItems,\n      menuItemGroups,\n      schemaType,\n      timelineStore,\n      ready,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useDeskTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const contextMenuItems = useMemo(() => menuItems.filter(isMenuButton), [menuItems])\n    const [isValidationOpen, setValidationOpen] = React.useState<boolean>(false)\n    const showTabs = views.length > 1\n    const showVersionMenu = features.reviewChanges\n\n    // Subscribe to external timeline state changes\n    const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button) do the same thing and shouldn't be shown at the same time)\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !features.backButton\n\n    return (\n      <PaneHeader\n        ref={ref}\n        loading={!ready}\n        title={<DocumentHeaderTitle />}\n        tabs={showTabs && <DocumentHeaderTabs />}\n        tabIndex={tabIndex}\n        backButton={\n          features.backButton &&\n          index > 0 && <Button as={BackLink} data-as=\"a\" icon={ArrowLeftIcon} mode=\"bleed\" />\n        }\n        subActions={\n          showVersionMenu && <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        }\n        actions={\n          <Inline space={1}>\n            {unstable_languageFilter.length > 0 && (\n              <>\n                {unstable_languageFilter.map((languageFilterComponent, idx) => {\n                  return createElement(languageFilterComponent, {\n                    // eslint-disable-next-line react/no-array-index-key\n                    key: `language-filter-${idx}`,\n                    schemaType,\n                  })\n                })}\n              </>\n            )}\n\n            {validation.length > 0 && (\n              <ValidationMenu\n                boundaryElement={rootElement}\n                isOpen={isValidationOpen}\n                key=\"validation-menu\"\n                setOpen={setValidationOpen}\n              />\n            )}\n\n            <PaneContextMenuButton\n              itemGroups={menuItemGroups}\n              items={contextMenuItems}\n              key=\"context-menu\"\n              onAction={onMenuAction}\n            />\n\n            {showSplitPaneButton && (\n              <Button\n                icon={SplitVerticalIcon}\n                key=\"split-pane-button\"\n                mode=\"bleed\"\n                onClick={onPaneSplit}\n                title=\"Split pane right\"\n              />\n            )}\n\n            {showSplitPaneCloseButton && (\n              <Button\n                icon={CloseIcon}\n                key=\"close-view-button\"\n                mode=\"bleed\"\n                onClick={onPaneClose}\n                title=\"Close split pane\"\n              />\n            )}\n\n            {showPaneGroupCloseButton && (\n              <Button\n                icon={CloseIcon}\n                key=\"close-view-button\"\n                mode=\"bleed\"\n                title=\"Close pane group\"\n                as={BackLink}\n              />\n            )}\n          </Inline>\n        }\n      />\n    )\n  })\n)\n\nDocumentPanelHeader.displayName = 'DocumentPanelHeader'\n","import {BoundaryElementProvider, Flex, PortalProvider, usePortal, useElementRect} from '@sanity/ui'\nimport React, {createElement, useEffect, useMemo, useRef, useState} from 'react'\nimport styled, {css} from 'styled-components'\nimport {PaneContent, usePaneLayout} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDeskTool} from '../../../useDeskTool'\nimport {ReferenceChangedBanner} from './ReferenceChangedBanner'\nimport {PermissionCheckBanner} from './PermissionCheckBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelHeader} from './header'\nimport {ScrollContainer, VirtualizerScrollInstanceProvider} from 'sanity'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  rootElement: HTMLDivElement | null\n  isInspectOpen: boolean\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n}\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {footerHeight, isInspectOpen, rootElement, setDocumentPanelPortalElement} = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const parentPortal = usePortal()\n  const {features} = useDeskTool()\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n  const headerRect = useElementRect(headerElement)\n  const portalRef = useRef<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views]\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? portalRef.current || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerRect?.height || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerRect])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(\n    () =>\n      activeView.type === 'component' &&\n      activeView.component &&\n      createElement(activeView.component, {\n        document: {\n          draft: editState?.draft || null,\n          displayed: displayed || value,\n          historical: displayed,\n          published: editState?.published || null,\n        },\n        documentId,\n        options: activeView.options,\n        schemaType,\n      }),\n    [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value]\n  )\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  return (\n    <Flex direction=\"column\" flex={2} overflow={layoutCollapsed ? undefined : 'hidden'}>\n      <DocumentPanelHeader rootElement={rootElement} ref={setHeaderElement} />\n\n      <PaneContent>\n        <PortalProvider\n          element={portalElement}\n          __unstable_elements={{documentScrollElement: documentScrollElement}}\n        >\n          <BoundaryElementProvider element={documentScrollElement}>\n            <VirtualizerScrollInstanceProvider scrollElement={documentScrollElement}>\n              {activeView.type === 'form' && !isPermissionsLoading && ready && (\n                <>\n                  <PermissionCheckBanner\n                    granted={Boolean(permissions?.granted)}\n                    requiredPermission={requiredPermission}\n                  />\n                  <ReferenceChangedBanner />\n                </>\n              )}\n\n              <Scroller\n                $disabled={layoutCollapsed || false}\n                data-testid=\"document-panel-scroller\"\n                ref={setDocumentScrollElement}\n              >\n                <FormView\n                  hidden={formViewHidden}\n                  key={documentId + (ready ? '_ready' : '_pending')}\n                  margins={margins}\n                />\n                {activeViewNode}\n              </Scroller>\n\n              {inspectDialog}\n\n              <div data-testid=\"document-panel-portal\" ref={portalRef} />\n            </VirtualizerScrollInstanceProvider>\n          </BoundaryElementProvider>\n        </PortalProvider>\n      </PaneContent>\n    </Flex>\n  )\n}\n","import {DialogProps, Placement} from '@sanity/ui'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  Popover,\n  Text,\n  useClickOutside,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\nimport {DocumentActionConfirmDialogProps} from 'sanity'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onCancel()\n  }, [isTopLayer, onCancel])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel]\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return (\n    <Flex direction=\"column\" ref={setElement} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || 'Cancel'}\n          />\n          <Button\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || 'Confirm'}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n","import {Box, Dialog} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\nimport {DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {Popover, useClickOutside, useGlobalKeyDown, useLayer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\nimport {DocumentActionPopoverDialogProps} from 'sanity'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onClose()\n  }, [isTopLayer, onClose])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose]\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return <div ref={setElement}>{content}</div>\n}\n","import {Box, Dialog, usePortal, PortalProvider} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\nimport {DocumentActionDialogProps} from 'sanity'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: React.ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  // eslint-disable-next-line no-console\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={2}\n    >\n      <Box padding={4}>\n        {unknownModal.content || (\n          <>\n            Unexpected modal type (<code>{unknownModal.type}</code>)\n          </>\n        )}\n      </Box>\n    </Dialog>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Flex,\n  Hotkeys,\n  Menu,\n  MenuButton,\n  MenuItem,\n  PopoverProps,\n  Text,\n  Tooltip,\n} from '@sanity/ui'\nimport React, {\n  createElement,\n  isValidElement,\n  useCallback,\n  useRef,\n  useState,\n  useMemo,\n  useId,\n} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {ActionStateDialog} from './ActionStateDialog'\nimport {DocumentActionDescription, LegacyLayerProvider} from 'sanity'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const [actionIndex, setActionIndex] = useState(-1)\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    []\n  )\n\n  const currentAction = actionStates[actionIndex]\n\n  return (\n    <>\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <Button\n            data-testid=\"action-menu-button\"\n            aria-label=\"Open document actions\"\n            disabled={disabled}\n            icon={ChevronDownIcon}\n            mode=\"ghost\"\n            ref={buttonRef}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                // eslint-disable-next-line react/no-array-index-key\n                key={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n    </>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nfunction ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const tooltipContent = actionState.title && (\n    <Box padding={2}>\n      <Text size={1}>{actionState.title}</Text>\n    </Box>\n  )\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      onClick={handleClick}\n      padding={0}\n      tone={actionState.tone}\n    >\n      <Tooltip\n        content={tooltipContent}\n        disabled={!tooltipContent}\n        fallbackPlacements={['left', 'bottom']}\n        placement=\"top\"\n        portal\n      >\n        <Flex align=\"center\" paddingX={3}>\n          <Flex flex={1} paddingY={3}>\n            {actionState.icon && (\n              <Box marginRight={3}>\n                <Text>\n                  {isValidElement(actionState.icon) && actionState.icon}\n                  {isValidElementType(actionState.icon) && createElement(actionState.icon)}\n                </Text>\n              </Box>\n            )}\n\n            <Text>{actionState.label}</Text>\n          </Flex>\n\n          {actionState.shortcut && (\n            <Box marginLeft={3}>\n              <Hotkeys\n                keys={String(actionState.shortcut)\n                  .split('+')\n                  .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))}\n              />\n            </Box>\n          )}\n        </Flex>\n      </Tooltip>\n    </MenuItem>\n  )\n}\n","import {Box, Flex, Tooltip, Stack, Button, Hotkeys, LayerProvider, Text} from '@sanity/ui'\nimport React, {memo, useMemo, useState} from 'react'\nimport {RenderActionCollectionState} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\nimport {DocumentActionDescription, useTimelineSelector} from 'sanity'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  showMenu: boolean\n  states: DocumentActionDescription[]\n}\n\nfunction DocumentStatusBarActionsInner(props: DocumentStatusBarActionsInnerProps) {\n  const {disabled, showMenu, states} = props\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex padding={2} style={{maxWidth: 300}} align=\"center\">\n        <Text size={1}>{firstActionState.title}</Text>\n        {firstActionState.shortcut && (\n          <Box marginLeft={firstActionState.title ? 2 : 0}>\n            <Hotkeys\n              keys={String(firstActionState.shortcut)\n                .split('+')\n                .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n            />\n          </Box>\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  return (\n    <Flex>\n      {firstActionState && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} portal placement=\"top\">\n            <Stack flex={1}>\n              <Button\n                data-testid={`action-${firstActionState.label}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n\n      {showMenu && menuActionStates.length > 0 && (\n        <Box marginLeft={1}>\n          <ActionMenuButton actionStates={menuActionStates} disabled={disabled} />\n        </Box>\n      )}\n\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n}\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {actions, connectionState, documentId, editState} = useDocumentPane()\n  // const [isMenuOpen, setMenuOpen] = useState(false)\n  // const handleMenuOpen = useCallback(() => setMenuOpen(true), [])\n  // const handleMenuClose = useCallback(() => setMenuOpen(false), [])\n  // const handleActionComplete = useCallback(() => setMenuOpen(false), [])\n\n  if (!actions || !editState) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState\n      // component={}\n      // onActionComplete={handleActionComplete}\n      actions={actions}\n      // @ts-expect-error TODO: fix the document actions\n      actionProps={editState}\n    >\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected'}\n          // isMenuOpen={isMenuOpen}\n          // onMenuOpen={handleMenuOpen}\n          // onMenuClose={handleMenuClose}\n          showMenu={actions.length > 1}\n          states={states}\n          // Use document ID as key to make sure that the actions state is reset when the document changes\n          key={documentId}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {connectionState, editState, timelineStore} = useDocumentPane()\n\n  // Subscribe to external timeline state changes\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n\n  const revision = revTime?.id || ''\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps = useMemo(() => ({...(editState || {}), revision}), [editState, revision])\n  const historyActions = useMemo(() => [HistoryRestoreAction], [])\n\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps as any}>\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected' || Boolean(disabled)}\n          showMenu={false}\n          states={states}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n","import {Badge, BadgeTone, Box, Inline, Text, Tooltip} from '@sanity/ui'\nimport React from 'react'\nimport {RenderBadgeCollectionState} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentBadgeDescription} from 'sanity'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nfunction DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          content={\n            badge.title && (\n              <Box padding={2}>\n                <Text size={1}>{badge.title}</Text>\n              </Box>\n            )\n          }\n          disabled={!badge.title}\n          key={String(index)}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n}\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState as any}>\n      {({states}) => <DocumentBadgesInner states={states} />}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {Box, Button, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {PlayIcon, PublishIcon} from '@sanity/icons'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useTimeAgo} from 'sanity'\n\ninterface PublishStatusProps {\n  collapsed?: boolean\n  disabled: boolean\n  lastPublished?: string\n  lastUpdated?: string\n  liveEdit: boolean\n}\n\nconst Root = styled(Flex)`\n  cursor: default;\n`\n\nexport function PublishStatus(props: PublishStatusProps) {\n  const {collapsed, disabled, lastPublished, lastUpdated, liveEdit} = props\n\n  const lastPublishedTimeAgo = useTimeAgo(lastPublished || '', {minimal: true, agoSuffix: true})\n  const lastPublishedTime = useTimeAgo(lastPublished || '', {minimal: true})\n\n  const lastUpdatedTimeAgo = useTimeAgo(lastUpdated || '', {minimal: true, agoSuffix: true})\n  const lastUpdatedTime = useTimeAgo(lastUpdated || '', {minimal: true})\n\n  return (\n    <Root align=\"center\" data-ui=\"SessionLayout\" sizing=\"border\">\n      <Tooltip\n        placement=\"top\"\n        portal\n        content={\n          <Stack padding={3} space={3}>\n            <Text size={1} muted>\n              {liveEdit ? (\n                <>Last updated {lastUpdated ? lastUpdatedTimeAgo : lastPublishedTimeAgo}</>\n              ) : (\n                <>Last published {lastPublishedTimeAgo}</>\n              )}\n            </Text>\n          </Stack>\n        }\n      >\n        <Button\n          mode=\"bleed\"\n          tone={liveEdit ? 'critical' : 'positive'}\n          tabIndex={-1}\n          disabled={disabled}\n        >\n          <Flex align=\"center\">\n            <Box marginRight={collapsed ? 0 : 3}>\n              <Text size={2}>{liveEdit ? <PlayIcon /> : <PublishIcon />}</Text>\n            </Box>\n            {!collapsed && (\n              <Text size={1} weight=\"medium\">\n                {liveEdit ? (\n                  <>{lastUpdated ? lastUpdatedTime : lastPublishedTime}</>\n                ) : (\n                  lastPublishedTime\n                )}\n              </Text>\n            )}\n          </Flex>\n        </Button>\n      </Tooltip>\n    </Root>\n  )\n}\n","import React, {ComponentProps} from 'react'\nimport {motion} from 'framer-motion'\nimport styled, {keyframes} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\nconst Edit = (props: MotionPathProps) => (\n  <motion.path d=\"M15 7L18 10M6 19L7 15L17 5L20 8L10 18L6 19Z\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\nconst edit = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  changes: {\n    pathLength: 1,\n    transition: {\n      duration: 0.4,\n      delay: 0.5,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n        <Edit variants={edit} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import React, {useMemo} from 'react'\nimport {Box, Button, ButtonProps, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\nimport {useTimeAgo} from 'sanity'\n\ninterface ReviewChangesButtonProps extends React.HTMLProps<HTMLButtonElement> {\n  status?: 'changes' | 'saved' | 'syncing'\n  lastUpdated?: string\n  collapsed?: boolean\n}\n\nconst ReviewButton = React.forwardRef(function ReviewButton(\n  props: ReviewChangesButtonProps & ButtonProps,\n  ref: React.ForwardedRef<HTMLButtonElement>\n) {\n  const {collapsed, status, lastUpdated, ...rest} = props\n  const lastUpdatedTime = useTimeAgo(lastUpdated || '', {minimal: true})\n  const lastUpdatedTimeAgo = useTimeAgo(lastUpdated || '', {minimal: true, agoSuffix: true})\n\n  const buttonProps: ButtonProps = useMemo(() => {\n    if (status === 'syncing') {\n      return {\n        text: 'Saving...',\n        tone: undefined,\n      }\n    }\n    if (status === 'changes') {\n      return {\n        text: lastUpdatedTime,\n        tone: 'caution',\n      }\n    }\n    if (status === 'saved') {\n      return {\n        text: 'Saved!',\n        tone: 'positive',\n      }\n    }\n\n    return {}\n  }, [status, lastUpdatedTime])\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <Tooltip\n      placement=\"top\"\n      portal\n      disabled={status !== 'changes'}\n      content={\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            Review changes\n          </Text>\n          <Text size={1} muted>\n            Changes saved {lastUpdatedTimeAgo}\n          </Text>\n        </Stack>\n      }\n    >\n      <Button\n        mode=\"bleed\"\n        justify=\"flex-start\"\n        tone={buttonProps?.tone}\n        {...rest}\n        data-testid=\"review-changes-button\"\n        ref={ref}\n      >\n        <Flex align=\"center\">\n          <Box marginRight={collapsed ? 0 : 3}>\n            <Text>\n              <AnimatedStatusIcon status={status} />\n            </Text>\n          </Box>\n          {!collapsed && (\n            <Text size={1} weight=\"medium\">\n              {buttonProps?.text}\n            </Text>\n          )}\n        </Flex>\n      </Button>\n    </Tooltip>\n  )\n})\n\nexport const ReviewChangesButton = React.memo(ReviewButton)\n","import {Box, Flex, useElementRect} from '@sanity/ui'\nimport React, {useEffect, useMemo, useState, memo, useLayoutEffect} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentBadges} from './DocumentBadges'\nimport {PublishStatus} from './PublishStatus'\nimport {ReviewChangesButton} from './ReviewChangesButton'\nimport {useSyncState, useTimelineSelector} from 'sanity'\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport const DocumentSparkline = memo(function DocumentSparkline() {\n  const {\n    changesOpen,\n    documentId,\n    documentType,\n    editState,\n    onHistoryClose,\n    onHistoryOpen,\n    timelineStore,\n    value,\n  } = useDocumentPane()\n  const syncState = useSyncState(documentId, documentType)\n\n  const lastUpdated = value?._updatedAt\n  const lastPublished = editState?.published?._updatedAt\n  const liveEdit = Boolean(editState?.liveEdit)\n  const published = Boolean(editState?.published)\n  const changed = Boolean(editState?.draft)\n\n  const [rootFlexElement, setRootFlexElement] = useState<HTMLDivElement | null>(null)\n  const rootFlexRect = useElementRect(rootFlexElement)\n  const collapsed = !rootFlexRect || rootFlexRect?.width < 300\n\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n\n  // Subscribe to TimelineController changes and store internal state.\n  const showingRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  const reviewButton = useMemo(\n    () => (\n      <ReviewChangesButton\n        lastUpdated={lastUpdated}\n        status={status || (changed ? 'changes' : undefined)}\n        onClick={changesOpen ? onHistoryClose : onHistoryOpen}\n        disabled={showingRevision}\n        selected={changesOpen}\n        collapsed={collapsed}\n      />\n    ),\n    [\n      changed,\n      changesOpen,\n      onHistoryClose,\n      onHistoryOpen,\n      lastUpdated,\n      showingRevision,\n      status,\n      collapsed,\n    ]\n  )\n\n  const publishStatus = useMemo(\n    () =>\n      (liveEdit || published) && (\n        <Box marginRight={1}>\n          <PublishStatus\n            disabled={showingRevision}\n            lastPublished={lastPublished}\n            lastUpdated={lastUpdated}\n            liveEdit={liveEdit}\n            collapsed={collapsed}\n          />\n        </Box>\n      ),\n    [collapsed, lastPublished, lastUpdated, liveEdit, published, showingRevision]\n  )\n\n  return (\n    <Flex align=\"center\" data-ui=\"DocumentSparkline\" ref={setRootFlexElement}>\n      {publishStatus}\n\n      <Flex align=\"center\" flex={1}>\n        {reviewButton}\n        {!collapsed && (\n          <Box marginLeft={3}>\n            <DocumentBadges />\n          </Box>\n        )}\n      </Flex>\n    </Flex>\n  )\n})\n","import React, {useMemo} from 'react'\nimport styled from 'styled-components'\nimport {Box, Flex} from '@sanity/ui'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentSparkline} from './sparkline/DocumentSparkline'\nimport {useTimelineSelector} from 'sanity'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: React.Ref<HTMLDivElement>\n}\n\nconst DocumentActionsBox = styled(Box)`\n  min-width: 10em;\n  max-width: 16em;\n`\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef} = props\n  const {badges, timelineStore} = useDocumentPane()\n\n  // Subscribe to external timeline state changes\n  const showingRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n\n  return useMemo(\n    () => (\n      <Box paddingLeft={2} paddingRight={[2, 3]} paddingY={2}>\n        <Flex align=\"center\">\n          <Box flex={[1, 2]}>{badges && <DocumentSparkline />}</Box>\n\n          <DocumentActionsBox flex={1} marginLeft={[1, 3]} ref={actionsBoxRef}>\n            {showingRevision ? <HistoryStatusBarActions /> : <DocumentStatusBarActions />}\n          </DocumentActionsBox>\n        </Flex>\n      </Box>\n    ),\n    [actionsBoxRef, badges, showingRevision]\n  )\n}\n","import isHotkey from 'is-hotkey'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {ActionStateDialog} from '../statusBar'\nimport {Pane, RenderActionCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentActionDescription, DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: React.Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nfunction KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<React.HTMLProps<HTMLDivElement>, 'height'>\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event)\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states]\n  )\n\n  return (\n    <Pane id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </Pane>\n  )\n}\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: React.Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = React.memo(\n  (props: DocumentActionShortcutsProps & React.HTMLProps<HTMLDivElement>) => {\n    const {actionsBoxElement, children, ...rest} = props\n    const {actions, editState} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          // @todo: get revision string\n          revision: undefined,\n        },\n      [editState]\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {({states}) => (\n          <KeyboardShortcutResponder\n            {...rest}\n            activeIndex={activeIndex}\n            actionsBoxElement={actionsBoxElement}\n            onActionStart={onActionStart}\n            states={states}\n          >\n            {children}\n          </KeyboardShortcutResponder>\n        )}\n      </RenderActionCollectionState>\n    )\n  }\n)\n\nDocumentActionShortcuts.displayName = 'DocumentActionShortcuts'\n","import {\n  BoundaryElementProvider,\n  Card,\n  Code,\n  DialogProvider,\n  DialogProviderProps,\n  Flex,\n  PortalProvider,\n  Stack,\n  Text,\n  useElementRect,\n} from '@sanity/ui'\nimport React, {memo, useCallback, useMemo, useState} from 'react'\nimport styled from 'styled-components'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {Path} from '@sanity/types'\nimport {DocumentPaneNode} from '../../types'\nimport {usePaneRouter} from '../../components'\nimport {PaneFooter} from '../../components/pane'\nimport {usePaneLayout} from '../../components/pane/usePaneLayout'\nimport {useDeskTool} from '../../useDeskTool'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../constants'\nimport {DocumentOperationResults} from './DocumentOperationResults'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {ChangesPanel} from './changesPanel'\nimport {DocumentPanel} from './documentPanel'\nimport {DocumentActionShortcuts} from './keyboardShortcuts'\nimport {DocumentStatusBar} from './statusBar'\nimport {DocumentPaneProviderProps} from './types'\nimport {useDocumentPane} from './useDocumentPane'\nimport {\n  ChangeConnectorRoot,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  isDev,\n  useDocumentType,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useZIndex,\n} from 'sanity'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\nconst DOCUMENT_PANEL_MIN_WIDTH = 320\nconst DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\nconst CHANGES_PANEL_MIN_WIDTH = 320\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrow screens (< 512px).\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <DocumentPaneInner {...props} />\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'global',\n    })\n  }, [resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            // eslint-disable-next-line no-nested-ternary\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n              ? 'selected'\n              : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  if (options.type === '*' && !isLoaded) {\n    return <LoadingPane flex={2.5} minWidth={320} paneKey={paneKey} title=\"Loading document…\" />\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={<>The document was not found</>}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            The document type is not defined, and a document with the <code>{options.id}</code>{' '}\n            identifier could not be found.\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProvider\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink as any}\n        onEditReference={handleEditReference as any}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <InnerDocumentPane />\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProvider>\n  )\n}\n\nfunction usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {}\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n\nfunction InnerDocumentPane() {\n  const {\n    changesOpen,\n    documentType,\n    onFocus,\n    onPathOpen,\n    onHistoryOpen,\n    onKeyUp,\n    inspectOpen,\n    paneKey,\n    schemaType,\n    value,\n  } = useDocumentPane()\n  const {features} = useDeskTool()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const zOffsets = useZIndex()\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null\n  )\n  const footerRect = useElementRect(footerElement)\n  const footerH = footerRect?.height\n\n  const documentPanel = useMemo(\n    () => (\n      <DocumentPanel\n        footerHeight={footerH || null}\n        isInspectOpen={inspectOpen}\n        rootElement={rootElement}\n        setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n      />\n    ),\n    [footerH, rootElement, inspectOpen]\n  )\n\n  // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane.\n  // The portal element comes from `DocumentPanel`.\n  const footer = useMemo(\n    () => (\n      <PortalProvider\n        __unstable_elements={{[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}}\n      >\n        <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n          <PaneFooter ref={setFooterElement}>\n            <DocumentStatusBar actionsBoxRef={setActionsBoxElement} />\n          </PaneFooter>\n        </DialogProvider>\n      </PortalProvider>\n    ),\n    [documentPanelPortalElement, zOffsets.portal]\n  )\n\n  const changesPanel = useMemo(() => {\n    if (!features.reviewChanges) return null\n    if (!changesOpen) return null\n\n    return (\n      <BoundaryElementProvider element={rootElement}>\n        <ChangesPanel />\n      </BoundaryElementProvider>\n    )\n  }, [changesOpen, features.reviewChanges, rootElement])\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus]\n  )\n\n  const children = useMemo(() => {\n    if (!schemaType) {\n      return (\n        <ErrorPane\n          flex={2.5}\n          minWidth={320}\n          paneKey={paneKey}\n          title={\n            <>\n              Unknown document type: <code>{documentType}</code>\n            </>\n          }\n          tone=\"caution\"\n        >\n          <Stack space={4}>\n            {documentType && (\n              <Text as=\"p\">\n                This document has the schema type <code>{documentType}</code>, which is not defined\n                as a type in the local content studio schema.\n              </Text>\n            )}\n\n            {!documentType && (\n              <Text as=\"p\">\n                This document does not exist, and no schema type was specified for it.\n              </Text>\n            )}\n\n            {isDev && value && (\n              <>\n                <Text as=\"p\">Here is the JSON representation of the document:</Text>\n                <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n                  <Code language=\"json\" size={[1, 1, 2]}>\n                    {JSON.stringify(value, null, 2)}\n                  </Code>\n                </Card>\n              </>\n            )}\n          </Stack>\n        </ErrorPane>\n      )\n    }\n\n    return (\n      <>\n        <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n          <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n            <StyledChangeConnectorRoot\n              data-testid=\"change-connector-root\"\n              isReviewChangesOpen={changesOpen}\n              onOpenReviewChanges={onHistoryOpen}\n              onSetFocus={onConnectorSetFocus}\n            >\n              {documentPanel}\n              {changesPanel}\n            </StyledChangeConnectorRoot>\n          </Flex>\n        </DialogProvider>\n        {footer}\n        <DocumentOperationResults />\n      </>\n    )\n  }, [\n    schemaType,\n    zOffsets.portal,\n    layoutCollapsed,\n    changesOpen,\n    onHistoryOpen,\n    onConnectorSetFocus,\n    documentPanel,\n    changesPanel,\n    footer,\n    paneKey,\n    documentType,\n    value,\n  ])\n\n  const currentMinWidth = changesOpen\n    ? DOCUMENT_PANEL_INITIAL_MIN_WIDTH + CHANGES_PANEL_MIN_WIDTH\n    : DOCUMENT_PANEL_INITIAL_MIN_WIDTH\n\n  const minWidth = changesOpen\n    ? DOCUMENT_PANEL_MIN_WIDTH + CHANGES_PANEL_MIN_WIDTH\n    : DOCUMENT_PANEL_MIN_WIDTH\n\n  return (\n    <DocumentActionShortcuts\n      actionsBoxElement={actionsBoxElement}\n      currentMinWidth={currentMinWidth}\n      data-testid=\"document-pane\"\n      flex={2.5}\n      id={paneKey}\n      minWidth={minWidth}\n      onKeyUp={onKeyUp}\n      rootRef={setRootElement}\n    >\n      {children}\n    </DocumentActionShortcuts>\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Stack, Text} from '@sanity/ui'\nimport React from 'react'\n\nexport function NoDocumentTypesScreen() {\n  return (\n    <Card height=\"fill\">\n      <Flex align=\"center\" height=\"fill\" justify=\"center\" padding={4} sizing=\"border\">\n        <Container width={0}>\n          <Card padding={4} radius={2} shadow={1} tone=\"caution\">\n            <Flex>\n              <Box>\n                <Text size={1}>\n                  <WarningOutlineIcon />\n                </Text>\n              </Box>\n              <Stack flex={1} marginLeft={3} space={3}>\n                <Text as=\"h1\" size={1} weight=\"bold\">\n                  No document types\n                </Text>\n                <Text as=\"p\" muted size={1}>\n                  Please define at least one document type in your schema.\n                </Text>\n                <Text as=\"p\" muted size={1}>\n                  <a\n                    href=\"https://www.sanity.io/docs/create-a-schema-and-configure-sanity-studio\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    Learn how to add a document type &rarr;\n                  </a>\n                </Text>\n              </Stack>\n            </Flex>\n          </Card>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import {PortalProvider, useToast} from '@sanity/ui'\nimport React, {memo, Fragment, useState, useEffect, useCallback} from 'react'\nimport styled from 'styled-components'\nimport isHotkey from 'is-hotkey'\nimport {LOADING_PANE} from '../../constants'\nimport {LoadingPane, DeskToolPane} from '../../panes'\nimport {useResolvedPanes} from '../../structureResolvers'\nimport {PaneNode} from '../../types'\nimport {PaneLayout} from '../pane'\nimport {useDeskTool} from '../../useDeskTool'\nimport {NoDocumentTypesScreen} from './NoDocumentTypesScreen'\nimport {useSchema, _isCustomDocumentTypeDefinition} from 'sanity'\nimport {useRouterState} from 'sanity/router'\n\ninterface DeskToolProps {\n  onPaneChange: (panes: Array<PaneNode | typeof LOADING_PANE>) => void\n}\n\nconst StyledPaneLayout = styled(PaneLayout)`\n  min-height: 100%;\n  min-width: 320px;\n`\n\nconst isSaveHotkey = isHotkey('mod+s')\n\n/**\n * @internal\n */\nexport const DeskTool = memo(function DeskTool({onPaneChange}: DeskToolProps) {\n  const {push: pushToast} = useToast()\n  const schema = useSchema()\n  const {layoutCollapsed, setLayoutCollapsed} = useDeskTool()\n  const {paneDataItems, resolvedPanes} = useResolvedPanes()\n  // Intent resolving is processed by the sibling `<IntentResolver />` but it doesn't have a UI for indicating progress.\n  // We handle that here, so if there are only 1 pane (the root structure), and there's an intent state in the router, we need to show a placeholder LoadingPane until\n  // the structure is resolved and we know what panes to load/display\n  const isResolvingIntent = useRouterState(\n    useCallback((routerState) => typeof routerState.intent === 'string', [])\n  )\n\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n\n  const handleRootCollapse = useCallback(() => setLayoutCollapsed(true), [setLayoutCollapsed])\n  const handleRootExpand = useCallback(() => setLayoutCollapsed(false), [setLayoutCollapsed])\n\n  useEffect(() => {\n    // we check for length before emitting here to skip the initial empty array\n    // state from the `useResolvedPanes` hook. there should always be a root\n    // pane emitted on subsequent emissions\n    if (resolvedPanes.length) {\n      onPaneChange(resolvedPanes)\n    }\n  }, [onPaneChange, resolvedPanes])\n\n  useEffect(() => {\n    const handleGlobalKeyDown = (event: KeyboardEvent) => {\n      // Prevent `Cmd+S`\n      if (isSaveHotkey(event)) {\n        event.preventDefault()\n\n        pushToast({\n          closable: true,\n          id: 'auto-save-message',\n          status: 'info',\n          title: 'Your work is automatically saved!',\n          duration: 4000,\n        })\n      }\n    }\n\n    window.addEventListener('keydown', handleGlobalKeyDown)\n    return () => window.removeEventListener('keydown', handleGlobalKeyDown)\n  }, [pushToast])\n\n  const hasDefinedDocumentTypes = schema._original?.types.some(_isCustomDocumentTypeDefinition)\n\n  if (!hasDefinedDocumentTypes) {\n    return <NoDocumentTypesScreen />\n  }\n\n  return (\n    <PortalProvider element={portalElement || null}>\n      <StyledPaneLayout\n        flex={1}\n        height={layoutCollapsed ? undefined : 'fill'}\n        minWidth={512}\n        onCollapse={handleRootCollapse}\n        onExpand={handleRootExpand}\n      >\n        {paneDataItems.map(\n          ({\n            active,\n            childItemId,\n            groupIndex,\n            itemId,\n            key: paneKey,\n            pane,\n            index: paneIndex,\n            params: paneParams,\n            path,\n            payload,\n            siblingIndex,\n            selected,\n          }) => (\n            <Fragment key={`${pane === LOADING_PANE ? 'loading' : pane.type}-${paneIndex}`}>\n              {pane === LOADING_PANE ? (\n                <LoadingPane paneKey={paneKey} path={path} selected={selected} />\n              ) : (\n                <DeskToolPane\n                  active={active}\n                  groupIndex={groupIndex}\n                  index={paneIndex}\n                  pane={pane}\n                  childItemId={childItemId}\n                  itemId={itemId}\n                  paneKey={paneKey}\n                  params={paneParams}\n                  payload={payload}\n                  path={path}\n                  selected={selected}\n                  siblingIndex={siblingIndex}\n                />\n              )}\n            </Fragment>\n          )\n        )}\n        {/* If there's just 1 pane (the root), or less, and we're resolving an intent then it's necessary to show */}\n        {/* a loading indicator as the intent resolving is async, could take a while and can also be interrupted/redirected */}\n        {paneDataItems.length <= 1 && isResolvingIntent && (\n          <LoadingPane paneKey=\"intent-resolver\" />\n        )}\n      </StyledPaneLayout>\n      <div data-portal=\"\" ref={setPortalElement} />\n    </PortalProvider>\n  )\n})\n","import React, {useEffect, useState} from 'react'\nimport {ErrorBoundary} from '@sanity/ui'\nimport {DeskToolOptions} from '../../types'\nimport {DeskToolProvider} from '../../DeskToolProvider'\nimport {setActivePanes} from '../../getIntentState'\nimport {IntentResolver} from './intentResolver'\nimport {StructureError} from './StructureError'\nimport {DeskTool} from './DeskTool'\nimport {SourceProvider, useWorkspace, Tool} from 'sanity'\n\ninterface DeskToolBoundaryProps {\n  tool: Tool<DeskToolOptions>\n}\n\nexport function DeskToolBoundary({tool: {options}}: DeskToolBoundaryProps) {\n  const {unstable_sources: sources} = useWorkspace()\n  const [firstSource] = sources\n  const {source, defaultDocumentNode, structure} = options || {}\n\n  // Set active panes to blank on mount and unmount\n  useEffect(() => {\n    setActivePanes([])\n    return () => setActivePanes([])\n  }, [])\n\n  const [{error}, setError] = useState<{error: unknown}>({error: null})\n  // this re-throws if the error it catches is not a PaneResolutionError\n  if (error) return <StructureError error={error} />\n\n  return (\n    <ErrorBoundary onCatch={setError}>\n      <SourceProvider name={source || firstSource.name}>\n        <DeskToolProvider defaultDocumentNode={defaultDocumentNode} structure={structure}>\n          <DeskTool onPaneChange={setActivePanes} />\n          <IntentResolver />\n        </DeskToolProvider>\n      </SourceProvider>\n    </ErrorBoundary>\n  )\n}\n"],"names":["Delay","_ref","children","ms","ready","setReady","useState","useEffect","timeoutId","setTimeout","clearTimeout","jsx","Fragment","RenderActionCollectionState","props","actions","actionProps","onActionComplete","GetHookCollectionState","onReset","hooks","args","RenderBadgeCollectionState","badges","badgeProps","rest","emptyArray","PaneRouterProvider","flatIndex","index","params","payload","siblingIndex","navigate","navigateIntent","useRouter","routerState","useRouterState","routerPaneGroups","useMemo","panes","groupIndex","modifyCurrentGroup","useCallback","modifier","currentGroup","currentItem","nextGroup","nextPanes","slice","nextRouterState","setPayload","nextPayload","siblings","item","setParams","nextParams","handleEditReference","_ref2","id","parentRefPath","type","template","pathToString","ctx","hasGroupSiblings","length","groupLength","routerPanesState","ChildLink","BackLink","ReferenceChildLink","ParameterizedLink","replaceCurrent","opts","arguments","undefined","closeCurrent","filter","sibling","duplicateCurrent","options","duplicatedItem","setView","viewId","restParams","omit","view","PaneRouterContext","Provider","value","_calcPaneResize","cache","left","right","deltaX","_a","_b","sum","flex","width","leftMinWidth","minWidth","PANE_DEFAULT_MIN_WIDTH","rightMinWidth","leftMaxWidth","Math","min","maxWidth","Infinity","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","rootElement","el","path","e","parentElement","Array","from","childNodes","indexOf","unshift","EMPTY_PATH","_sortElements","elements","map","WeakMap","element","set","_sortByElementPath","a","b","get","len","i","aIndex","bIndex","sort","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","Set","rootWidth","expandedElement","resizeDataMap","Map","resizing","collapse","add","_notifyObservers","expand","delete","mount","original","push","idx","splice","resize","leftElement","_c","_d","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","currentMinWidth","currentMaxWidth","setRootElement","nextRootElement","setRootWidth","nextRootWidth","subscribe","observer","_elements","dataMap","lastElement","collapsedWidth","PANE_COLLAPSED_WIDTH","remaingWidth","isLast","userCollapsed","has","sizeCollapsed","collapsed","resizeData","data","PaneLayout","onCollapse","onExpand","restProps","controller","rootRect","useElementRect","state","setState","paneLayout","PaneLayoutContext","Root","ref","PaneResolutionError","Error","constructor","message","context","helpId","cause","_ref3","randomIdCache","assignId","obj","cachedValue","nanoid","bindCache","memoBind","methodKey","boundMethods","bound","method","concat","bind","isPromise","thing","then","isSerializable","isRecord","serialize","rethrowWithPaneResolutionErrors","next","unresolvedPane","wrapWithPublishReplay","pipe","publishReplay","refCount","createPaneResolver","middleware","resolvePane","isObservable","switchMap","result","observableOf","resolveIntent","resolvedPaneCache","memoize","nextFn","key","join","cachedResolvedPane","fallbackEditorPanes","traverse","_ref4","currentId","intent","parent","levelIndex","structureContext","targetId","schemaTypeName","otherParams","splitIndex","resolvedPane","firstValueFrom","depthIndex","canHandleIntent","call","pane","child","items","Promise","all","nextLevelIndex","resolve","_id","flat","matchingPanes","rootPaneNode","closestPaneToRoot","useDeskTool","deskTool","useContext","DeskToolContext","fallbackEditorChild","nodeId","replace","resolveDocumentNode","defaultDocumentBuilder","schemaType","documentId","title","initialValueTemplate","hashContext","JSON","stringify","parentId","serializeOptionsIndex","serializeOptions","serializeOptionsPath","hashResolvedPaneMeta","meta","normalized","routerPaneSibling","paneNode","resolvePaneTree","_ref5","flattenedRouterPanes","current","resolvedPaneMeta","loadingPanes","restIndex","loadingPanePath","_","currentIndex","loadingPane","nextStream","startsWith","nextResolvedPanes","console","warn","generateHelpUrl","createResolvedPaneNodeStream","_ref6","routerPanesStream","initialCacheState","cacheKeysByFlatIndex","NEVER","resolvedPanes$","rawRouterPanes","routerPanes","flatMap","routerPaneGroup","startWith","pairwise","_ref7","prev","curr","prevValue","currValue","isEqual","diffIndex","scan","acc","beforeDiffIndex","afterDiffIndex","keysToKeep","keySet","keysToDelete","cacheKeySet","_ref8","nextPane","prevPane","distinctUntilChanged","nextValue","useRouterPanesStream","routerStateSubject","ReplaySubject","routerPanes$","asObservable","_routerState","useResolvedPanes","error","setError","setData","paneDataItems","resolvedPanes","reduce","groupsLen","itemId","paneDataItem","active","childItemId","LOADING_PANE","selected","subscription","unsubscribe","ensureDocumentIdAndType","documentStore","uuid","resolvedType","resolveTypeForDocument","EMPTY_RECORD","IntentResolver","memo","IntentResolver2","maybeIntent","intentName","useDocumentStore","cancelled","effect","catch","PathSegment","styled","span","_templateObject","_taggedTemplateLiteral","formatStack","stack","RegExp","window","location","host","StructureError","_ref9","showStack","SerializeError","includes","handleReload","reload","Card","height","overflow","padding","sizing","tone","Container","Heading","as","jsxs","marginTop","radius","shadow","Stack","space","Label","Code","segment","Box","Text","href","rel","target","Button","text","icon","SyncIcon","onClick","UnknownPane","isSelected","paneKey","Pane","PaneHeader","PaneContent","muted","getWaitMessages","thresholds","isDev","src","of","merge","_ref10","mapTo","delay","DEFAULT_MESSAGE","Content","Flex","_templateObject2","LoadingPane","messageProp","resolvedMessage","split","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","content","align","direction","justify","Spinner","size","displayName","paneMap","component","lazy","document","documentList","list","DeskToolPane","PaneComponent","Suspense","fallback","isActive","_ref11","_ref12","prevParams","prevPayload","keys","Object","ErrorPane","paddingX","paddingY","getOpErrorTitle","op","getOpSuccessTitle","IGNORE_OPS","DocumentOperationResults","DocumentOperationResults2","pushToast","useToast","documentType","useDocumentPane","event","useDocumentOperationEvent","prevEvent","useRef","closable","duration","status","description","getHistoryMenuItem","features","hasValue","changesOpen","reviewChanges","action","RestoreIcon","isDisabled","getInspectItem","_ref13","BinaryDocumentIcon","shortcut","getProductionPreviewItem","_ref14","previewUrl","EarthAmericasIcon","getMenuItems","Boolean","fn","isSanityDocument","_type","usePreviewUrl","setPreviewUrl","resolveProductionUrl","useSource","value$","useAsObservable","debounceTime","catchError","getInitialValueTemplateOpts","templates","panePayload","structureNodeTemplate","templateName","urlTemplate","typeTemplates","t","templateParams","emptyObject","DocumentPaneProvider","schema","useSchema","useTemplates","documentActions","documentBadges","unstable_languageFilter","languageFilterResolver","presenceStore","usePresenceStore","paneRouter","usePaneRouter","menuItemGroups","views","viewsProp","paneOptions","useUnique","documentIdRaw","getPublishedId","paneParams","templateParameters","initialValueRaw","useInitialValue","initialValue","patch","useDocumentOperation","editState","useEditState","validation","validationRaw","useValidationStatus","connectionState","useConnectionState","draft","published","languageFilter","focusPath","setFocusPath","pathFromString","activeViewId","timelineMode","setTimelineMode","since","timelineError","setTimelineError","timelineStore","useTimelineStore","onError","rev","onOlderRevision","useTimelineSelector","revTime","sinceAttributes","timelineDisplayed","timelineReady","presence","setPresence","documentPresence","nextPresence","menuItems","inspectOpen","inspect","compareValue","displayed","setTimelineRange","newSince","newRev","handleFocus","nextFocusPath","setLocation","lastActiveAt","Date","toISOString","handleBlur","blurredPath","patchRef","execute","toMutationPatches","patches","handleChange","handleHistoryClose","handleHistoryOpen","handlePaneClose","handlePaneSplit","toggleInspect","toggle","handleMenuAction","open","handleKeyUp","isHotkey","preventDefault","stopPropagation","handleInspectClose","openPath","onSetOpenPath","fieldGroupState","onSetFieldGroupState","collapsedPaths","onSetCollapsedPath","collapsedFieldSets","onSetCollapsedFieldSets","handleOnSetCollapsedPath","prevState","setAtPath","handleOnSetCollapsedFieldSet","handleSetActiveFieldGroup","groupName","requiredPermission","_createdAt","liveEdit","docId","docPermissionsInput","getDraftId","permissions","isPermissionsLoading","useDocumentValuePermissions","permission","isNonExistent","readOnly","hasNoPermission","granted","updateActionDisabled","isActionEnabled","createActionDisabled","reconnecting","isLocked","transactionSyncLock","enabled","formState","useFormState","comparisonValue","formStateRef","setOpenPath","ops","getExpandOperations","forEach","documentPane","onBlur","onChange","onFocus","onPathOpen","onHistoryClose","onHistoryOpen","onInspectClose","onKeyUp","onMenuAction","onPaneClose","onPaneSplit","onSetActiveFieldGroup","onSetCollapsedFieldSet","pathFromUrl","resolveKeyedPath","DocumentPaneContext","TIMELINE_LABELS","create","discardDraft","initial","editDraft","editLive","publish","unpublish","TIMELINE_ICON_COMPONENTS","AddCircleIcon","TrashIcon","CloseIcon","EditIcon","PublishIcon","UnpublishIcon","formatTimelineEventLabel","getTimelineEventIconComponent","UserAvatarStack","_ref15","maxLength","userIds","AvatarStack","userId","UserAvatar","user","withTooltip","IconWrapper","_ref16","theme","borderColor","sanity","color","base","skeleton","css","_templateObject3","_ref17","$selected","_templateObject4","_templateObject5","IconBox","_templateObject6","EventLabel","_templateObject7","TimestampBox","_templateObject8","_ref18","rem","TIMELINE_ITEM_EVENT_TONE","withinSelection","TimelineItem","_ref19","chunk","isFirst","isLatest","onSelect","timestamp","iconComponent","authorUserIds","authors","formattedTimestamp","parsedDate","formattedDate","format","handleClick","evt","mode","createElement","margin","weight","StackWrapper","_templateObject9","ListWrapper","_templateObject10","_ref20","$visible","_templateObject11","_templateObject12","Timeline","_ref21","chunks","disabledBeforeFirstChunk","hasMoreChunks","lastChunk","onLoadMore","firstChunk","filteredChunks","c","selectedIndex","findIndex","renderItem","_ref22","activeIndex","paddingBottom","paddingTop","endTimestamp","CommandList","activeItemDataAttr","ariaLabel","autoFocus","initialIndex","initialScrollAlign","itemHeight","onEndReached","onEndReachedIndexOffset","overscan","wrapAround","TimelineError","gap","TextWithTone","ErrorOutlineIcon","Popover","_templateObject13","TimelineMenu","_ref23","placement","setOpen","button","setButton","popover","setPopover","toast","loading","isLoading","realRevChunk","sinceTime","handleOpen","handleClose","handleClickOutside","handleGlobalKeyDown","focus","useClickOutside","useGlobalKeyDown","selectRev","revChunk","sinceId","revId","findRangeForRev","err","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","timeLabel","useFormattedTimestamp","revLabel","upperFirst","sinceLabel","buttonLabel","constrainSize","portal","disabled","fontSize","iconRight","SelectIcon","time","formatted","LoadingContent","collectLatestAuthorAnnotations","diff","authorMap","visitDiff","annotation","author","previous","values","Scroller","ScrollContainer","_templateObject14","ChangesPanel","usePane","scrollRef","selectionState","isComparingCurrent","documentContext","React","FieldWrapper","ChangeFieldWrapper","rootDiff","changeAnnotations","style","borderLeft","subActions","paddingRight","DiffTooltip","annotations","_ref24","tabs","BoundaryElementProvider","_ref25","NoChanges","DocumentChangeContext","ChangeList","useDeskToolSetting","namespace","defaultValue","settingsStore","useSettingsStore","setValue","deskToolSettings","forNamespace","settings","forKey","listen","newValue","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","HLRU","isExpanded","keyPath","cached","isArray","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","selectAll","keyCode","metaKey","ctrlKey","isDocumentLike","isString","JSONInspectorWrapper","div","_ref26","fonts","_templateObject15","code","family","sizes","lineHeight","syntax","property","constant","string","boolean","number","Search","query","TextInput","SearchIcon","placeholder","InspectDialog","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","find","setParsedViewMode","setRawViewMode","Dialog","header","DocTitle","onClose","onClickOutside","position","bottom","zIndex","TabList","Tab","label","TabPanel","outline","JSONInspector","search","language","tabIndex","onKeyDown","onDoubleClick","_templateObject16","TextOneLine","_templateObject17","ReferenceChangedBanner","_e","_f","documentPreviewStore","useDocumentPreviewStore","routerReferenceId","parentGroup","parentSibling","hasHistoryOpen","referenceInfo","useMemoObservable","parentRefPathSegment","publishedId","keyedSegmentIndex","p","unstable_observePathsDocumentPair","_ref27","availability","refValue","pathGet","snapshot","handleReloadReference","shouldHide","available","WarningOutlineIcon","marginLeft","_templateObject18","PermissionCheckBanner","_ref28","currentUser","useCurrentUser","plural","roles","r","name","ReadOnlyIcon","array","sep","usePrevious","LONG_ENOUGH_BUT_NOT_TOO_LONG","useConditionalToast","wasEnabled","ev","FormView","hidden","margins","useDocumentPresence","patchChannel","createPatchChannel","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","formRef","focusFirstDescendant","PresenceOverlay","onSubmit","FormBuilder","__internal_patchChannel","changed","focused","groups","members","onFieldGroupSelect","onPathBlur","onPathFocus","onSetFieldSetCollapsed","onSetPathCollapsed","mutations","mut","fromMutationPatches","origin","remotePatches","remoteMutations","localPatches","localMutations","DocumentHeaderTabs","tabPanelId","DocumentHeaderTab","BUTTON_PROPS","warning","info","InfoOutlineIcon","ValidationMenu","boundaryElement","isOpen","useId","hasValidationMarkers","hasErrorMarkers","some","isValidationErrorMarker","hasWarningMarkers","isValidationWarningMarker","hasInfoMarkers","isValidationInfoMarker","buttonProps","MenuButton","menu","Menu","ValidationList","preventOverflow","DocumentHeaderTitle","documentValue","subscribed","useValuePreview","isActionButton","showAsAction","isMenuButton","negate","DocumentPanelHeader","forwardRef","_ref29","contextMenuItems","isValidationOpen","setValidationOpen","showTabs","showVersionMenu","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","backButton","ArrowLeftIcon","Inline","languageFilterComponent","PaneContextMenuButton","itemGroups","onAction","SplitVerticalIcon","_ref30","$disabled","_templateObject19","DocumentPanel","footerHeight","isInspectOpen","setDocumentPanelPortalElement","layoutCollapsed","usePaneLayout","parentPortal","usePortal","headerElement","setHeaderElement","headerRect","portalRef","documentScrollElement","setDocumentScrollElement","activeView","portalElement","splitPanes","formViewHidden","activeViewNode","historical","scrollTo","inspectDialog","PortalProvider","__unstable_elements","VirtualizerScrollInstanceProvider","scrollElement","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","ConfirmDialogContent","fallbackPlacements","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","onCancel","onConfirm","isTopLayer","useLayer","setElement","borderTop","Grid","columns","ModalDialog","dialogId","footer","LegacyLayerProvider","zOffset","__unstable_hideCloseButton","showCloseButton","PopoverDialog","PopoverDialogContent","DocumentActionPortalProvider","DOCUMENT_PANEL_PORTAL_ELEMENT","ActionStateDialog","modalId","unknownModal","ActionMenuButton","actionStates","idPrefix","buttonRef","actionIndex","setActionIndex","setReferenceElement","handleAction","popoverProps","currentAction","ChevronDownIcon","actionState","ActionMenuListItem","onHandle","tooltipContent","MenuItem","Tooltip","marginRight","isValidElement","isValidElementType","Hotkeys","String","s","toUpperCase","DocumentStatusBarActionsInner","showMenu","states","firstActionState","menuActionStates","buttonElement","setButtonElement","toLowerCase","LayerProvider","DocumentStatusBarActions","DocumentStatusBarActions2","_ref31","HistoryStatusBarActions","HistoryStatusBarActions2","revision","historyActions","HistoryRestoreAction","_ref32","BADGE_TONES","primary","success","danger","DocumentBadgesInner","_ref33","badge","Badge","whiteSpace","DocumentBadges","_ref34","_templateObject20","PublishStatus","lastPublished","lastUpdated","lastPublishedTimeAgo","useTimeAgo","minimal","agoSuffix","lastPublishedTime","lastUpdatedTimeAgo","lastUpdatedTime","PlayIcon","StyledMotionPath","motion","_templateObject21","Circle","circle","fill","cx","cy","strokeWidth","Arrows","d","Checkmark","Edit","rotateAnimation","keyframes","_templateObject22","RotateGroup","g","_templateObject23","root","syncing","scale","transition","saved","changes","strokeDasharray","strokeDashoffset","opacity","arrows","checkmark","pathLength","edit","AnimatedStatusIcon","viewBox","stroke","variants","animate","ReviewButton","ReviewChangesButton","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentSparkline","DocumentSparkline2","syncState","useSyncState","_updatedAt","rootFlexElement","setRootFlexElement","rootFlexRect","setStatus","showingRevision","isSyncing","timerId","useLayoutEffect","reviewButton","publishStatus","DocumentActionsBox","_templateObject24","DocumentStatusBar","actionsBoxRef","paddingLeft","KeyboardShortcutResponder","actionsBoxElement","onActionStart","rootRef","activeAction","handleKeyDown","matchingStates","matchingState","DocumentActionShortcuts","setActiveIndex","onComplete","_ref35","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","CHANGES_PANEL_MIN_WIDTH","DIALOG_PROVIDER_POSITION","StyledChangeConnectorRoot","ChangeConnectorRoot","_templateObject25","DocumentPane","parentSourceName","SourceProvider","source","DocumentPaneInner","resolveNewDocumentOptions","usePaneOptions","isLoaded","isDocumentLoaded","useDocumentType","templateItems","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","providerProps","mergeDocumentType","childParams","routerPanesStateLength","activePath","ReferenceInputOptionsProvider","EditReferenceLinkComponent","onEditReference","initialValueTemplateItems","InnerDocumentPane","zOffsets","useZIndex","footerElement","setFooterElement","setActionsBoxElement","documentPanelPortalElement","footerRect","footerH","documentPanel","DialogProvider","PaneFooter","changesPanel","onConnectorSetFocus","isReviewChangesOpen","onOpenReviewChanges","onSetFocus","NoDocumentTypesScreen","StyledPaneLayout","_templateObject26","isSaveHotkey","DeskTool","DeskTool2","_ref36","onPaneChange","setLayoutCollapsed","isResolvingIntent","setPortalElement","handleRootCollapse","handleRootExpand","addEventListener","removeEventListener","hasDefinedDocumentTypes","_original","types","_isCustomDocumentTypeDefinition","_ref37","paneIndex","DeskToolBoundary","tool","_ref38","unstable_sources","sources","useWorkspace","firstSource","defaultDocumentNode","structure","setActivePanes","ErrorBoundary","onCatch","DeskToolProvider"],"mappings":"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"}