{"version":3,"file":"index-acff8586.js","sources":["../../src/desk/panes/list/ListPaneHeader.tsx","../../src/desk/panes/list/ListPaneContent.tsx","../../src/desk/panes/list/ListPane.tsx"],"sourcesContent":["import {ArrowLeftIcon} from '@sanity/icons'\nimport {Button} from '@sanity/ui'\nimport React from 'react'\nimport {BackLink, PaneHeader, PaneHeaderActions, usePane} from '../../components'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {useDeskTool} from '../../useDeskTool'\n\ninterface ListPaneHeaderProps {\n  index: number\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  title: string\n}\n\nexport const ListPaneHeader = ({index, menuItems, menuItemGroups, title}: ListPaneHeaderProps) => {\n  const {features} = useDeskTool()\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  return (\n    <PaneHeader\n      actions={<PaneHeaderActions menuItems={menuItems} menuItemGroups={menuItemGroups} />}\n      backButton={\n        features.backButton &&\n        index > 0 && <Button as={BackLink} data-as=\"a\" icon={ArrowLeftIcon} mode=\"bleed\" />\n      }\n      tabIndex={tabIndex}\n      title={title}\n    />\n  )\n}\n","import React, {useCallback} from 'react'\nimport {Box} from '@sanity/ui'\nimport styled from 'styled-components'\nimport {PaneContent, PaneItem, usePaneLayout} from '../../components'\nimport {PaneListItem, PaneListItemDivider} from '../../types'\nimport {CommandList, CommandListItemContext, GeneralPreviewLayoutKey} from 'sanity'\n\ninterface ListPaneContentProps {\n  childItemId?: string\n  isActive?: boolean\n  items: (PaneListItem<unknown> | PaneListItemDivider)[] | undefined\n  layout?: GeneralPreviewLayoutKey\n  showIcons: boolean\n  title: string\n}\n\nconst Divider = styled.hr`\n  background-color: var(--card-border-color);\n  height: 1px;\n  margin: 0;\n  border: none;\n`\n\n/**\n * @internal\n */\nexport function ListPaneContent(props: ListPaneContentProps) {\n  const {childItemId, items, isActive, layout, showIcons, title} = props\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  const getItemDisabled = useCallback(\n    (itemIndex: number) => {\n      return items?.find((_, i) => i === itemIndex)?.type === 'divider'\n    },\n    [items]\n  )\n\n  const shouldShowIconForItem = useCallback(\n    (item: PaneListItem): boolean => {\n      const itemShowIcon = item.displayOptions?.showIcon\n\n      // Specific true/false on item should have precedence over list setting\n      if (typeof itemShowIcon !== 'undefined') {\n        return itemShowIcon !== false // Boolean(item.icon)\n      }\n\n      // If no item setting is defined, defer to the pane settings\n      return showIcons !== false // Boolean(item.icon)\n    },\n    [showIcons]\n  )\n\n  const renderItem = useCallback(\n    (item: PaneListItem<unknown> | PaneListItemDivider, ctx: CommandListItemContext) => {\n      const {virtualIndex: itemIndex} = ctx\n\n      if (item.type === 'divider') {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Box key={`divider-${itemIndex}`} marginTop={1} marginBottom={2}>\n            <Divider />\n          </Box>\n        )\n      }\n\n      const pressed = !isActive && childItemId === item.id\n      const selected = isActive && childItemId === item.id\n      // If this is a document list item, pass on the ID and type,\n      // otherwise leave it undefined to use the passed title and gang\n      const value =\n        item._id && item.schemaType\n          ? {_id: item._id, _type: item.schemaType.name, title: item.title}\n          : undefined\n\n      return (\n        <PaneItem\n          icon={shouldShowIconForItem(item) ? item.icon : false}\n          id={item.id}\n          key={item.id}\n          layout={layout}\n          marginBottom={1}\n          pressed={pressed}\n          schemaType={item.schemaType}\n          selected={selected}\n          title={item.title}\n          value={value}\n        />\n      )\n    },\n    [childItemId, isActive, layout, shouldShowIconForItem]\n  )\n\n  return (\n    <PaneContent overflow={layoutCollapsed ? 'hidden' : 'auto'}>\n      {items && items.length > 0 && (\n        <CommandList\n          activeItemDataAttr=\"data-hovered\"\n          ariaLabel={`List of ${title}`}\n          canReceiveFocus\n          focusRingOffset={-3}\n          getItemDisabled={getItemDisabled}\n          itemHeight={51}\n          items={items}\n          onlyShowSelectionWhenActive\n          padding={2}\n          paddingBottom={1}\n          renderItem={renderItem}\n          wrapAround={false}\n        />\n      )}\n    </PaneContent>\n  )\n}\n","import React from 'react'\nimport {Card, Code} from '@sanity/ui'\nimport {Pane} from '../../components'\nimport {BaseDeskToolPaneProps} from '../types'\nimport {_DEBUG} from '../../constants'\nimport {ListPaneHeader} from './ListPaneHeader'\nimport {ListPaneContent} from './ListPaneContent'\n\ntype ListPaneProps = BaseDeskToolPaneProps<'list'>\n\n/**\n * @internal\n */\nexport function ListPane(props: ListPaneProps) {\n  const {childItemId, index, isActive, isSelected, pane, paneKey} = props\n\n  const {defaultLayout, displayOptions, items, menuItems, menuItemGroups, title} = pane\n  const showIcons = displayOptions?.showIcons !== false\n\n  return (\n    <Pane\n      currentMaxWidth={350}\n      data-testid=\"desk-tool-list-pane\"\n      data-ui=\"ListPane\"\n      id={paneKey}\n      maxWidth={640}\n      minWidth={320}\n      selected={isSelected}\n    >\n      {_DEBUG && (\n        <Card padding={4} tone=\"transparent\">\n          <Code>{pane.source || '(none)'}</Code>\n        </Card>\n      )}\n\n      <ListPaneHeader\n        index={index}\n        menuItems={menuItems}\n        menuItemGroups={menuItemGroups}\n        title={title}\n      />\n\n      <ListPaneContent\n        childItemId={childItemId}\n        isActive={isActive}\n        items={items}\n        layout={defaultLayout}\n        key={paneKey}\n        showIcons={showIcons}\n        title={title}\n      />\n    </Pane>\n  )\n}\n"],"names":["ListPaneHeader","_ref","index","menuItems","menuItemGroups","title","features","useDeskTool","collapsed","isLast","usePane","tabIndex","jsx","PaneHeader","actions","PaneHeaderActions","backButton","Button","as","BackLink","icon","ArrowLeftIcon","mode","Divider","styled","default","hr","_templateObject","_taggedTemplateLiteral","ListPaneContent","props","childItemId","items","isActive","layout","showIcons","layoutCollapsed","usePaneLayout","getItemDisabled","useCallback","itemIndex","_a","find","_","i","type","shouldShowIconForItem","item","itemShowIcon","displayOptions","showIcon","renderItem","ctx","virtualIndex","Box","marginTop","marginBottom","children","concat","pressed","id","selected","value","_id","schemaType","_type","name","PaneItem","PaneContent","overflow","length","CommandList","activeItemDataAttr","ariaLabel","canReceiveFocus","focusRingOffset","itemHeight","onlyShowSelectionWhenActive","padding","paddingBottom","wrapAround","ListPane","isSelected","pane","paneKey","defaultLayout","jsxs","Pane","currentMaxWidth","maxWidth","minWidth","_DEBUG"],"mappings":"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"}