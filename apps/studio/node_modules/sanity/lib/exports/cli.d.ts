import {CliClientOptions} from '@sanity/cli'
import {CliConfig} from '@sanity/cli'
import {createCliConfig} from '@sanity/cli'
import {defineCliConfig} from '@sanity/cli'
import {getCliClient} from '@sanity/cli'

export {CliClientOptions}

export {CliConfig}

export {createCliConfig}

export {defineCliConfig}

export {getCliClient}

/**
 * Get environment variables prefixed with SANITY_STUDIO_, as an object.
 *
 * Specify `options.prefix` to add a prefix to the environment variable keys,
 * eg: `getStudioEnvironmentVariables({prefix: 'process.env.'})`
 *
 * Specify `options.envFile` to include environment variables from dotenv files (`.env`),
 * in the same way the studio does. A `mode` must be specified, usually `development`
 * or `production`, which will load the corresponding `.env.development` or `.env.production`.
 * To specify where to look for the dotenv files, specify `options.envFile.envDir`.
 *
 * Specify `options.jsonEncode` to JSON-encode the values, which is handy if you want to pass
 * this to a bundlers hardcoded defines, such as Vite's `define` or Webpack's `DefinePlugin`.
 *
 * @param options - Options for the environment variable loading
 * @returns Object of studio environment variables
 * @public
 */
export declare function getStudioEnvironmentVariables(options?: {
  prefix?: string
  envFile?:
    | {
        mode: string
        envDir?: string
      }
    | false
  jsonEncode?: boolean
}): Record<string, string>

export {}
